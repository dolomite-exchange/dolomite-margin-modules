/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GLPPriceOracleV1,
  GLPPriceOracleV1Interface,
} from "../../contracts/GLPPriceOracleV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dsGlp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DFS_GLP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GLP_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GMX_REGISTRY",
    outputs: [
      {
        internalType: "contract IGmxRegistryV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glp",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      {
        internalType: "contract IGLPManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxVault",
    outputs: [
      {
        internalType: "contract IGmxVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610acd380380610acd83398101604081905261002f9161007b565b6001600160a01b0391821660a052166080526100b8565b60006001600160a01b0382165b92915050565b61006281610046565b811461006d57600080fd5b50565b805161005381610059565b6000806040838503121561009157610091600080fd5b600061009d8585610070565b92505060206100ae85828601610070565b9150509250929050565b60805160a0516109d56100f86000396000818161011b015281816101de0152818161027601526102d101526000818160f4015261016201526109d56000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b62815bf1161005b578063b62815bf146100ef578063ba1fc25e14610116578063e63a391f1461013d578063fa6db1bc1461014657600080fd5b806341976e091461008d578063662f1c68146100b657806378a207ee146100d2578063b3b3453e146100e7575b600080fd5b6100a061009b3660046106b0565b61014e565b6040516100ad91906106f8565b60405180910390f35b6100c5670de0b6b3a764000081565b6040516100ad9190610706565b6100da6101da565b6040516100ad9190610744565b6100da610272565b6100da7f000000000000000000000000000000000000000000000000000000000000000081565b6100da7f000000000000000000000000000000000000000000000000000000000000000081565b6100c561271081565b6100da6102cd565b6040805160208101909152600081526101bf7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316146f474c5050726963654f7261636c65563160801b6c34b73b30b634b2103a37b5b2b760991b610328565b60405180602001604052806101d261038b565b905292915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166378a207ee6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023557600080fd5b505afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610771565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3b3453e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023557600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fa6db1bc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023557600080fd5b8261038657610336826105e4565b6101d160f51b610345836105e4565b604051602001610357939291906107f0565b60408051601f198184030181529082905262461bcd60e51b825261037d91600401610853565b60405180910390fd5b505050565b600080610396610272565b90506000816001600160a01b0316637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b919061087c565b826001600160a01b0316634d47b3046040518163ffffffff1660e01b815260040160206040518083038186803b15801561044457600080fd5b505afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c919061087c565b61048691906108b3565b905060006104926101da565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ca57600080fd5b505afa1580156104de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610502919061087c565b905060008111610514576105146108cb565b600081670de0b6b3a76400006105286102cd565b6001600160a01b03166368a0a3e060006040518263ffffffff1660e01b815260040161055491906108e9565b60206040518083038186803b15801561056c57600080fd5b505afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a4919061087c565b6105ae91906108f7565b6105b8919061092c565b90506127106105c784836108f7565b6105d1919061092c565b6105db9082610940565b94505050505090565b60606000826040516020016105f9919061095d565b60408051601f19818403018152919052905060205b8015610664578061061e81610972565b91505081818151811061063357610633610989565b01602001516001600160f81b0319161561065f5760006106548260016108b3565b835250909392505050565b61060e565b505060408051600081526020810190915292915050565b60006001600160a01b0382165b92915050565b6106978161067b565b81146106a257600080fd5b50565b80356106888161068e565b6000602082840312156106c5576106c5600080fd5b60006106d184846106a5565b949350505050565b805b82525050565b805160208301906106f284826106d9565b50505050565b6020810161068882846106e1565b6020810161068882846106d9565b60006001600160a01b038216610688565b600061068882610714565b600061068882610725565b6106db81610730565b60208101610688828461073b565b60006106888261067b565b61069781610752565b80516106888161075d565b60006020828403121561078657610786600080fd5b60006106d18484610766565b60005b838110156107ad578181015183820152602001610795565b838111156106f25750506000910152565b60006107c8825190565b6107d6818560208601610792565b9290920192915050565b6001600160f01b031981166106db565b60006107fc82866107be565b915061080882856107e0565b60028201915061081882846107be565b95945050505050565b600061082b825190565b808452602084019350610842818560208601610792565b601f01601f19169290920192915050565b602080825281016108648184610821565b9392505050565b80610697565b80516106888161086b565b60006020828403121561089157610891600080fd5b60006106d18484610871565b634e487b7160e01b600052601160045260246000fd5b600082198211156108c6576108c661089d565b500190565b634e487b7160e01b600052600160045260246000fd5b8015156106db565b6020810161068882846108e1565b60008160001904831182151516156109115761091161089d565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261093b5761093b610916565b500490565b6000828210156109525761095261089d565b500390565b806106db565b60006109698284610957565b50602001919050565b6000816109815761098161089d565b506000190190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122015b3b23d9f4ab0673284d2397842f653dc5002325e2d7eabbcf6287b96ff887964736f6c63430008090033";

type GLPPriceOracleV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GLPPriceOracleV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GLPPriceOracleV1__factory extends ContractFactory {
  constructor(...args: GLPPriceOracleV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gmxRegistry: string,
    _dsGlp: string,
    overrides?: Overrides & { from?: string }
  ): Promise<GLPPriceOracleV1> {
    return super.deploy(
      _gmxRegistry,
      _dsGlp,
      overrides || {}
    ) as Promise<GLPPriceOracleV1>;
  }
  override getDeployTransaction(
    _gmxRegistry: string,
    _dsGlp: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_gmxRegistry, _dsGlp, overrides || {});
  }
  override attach(address: string): GLPPriceOracleV1 {
    return super.attach(address) as GLPPriceOracleV1;
  }
  override connect(signer: Signer): GLPPriceOracleV1__factory {
    return super.connect(signer) as GLPPriceOracleV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GLPPriceOracleV1Interface {
    return new utils.Interface(_abi) as GLPPriceOracleV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GLPPriceOracleV1 {
    return new Contract(address, _abi, signerOrProvider) as GLPPriceOracleV1;
  }
}
