/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  USDCRegistry,
  USDCRegistryInterface,
} from "../../contracts/USDCRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_aaveLendingPool",
        type: "address",
      },
    ],
    name: "AaveLendingPoolSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN_OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveLendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aaveLendingPool",
        type: "address",
      },
    ],
    name: "ownerSetAaveLendingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c4c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c4d66de81161005b578063c4d66de8146100bd578063cbffd921146100d0578063e9d337b8146100e5578063ffd1271b146100ed57600080fd5b806315c14a4a14610082578063884ce7ed146100a0578063bd12584f146100b5575b600080fd5b61008a610100565b60405161009791906108b8565b60405180910390f35b6100b36100ae3660046108f9565b610139565b005b61008a6101a3565b6100b36100cb3660046108f9565b6101d3565b6100d86102ac565b604051610097919061092b565b61008a610326565b6100b36100fb3660046108f9565b610356565b600061013461013060017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa1761094f565b5490565b905090565b336101966101456102ac565b6001600160a01b0316826001600160a01b0316147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d697465008461036b565b61019f826103dd565b5050565b600061013461013060017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a61094f565b600054610100900460ff16158080156101f35750600054600160ff909116105b8061020d5750303b15801561020d575060005460ff166001145b6102325760405162461bcd60e51b815260040161022990610966565b60405180910390fd5b6000805460ff191660011790558015610255576000805461ff0019166101001790555b61025e8261048c565b801561019f576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906102a0906001906109cc565b60405180910390a15050565b60006102b6610100565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ee57600080fd5b505afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013491906109e5565b600061013461013060017f3f5d3ee1e10a4adbb4917aaa715505695ae4fa4a6219af1c00bfe5fe80427b1961094f565b336103626101456102ac565b61019f8261048c565b836103d75761037983610576565b6101d160f51b61038884610576565b61080f60f21b61039785610611565b6040516103b1959493929190601f60f91b90602001610a74565b60408051601f198184030181529082905262461bcd60e51b825261022991600401610b04565b50505050565b6104226001600160a01b03821615156b55534443526567697374727960a01b7f496e76616c696420616176654c656e64696e67506f6f6c000000000000000000610757565b61045561045060017f3f5d3ee1e10a4adbb4917aaa715505695ae4fa4a6219af1c00bfe5fe80427b1961094f565b829055565b6040516001600160a01b038216907f72d07b868c74d038cd9f93593cd128945ef5b5e111e75c23f918b27cc947334290600090a250565b6104d16001600160a01b03821615156b42617365526567697374727960a01b7f496e76616c696420646f6c6f6d69746552656769737472790000000000000000610757565b60006104f482632f32699960e01b6040518060200160405280600081525061078b565b90508080602001905181019061050a91906109e5565b5061053e61053960017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a61094f565b839055565b6040516001600160a01b038316907fd4968e6ff4b2df084b2b71aa90bc2137eee816091d7f1c17f0b66a602f9dbaeb90600090a25050565b606060008260405160200161058b9190610b22565b60408051601f19818403018152919052905060205b80156105f657806105b081610b37565b9150508181815181106105c5576105c5610b4e565b01602001516001600160f81b031916156105f15760006105e6826001610b64565b835250909392505050565b6105a0565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061065757610657610b4e565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061068657610686610b4e565b60200101906001600160f81b031916908160001a90535060005b60148110156106095760006106b6826002610b7c565b90506106c4600f8516610856565b836106d083602961094f565b815181106106e0576106e0610b4e565b60200101906001600160f81b031916908160001a905350600484901c935061070a600f8516610856565b8361071683602861094f565b8151811061072657610726610b4e565b60200101906001600160f81b031916908160001a9053505060049290921c918061074f81610b9b565b9150506106a0565b826107865761076582610576565b6101d160f51b61077483610576565b6040516020016103b193929190610bb6565b505050565b6060600080856001600160a01b031685856040516020016107ad929190610bee565b60408051601f19818403018152908290526107c791610c0a565b600060405180830381855afa9150503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b509150915061084d82801561081d575060008251115b6c2b30b634b230ba34b7b72634b160991b7410d85b1b081d1bc81d185c99d95d0819985a5b1959605a1b8961036b565b95945050505050565b6000600a8210156108755761086c603083610b64565b60f81b92915050565b61086c605783610b64565b60006001600160a01b0382165b92915050565b600061088d82610880565b600061088d82610893565b6108b28161089e565b82525050565b6020810161088d82846108a9565b60006001600160a01b03821661088d565b6108e0816108c6565b81146108eb57600080fd5b50565b803561088d816108d7565b60006020828403121561090e5761090e600080fd5b600061091a84846108ee565b949350505050565b6108b2816108c6565b6020810161088d8284610922565b634e487b7160e01b600052601160045260246000fd5b60008282101561096157610961610939565b500390565b6020808252810161088d81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b600060ff821661088d565b6108b2816109b8565b6020810161088d82846109c3565b805161088d816108d7565b6000602082840312156109fa576109fa600080fd5b600061091a84846109da565b60005b83811015610a21578181015183820152602001610a09565b838111156103d75750506000910152565b6000610a3c825190565b610a4a818560208601610a06565b9290920192915050565b6001600160f01b031981166108b2565b6001600160f81b031981166108b2565b6000610a808289610a32565b9150610a8c8288610a54565b600282019150610a9c8287610a32565b9150610aa88286610a54565b600282019150610ab88285610a32565b9150610ac48284610a64565b506001019695505050505050565b6000610adc825190565b808452602084019350610af3818560208601610a06565b601f01601f19169290920192915050565b60208082528101610b158184610ad2565b9392505050565b806108b2565b6000610b2e8284610b1c565b50602001919050565b600081610b4657610b46610939565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610b7757610b77610939565b500190565b6000816000190483118215151615610b9657610b96610939565b500290565b6000600019821415610baf57610baf610939565b5060010190565b6000610bc28286610a32565b9150610bce8285610a54565b60028201915061084d8284610a32565b6001600160e01b031981166108b2565b6000610bfa8285610bde565b60048201915061091a8284610a32565b6000610b158284610a3256fea2646970667358221220f1ab7753112bf9a6ba045ad72dcfcef3274a1e18db3c3594d0b55a64afcfe8d864736f6c63430008090033";

type USDCRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDCRegistry__factory extends ContractFactory {
  constructor(...args: USDCRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<USDCRegistry> {
    return super.deploy(overrides || {}) as Promise<USDCRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): USDCRegistry {
    return super.attach(address) as USDCRegistry;
  }
  override connect(signer: Signer): USDCRegistry__factory {
    return super.connect(signer) as USDCRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCRegistryInterface {
    return new utils.Interface(_abi) as USDCRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDCRegistry {
    return new Contract(address, _abi, signerOrProvider) as USDCRegistry;
  }
}
