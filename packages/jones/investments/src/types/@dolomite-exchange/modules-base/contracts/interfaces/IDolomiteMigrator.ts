/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export declare namespace IDolomiteMigrator {
  export type TransformerStruct = {
    transformer: string;
    soloAllowable: boolean;
  };

  export type TransformerStructOutput = [string, boolean] & {
    transformer: string;
    soloAllowable: boolean;
  };
}

export declare namespace IDolomiteStructs {
  export type AccountInfoStruct = { owner: string; number: BigNumberish };

  export type AccountInfoStructOutput = [string, BigNumber] & {
    owner: string;
    number: BigNumber;
  };
}

export interface IDolomiteMigratorInterface extends utils.Interface {
  functions: {
    "getTransformerByMarketIds(uint256,uint256)": FunctionFragment;
    "migrate((address,uint256)[],uint256,uint256,bytes)": FunctionFragment;
    "ownerSetHandler(address)": FunctionFragment;
    "ownerSetTransformer(uint256,uint256,address,bool)": FunctionFragment;
    "selfMigrate(uint256,uint256,uint256,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getTransformerByMarketIds"
      | "migrate"
      | "ownerSetHandler"
      | "ownerSetTransformer"
      | "selfMigrate"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getTransformerByMarketIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "migrate",
    values: [
      IDolomiteStructs.AccountInfoStruct[],
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetHandler",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetTransformer",
    values: [BigNumberish, BigNumberish, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "selfMigrate",
    values: [BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "getTransformerByMarketIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "migrate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetHandler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetTransformer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "selfMigrate",
    data: BytesLike
  ): Result;

  events: {
    "HandlerSet(address)": EventFragment;
    "MigrationComplete(address,uint256,uint256,uint256)": EventFragment;
    "TransformerSet(uint256,uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "HandlerSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MigrationComplete"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransformerSet"): EventFragment;
}

export interface HandlerSetEventObject {
  _handler: string;
}
export type HandlerSetEvent = TypedEvent<[string], HandlerSetEventObject>;

export type HandlerSetEventFilter = TypedEventFilter<HandlerSetEvent>;

export interface MigrationCompleteEventObject {
  _accountOwner: string;
  _accountNumber: BigNumber;
  _fromMarketId: BigNumber;
  _toMarketId: BigNumber;
}
export type MigrationCompleteEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  MigrationCompleteEventObject
>;

export type MigrationCompleteEventFilter =
  TypedEventFilter<MigrationCompleteEvent>;

export interface TransformerSetEventObject {
  _fromMarketId: BigNumber;
  _toMarketId: BigNumber;
  _transformer: string;
}
export type TransformerSetEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  TransformerSetEventObject
>;

export type TransformerSetEventFilter = TypedEventFilter<TransformerSetEvent>;

export interface IDolomiteMigrator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IDolomiteMigratorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getTransformerByMarketIds(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IDolomiteMigrator.TransformerStructOutput]>;

    migrate(
      _accounts: IDolomiteStructs.AccountInfoStruct[],
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetHandler(
      _handler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetTransformer(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _transformer: string,
      _soloAllowable: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    selfMigrate(
      _accountNumber: BigNumberish,
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  getTransformerByMarketIds(
    _fromMarketId: BigNumberish,
    _toMarketId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<IDolomiteMigrator.TransformerStructOutput>;

  migrate(
    _accounts: IDolomiteStructs.AccountInfoStruct[],
    _fromMarketId: BigNumberish,
    _toMarketId: BigNumberish,
    _extraData: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetHandler(
    _handler: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetTransformer(
    _fromMarketId: BigNumberish,
    _toMarketId: BigNumberish,
    _transformer: string,
    _soloAllowable: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  selfMigrate(
    _accountNumber: BigNumberish,
    _fromMarketId: BigNumberish,
    _toMarketId: BigNumberish,
    _extraData: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    getTransformerByMarketIds(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<IDolomiteMigrator.TransformerStructOutput>;

    migrate(
      _accounts: IDolomiteStructs.AccountInfoStruct[],
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetHandler(_handler: string, overrides?: CallOverrides): Promise<void>;

    ownerSetTransformer(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _transformer: string,
      _soloAllowable: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    selfMigrate(
      _accountNumber: BigNumberish,
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "HandlerSet(address)"(_handler?: null): HandlerSetEventFilter;
    HandlerSet(_handler?: null): HandlerSetEventFilter;

    "MigrationComplete(address,uint256,uint256,uint256)"(
      _accountOwner?: string | null,
      _accountNumber?: null,
      _fromMarketId?: null,
      _toMarketId?: null
    ): MigrationCompleteEventFilter;
    MigrationComplete(
      _accountOwner?: string | null,
      _accountNumber?: null,
      _fromMarketId?: null,
      _toMarketId?: null
    ): MigrationCompleteEventFilter;

    "TransformerSet(uint256,uint256,address)"(
      _fromMarketId?: null,
      _toMarketId?: null,
      _transformer?: null
    ): TransformerSetEventFilter;
    TransformerSet(
      _fromMarketId?: null,
      _toMarketId?: null,
      _transformer?: null
    ): TransformerSetEventFilter;
  };

  estimateGas: {
    getTransformerByMarketIds(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    migrate(
      _accounts: IDolomiteStructs.AccountInfoStruct[],
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetHandler(
      _handler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetTransformer(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _transformer: string,
      _soloAllowable: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    selfMigrate(
      _accountNumber: BigNumberish,
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getTransformerByMarketIds(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    migrate(
      _accounts: IDolomiteStructs.AccountInfoStruct[],
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetHandler(
      _handler: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetTransformer(
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _transformer: string,
      _soloAllowable: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    selfMigrate(
      _accountNumber: BigNumberish,
      _fromMarketId: BigNumberish,
      _toMarketId: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
