/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace IDolomiteStructs {
  export type MonetaryPriceStruct = { value: BigNumberish };

  export type MonetaryPriceStructOutput = [BigNumber] & { value: BigNumber };
}

export interface JonesUSDCWithChainlinkAutomationPriceOracleInterface
  extends utils.Interface {
  functions: {
    "DJUSDC()": FunctionFragment;
    "DOLOMITE_MARGIN()": FunctionFragment;
    "JONES_USDC_REGISTRY()": FunctionFragment;
    "USDC_MARKET_ID()": FunctionFragment;
    "chainlinkRegistry()": FunctionFragment;
    "checkUpkeep(bytes)": FunctionFragment;
    "exchangeRateDenominator()": FunctionFragment;
    "exchangeRateNumerator()": FunctionFragment;
    "forwarder()": FunctionFragment;
    "getPrice(address)": FunctionFragment;
    "gracePeriod()": FunctionFragment;
    "heartbeat()": FunctionFragment;
    "initializeForwarder(uint256)": FunctionFragment;
    "lastUpdateTimestamp()": FunctionFragment;
    "lowerEdge()": FunctionFragment;
    "ownerSetChainlinkRegistry(address)": FunctionFragment;
    "ownerSetForwarder(address)": FunctionFragment;
    "ownerSetGracePeriod(uint256)": FunctionFragment;
    "ownerSetHeartbeat(uint256)": FunctionFragment;
    "ownerSetLowerEdge(uint256)": FunctionFragment;
    "ownerSetUpperEdge(uint256)": FunctionFragment;
    "performUpkeep(bytes)": FunctionFragment;
    "upperEdge()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DJUSDC"
      | "DOLOMITE_MARGIN"
      | "JONES_USDC_REGISTRY"
      | "USDC_MARKET_ID"
      | "chainlinkRegistry"
      | "checkUpkeep"
      | "exchangeRateDenominator"
      | "exchangeRateNumerator"
      | "forwarder"
      | "getPrice"
      | "gracePeriod"
      | "heartbeat"
      | "initializeForwarder"
      | "lastUpdateTimestamp"
      | "lowerEdge"
      | "ownerSetChainlinkRegistry"
      | "ownerSetForwarder"
      | "ownerSetGracePeriod"
      | "ownerSetHeartbeat"
      | "ownerSetLowerEdge"
      | "ownerSetUpperEdge"
      | "performUpkeep"
      | "upperEdge"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "DJUSDC", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "DOLOMITE_MARGIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "JONES_USDC_REGISTRY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "USDC_MARKET_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "chainlinkRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "checkUpkeep",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "exchangeRateDenominator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "exchangeRateNumerator",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "forwarder", values?: undefined): string;
  encodeFunctionData(functionFragment: "getPrice", values: [string]): string;
  encodeFunctionData(
    functionFragment: "gracePeriod",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "heartbeat", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initializeForwarder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "lastUpdateTimestamp",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "lowerEdge", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerSetChainlinkRegistry",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetForwarder",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetGracePeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetHeartbeat",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetLowerEdge",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetUpperEdge",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "performUpkeep",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "upperEdge", values?: undefined): string;

  decodeFunctionResult(functionFragment: "DJUSDC", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "DOLOMITE_MARGIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "JONES_USDC_REGISTRY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "USDC_MARKET_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "chainlinkRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkUpkeep",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exchangeRateDenominator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exchangeRateNumerator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "forwarder", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "gracePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "heartbeat", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializeForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lastUpdateTimestamp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lowerEdge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetChainlinkRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetGracePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetHeartbeat",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetLowerEdge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetUpperEdge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "performUpkeep",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upperEdge", data: BytesLike): Result;

  events: {
    "ChainlinkRegistrySet(address)": EventFragment;
    "ExchangeRateUpdated(uint256,uint256,uint256)": EventFragment;
    "ForwarderSet(address)": EventFragment;
    "GracePeriodSet(uint256)": EventFragment;
    "HeartbeatSet(uint256)": EventFragment;
    "LowerEdgeSet(uint256)": EventFragment;
    "UpperEdgeSet(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChainlinkRegistrySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExchangeRateUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ForwarderSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GracePeriodSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "HeartbeatSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LowerEdgeSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpperEdgeSet"): EventFragment;
}

export interface ChainlinkRegistrySetEventObject {
  _chainlinkRegistry: string;
}
export type ChainlinkRegistrySetEvent = TypedEvent<
  [string],
  ChainlinkRegistrySetEventObject
>;

export type ChainlinkRegistrySetEventFilter =
  TypedEventFilter<ChainlinkRegistrySetEvent>;

export interface ExchangeRateUpdatedEventObject {
  _lastUpdateTimestamp: BigNumber;
  _exchangeRateNumerator: BigNumber;
  _exchangeRateDenominator: BigNumber;
}
export type ExchangeRateUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ExchangeRateUpdatedEventObject
>;

export type ExchangeRateUpdatedEventFilter =
  TypedEventFilter<ExchangeRateUpdatedEvent>;

export interface ForwarderSetEventObject {
  _forwarder: string;
}
export type ForwarderSetEvent = TypedEvent<[string], ForwarderSetEventObject>;

export type ForwarderSetEventFilter = TypedEventFilter<ForwarderSetEvent>;

export interface GracePeriodSetEventObject {
  _heartbeat: BigNumber;
}
export type GracePeriodSetEvent = TypedEvent<
  [BigNumber],
  GracePeriodSetEventObject
>;

export type GracePeriodSetEventFilter = TypedEventFilter<GracePeriodSetEvent>;

export interface HeartbeatSetEventObject {
  _heartbeat: BigNumber;
}
export type HeartbeatSetEvent = TypedEvent<
  [BigNumber],
  HeartbeatSetEventObject
>;

export type HeartbeatSetEventFilter = TypedEventFilter<HeartbeatSetEvent>;

export interface LowerEdgeSetEventObject {
  _lowerEdge: BigNumber;
}
export type LowerEdgeSetEvent = TypedEvent<
  [BigNumber],
  LowerEdgeSetEventObject
>;

export type LowerEdgeSetEventFilter = TypedEventFilter<LowerEdgeSetEvent>;

export interface UpperEdgeSetEventObject {
  _upperEdge: BigNumber;
}
export type UpperEdgeSetEvent = TypedEvent<
  [BigNumber],
  UpperEdgeSetEventObject
>;

export type UpperEdgeSetEventFilter = TypedEventFilter<UpperEdgeSetEvent>;

export interface JonesUSDCWithChainlinkAutomationPriceOracle
  extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: JonesUSDCWithChainlinkAutomationPriceOracleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DJUSDC(overrides?: CallOverrides): Promise<[string]>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<[string]>;

    JONES_USDC_REGISTRY(overrides?: CallOverrides): Promise<[string]>;

    USDC_MARKET_ID(overrides?: CallOverrides): Promise<[BigNumber]>;

    chainlinkRegistry(overrides?: CallOverrides): Promise<[string]>;

    checkUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    exchangeRateDenominator(overrides?: CallOverrides): Promise<[BigNumber]>;

    exchangeRateNumerator(overrides?: CallOverrides): Promise<[BigNumber]>;

    forwarder(overrides?: CallOverrides): Promise<[string]>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[IDolomiteStructs.MonetaryPriceStructOutput]>;

    gracePeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    heartbeat(overrides?: CallOverrides): Promise<[BigNumber]>;

    initializeForwarder(
      _upkeepId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    lastUpdateTimestamp(overrides?: CallOverrides): Promise<[BigNumber]>;

    lowerEdge(overrides?: CallOverrides): Promise<[BigNumber]>;

    ownerSetChainlinkRegistry(
      _chainlinkRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetGracePeriod(
      _gracePeriod: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetHeartbeat(
      _heartbeat: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetLowerEdge(
      _lowerEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetUpperEdge(
      _upperEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    performUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    upperEdge(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  DJUSDC(overrides?: CallOverrides): Promise<string>;

  DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

  JONES_USDC_REGISTRY(overrides?: CallOverrides): Promise<string>;

  USDC_MARKET_ID(overrides?: CallOverrides): Promise<BigNumber>;

  chainlinkRegistry(overrides?: CallOverrides): Promise<string>;

  checkUpkeep(
    arg0: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  exchangeRateDenominator(overrides?: CallOverrides): Promise<BigNumber>;

  exchangeRateNumerator(overrides?: CallOverrides): Promise<BigNumber>;

  forwarder(overrides?: CallOverrides): Promise<string>;

  getPrice(
    _token: string,
    overrides?: CallOverrides
  ): Promise<IDolomiteStructs.MonetaryPriceStructOutput>;

  gracePeriod(overrides?: CallOverrides): Promise<BigNumber>;

  heartbeat(overrides?: CallOverrides): Promise<BigNumber>;

  initializeForwarder(
    _upkeepId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  lastUpdateTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

  lowerEdge(overrides?: CallOverrides): Promise<BigNumber>;

  ownerSetChainlinkRegistry(
    _chainlinkRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetForwarder(
    _forwarder: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetGracePeriod(
    _gracePeriod: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetHeartbeat(
    _heartbeat: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetLowerEdge(
    _lowerEdge: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetUpperEdge(
    _upperEdge: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  performUpkeep(
    arg0: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  upperEdge(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    DJUSDC(overrides?: CallOverrides): Promise<string>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

    JONES_USDC_REGISTRY(overrides?: CallOverrides): Promise<string>;

    USDC_MARKET_ID(overrides?: CallOverrides): Promise<BigNumber>;

    chainlinkRegistry(overrides?: CallOverrides): Promise<string>;

    checkUpkeep(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { upkeepNeeded: boolean }>;

    exchangeRateDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    exchangeRateNumerator(overrides?: CallOverrides): Promise<BigNumber>;

    forwarder(overrides?: CallOverrides): Promise<string>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<IDolomiteStructs.MonetaryPriceStructOutput>;

    gracePeriod(overrides?: CallOverrides): Promise<BigNumber>;

    heartbeat(overrides?: CallOverrides): Promise<BigNumber>;

    initializeForwarder(
      _upkeepId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    lastUpdateTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

    lowerEdge(overrides?: CallOverrides): Promise<BigNumber>;

    ownerSetChainlinkRegistry(
      _chainlinkRegistry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetForwarder(
      _forwarder: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetGracePeriod(
      _gracePeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetHeartbeat(
      _heartbeat: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetLowerEdge(
      _lowerEdge: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetUpperEdge(
      _upperEdge: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    performUpkeep(arg0: BytesLike, overrides?: CallOverrides): Promise<void>;

    upperEdge(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "ChainlinkRegistrySet(address)"(
      _chainlinkRegistry?: null
    ): ChainlinkRegistrySetEventFilter;
    ChainlinkRegistrySet(
      _chainlinkRegistry?: null
    ): ChainlinkRegistrySetEventFilter;

    "ExchangeRateUpdated(uint256,uint256,uint256)"(
      _lastUpdateTimestamp?: null,
      _exchangeRateNumerator?: null,
      _exchangeRateDenominator?: null
    ): ExchangeRateUpdatedEventFilter;
    ExchangeRateUpdated(
      _lastUpdateTimestamp?: null,
      _exchangeRateNumerator?: null,
      _exchangeRateDenominator?: null
    ): ExchangeRateUpdatedEventFilter;

    "ForwarderSet(address)"(_forwarder?: null): ForwarderSetEventFilter;
    ForwarderSet(_forwarder?: null): ForwarderSetEventFilter;

    "GracePeriodSet(uint256)"(_heartbeat?: null): GracePeriodSetEventFilter;
    GracePeriodSet(_heartbeat?: null): GracePeriodSetEventFilter;

    "HeartbeatSet(uint256)"(_heartbeat?: null): HeartbeatSetEventFilter;
    HeartbeatSet(_heartbeat?: null): HeartbeatSetEventFilter;

    "LowerEdgeSet(uint256)"(_lowerEdge?: null): LowerEdgeSetEventFilter;
    LowerEdgeSet(_lowerEdge?: null): LowerEdgeSetEventFilter;

    "UpperEdgeSet(uint256)"(_upperEdge?: null): UpperEdgeSetEventFilter;
    UpperEdgeSet(_upperEdge?: null): UpperEdgeSetEventFilter;
  };

  estimateGas: {
    DJUSDC(overrides?: CallOverrides): Promise<BigNumber>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<BigNumber>;

    JONES_USDC_REGISTRY(overrides?: CallOverrides): Promise<BigNumber>;

    USDC_MARKET_ID(overrides?: CallOverrides): Promise<BigNumber>;

    chainlinkRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    checkUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    exchangeRateDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    exchangeRateNumerator(overrides?: CallOverrides): Promise<BigNumber>;

    forwarder(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    gracePeriod(overrides?: CallOverrides): Promise<BigNumber>;

    heartbeat(overrides?: CallOverrides): Promise<BigNumber>;

    initializeForwarder(
      _upkeepId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    lastUpdateTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

    lowerEdge(overrides?: CallOverrides): Promise<BigNumber>;

    ownerSetChainlinkRegistry(
      _chainlinkRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetGracePeriod(
      _gracePeriod: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetHeartbeat(
      _heartbeat: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetLowerEdge(
      _lowerEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetUpperEdge(
      _upperEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    performUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    upperEdge(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    DJUSDC(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    JONES_USDC_REGISTRY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    USDC_MARKET_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    chainlinkRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    checkUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    exchangeRateDenominator(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    exchangeRateNumerator(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    forwarder(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gracePeriod(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    heartbeat(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initializeForwarder(
      _upkeepId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    lastUpdateTimestamp(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lowerEdge(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerSetChainlinkRegistry(
      _chainlinkRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetGracePeriod(
      _gracePeriod: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetHeartbeat(
      _heartbeat: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetLowerEdge(
      _lowerEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetUpperEdge(
      _upperEdge: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    performUpkeep(
      arg0: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    upperEdge(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
