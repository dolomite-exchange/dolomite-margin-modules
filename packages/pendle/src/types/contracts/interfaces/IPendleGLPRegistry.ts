/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface IPendleGLPRegistryInterface extends utils.Interface {
  functions: {
    "dolomiteRegistry()": FunctionFragment;
    "ownerSetDolomiteRegistry(address)": FunctionFragment;
    "ownerSetPendleRouter(address)": FunctionFragment;
    "ownerSetPtGlpMarket(address)": FunctionFragment;
    "ownerSetPtGlpToken(address)": FunctionFragment;
    "ownerSetPtOracle(address)": FunctionFragment;
    "ownerSetSyGlpToken(address)": FunctionFragment;
    "ownerSetYtGlpToken(address)": FunctionFragment;
    "pendleRouter()": FunctionFragment;
    "ptGlpMarket()": FunctionFragment;
    "ptGlpToken()": FunctionFragment;
    "ptOracle()": FunctionFragment;
    "syGlpToken()": FunctionFragment;
    "ytGlpToken()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "dolomiteRegistry"
      | "ownerSetDolomiteRegistry"
      | "ownerSetPendleRouter"
      | "ownerSetPtGlpMarket"
      | "ownerSetPtGlpToken"
      | "ownerSetPtOracle"
      | "ownerSetSyGlpToken"
      | "ownerSetYtGlpToken"
      | "pendleRouter"
      | "ptGlpMarket"
      | "ptGlpToken"
      | "ptOracle"
      | "syGlpToken"
      | "ytGlpToken"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "dolomiteRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetDolomiteRegistry",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPendleRouter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPtGlpMarket",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPtGlpToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPtOracle",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetSyGlpToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetYtGlpToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "pendleRouter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ptGlpMarket",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ptGlpToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ptOracle", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "syGlpToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ytGlpToken",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "dolomiteRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetDolomiteRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPendleRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPtGlpMarket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPtGlpToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPtOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetSyGlpToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetYtGlpToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendleRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ptGlpMarket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ptGlpToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ptOracle", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "syGlpToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ytGlpToken", data: BytesLike): Result;

  events: {
    "DolomiteRegistrySet(address)": EventFragment;
    "PendleRouterSet(address)": EventFragment;
    "PtGlpMarketSet(address)": EventFragment;
    "PtGlpTokenSet(address)": EventFragment;
    "PtOracleSet(address)": EventFragment;
    "SyGlpTokenSet(address)": EventFragment;
    "YtGlpTokenSet(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DolomiteRegistrySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PendleRouterSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PtGlpMarketSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PtGlpTokenSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PtOracleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SyGlpTokenSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "YtGlpTokenSet"): EventFragment;
}

export interface DolomiteRegistrySetEventObject {
  _dolomiteRegistry: string;
}
export type DolomiteRegistrySetEvent = TypedEvent<
  [string],
  DolomiteRegistrySetEventObject
>;

export type DolomiteRegistrySetEventFilter =
  TypedEventFilter<DolomiteRegistrySetEvent>;

export interface PendleRouterSetEventObject {
  _pendleRouter: string;
}
export type PendleRouterSetEvent = TypedEvent<
  [string],
  PendleRouterSetEventObject
>;

export type PendleRouterSetEventFilter = TypedEventFilter<PendleRouterSetEvent>;

export interface PtGlpMarketSetEventObject {
  _ptGlpMarket: string;
}
export type PtGlpMarketSetEvent = TypedEvent<
  [string],
  PtGlpMarketSetEventObject
>;

export type PtGlpMarketSetEventFilter = TypedEventFilter<PtGlpMarketSetEvent>;

export interface PtGlpTokenSetEventObject {
  _ptGlpToken: string;
}
export type PtGlpTokenSetEvent = TypedEvent<[string], PtGlpTokenSetEventObject>;

export type PtGlpTokenSetEventFilter = TypedEventFilter<PtGlpTokenSetEvent>;

export interface PtOracleSetEventObject {
  _ptOracle: string;
}
export type PtOracleSetEvent = TypedEvent<[string], PtOracleSetEventObject>;

export type PtOracleSetEventFilter = TypedEventFilter<PtOracleSetEvent>;

export interface SyGlpTokenSetEventObject {
  _syGlpToken: string;
}
export type SyGlpTokenSetEvent = TypedEvent<[string], SyGlpTokenSetEventObject>;

export type SyGlpTokenSetEventFilter = TypedEventFilter<SyGlpTokenSetEvent>;

export interface YtGlpTokenSetEventObject {
  _ytGlpToken: string;
}
export type YtGlpTokenSetEvent = TypedEvent<[string], YtGlpTokenSetEventObject>;

export type YtGlpTokenSetEventFilter = TypedEventFilter<YtGlpTokenSetEvent>;

export interface IPendleGLPRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPendleGLPRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<[string]>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPendleRouter(
      _pendleRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPtGlpMarket(
      _ptGlpMarket: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPtGlpToken(
      _ptGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPtOracle(
      _ptOracle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetSyGlpToken(
      _syGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetYtGlpToken(
      _ytGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    pendleRouter(overrides?: CallOverrides): Promise<[string]>;

    ptGlpMarket(overrides?: CallOverrides): Promise<[string]>;

    ptGlpToken(overrides?: CallOverrides): Promise<[string]>;

    ptOracle(overrides?: CallOverrides): Promise<[string]>;

    syGlpToken(overrides?: CallOverrides): Promise<[string]>;

    ytGlpToken(overrides?: CallOverrides): Promise<[string]>;
  };

  dolomiteRegistry(overrides?: CallOverrides): Promise<string>;

  ownerSetDolomiteRegistry(
    _dolomiteRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPendleRouter(
    _pendleRouter: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPtGlpMarket(
    _ptGlpMarket: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPtGlpToken(
    _ptGlpToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPtOracle(
    _ptOracle: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetSyGlpToken(
    _syGlpToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetYtGlpToken(
    _ytGlpToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  pendleRouter(overrides?: CallOverrides): Promise<string>;

  ptGlpMarket(overrides?: CallOverrides): Promise<string>;

  ptGlpToken(overrides?: CallOverrides): Promise<string>;

  ptOracle(overrides?: CallOverrides): Promise<string>;

  syGlpToken(overrides?: CallOverrides): Promise<string>;

  ytGlpToken(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<string>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPendleRouter(
      _pendleRouter: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPtGlpMarket(
      _ptGlpMarket: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPtGlpToken(
      _ptGlpToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPtOracle(
      _ptOracle: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetSyGlpToken(
      _syGlpToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetYtGlpToken(
      _ytGlpToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    pendleRouter(overrides?: CallOverrides): Promise<string>;

    ptGlpMarket(overrides?: CallOverrides): Promise<string>;

    ptGlpToken(overrides?: CallOverrides): Promise<string>;

    ptOracle(overrides?: CallOverrides): Promise<string>;

    syGlpToken(overrides?: CallOverrides): Promise<string>;

    ytGlpToken(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "DolomiteRegistrySet(address)"(
      _dolomiteRegistry?: string | null
    ): DolomiteRegistrySetEventFilter;
    DolomiteRegistrySet(
      _dolomiteRegistry?: string | null
    ): DolomiteRegistrySetEventFilter;

    "PendleRouterSet(address)"(
      _pendleRouter?: string | null
    ): PendleRouterSetEventFilter;
    PendleRouterSet(_pendleRouter?: string | null): PendleRouterSetEventFilter;

    "PtGlpMarketSet(address)"(
      _ptGlpMarket?: string | null
    ): PtGlpMarketSetEventFilter;
    PtGlpMarketSet(_ptGlpMarket?: string | null): PtGlpMarketSetEventFilter;

    "PtGlpTokenSet(address)"(
      _ptGlpToken?: string | null
    ): PtGlpTokenSetEventFilter;
    PtGlpTokenSet(_ptGlpToken?: string | null): PtGlpTokenSetEventFilter;

    "PtOracleSet(address)"(_ptOracle?: string | null): PtOracleSetEventFilter;
    PtOracleSet(_ptOracle?: string | null): PtOracleSetEventFilter;

    "SyGlpTokenSet(address)"(
      _syGlpToken?: string | null
    ): SyGlpTokenSetEventFilter;
    SyGlpTokenSet(_syGlpToken?: string | null): SyGlpTokenSetEventFilter;

    "YtGlpTokenSet(address)"(
      _ytGlpToken?: string | null
    ): YtGlpTokenSetEventFilter;
    YtGlpTokenSet(_ytGlpToken?: string | null): YtGlpTokenSetEventFilter;
  };

  estimateGas: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPendleRouter(
      _pendleRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPtGlpMarket(
      _ptGlpMarket: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPtGlpToken(
      _ptGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPtOracle(
      _ptOracle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetSyGlpToken(
      _syGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetYtGlpToken(
      _ytGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    pendleRouter(overrides?: CallOverrides): Promise<BigNumber>;

    ptGlpMarket(overrides?: CallOverrides): Promise<BigNumber>;

    ptGlpToken(overrides?: CallOverrides): Promise<BigNumber>;

    ptOracle(overrides?: CallOverrides): Promise<BigNumber>;

    syGlpToken(overrides?: CallOverrides): Promise<BigNumber>;

    ytGlpToken(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPendleRouter(
      _pendleRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPtGlpMarket(
      _ptGlpMarket: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPtGlpToken(
      _ptGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPtOracle(
      _ptOracle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetSyGlpToken(
      _syGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetYtGlpToken(
      _ytGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    pendleRouter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ptGlpMarket(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ptGlpToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ptOracle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    syGlpToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ytGlpToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
