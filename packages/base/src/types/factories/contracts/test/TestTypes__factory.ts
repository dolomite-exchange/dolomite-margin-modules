/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestTypes,
  TestTypesInterface,
} from "../../../contracts/test/TestTypes";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesParAdd",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesParEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParIsGreaterThanOrEqualToZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParIsLessThanZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParIsNegative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParIsPositive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParIsZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesParNegative",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesParSub",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesWeiAdd",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesWeiEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesWeiIsNegative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesWeiIsPositive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesWeiIsZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
    ],
    name: "TypesWeiNegative",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "b",
        type: "tuple",
      },
    ],
    name: "TypesWeiSub",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "TypesZeroPar",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "TypesZeroWei",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639cc67420116100a2578063bc0e388011610071578063bc0e388014610286578063d42adff414610299578063dde0973d146102ac578063e50cc205146102bf578063f60fdc70146102d257600080fd5b80639cc674201461023a578063a03ff1bd1461024d578063a6832a8414610260578063ae793bee1461027357600080fd5b80635853940f116100e95780635853940f146101ce5780635e2ff75f146101ee5780636f9758401461020157806383b726ca1461021457806399ad7dc01461022757600080fd5b8063223dce9f1461011b57806324b02fce146101665780634384a0d21461017957806348598965146101bb575b600080fd5b604080518082018252600080825260209182018190528251808401845281815282018190528251808401909352808352908201525b60405161015d91906107e9565b60405180910390f35b6101506101743660046108d7565b6102e5565b604080518082018252600080825260209182018190528251808401845281815282018190528251808401909352808352908201525b60405161015d919061093e565b6101ae6101c936600461099b565b61030c565b6101e16101dc3660046109ce565b61032a565b60405161015d91906109f7565b6101e16101fc3660046109ce565b610335565b6101e161020f366004610a05565b610343565b6101e1610222366004610a05565b61034e565b6101e1610235366004610a05565b610365565b6101e161024836600461099b565b610370565b61015061025b366004610a05565b61037c565b6101e161026e366004610a05565b6103c6565b6101506102813660046108d7565b6103d1565b6101ae6102943660046109ce565b6103ef565b6101ae6102a736600461099b565b610430565b6101e16102ba366004610a05565b61044e565b6101e16102cd3660046109ce565b610459565b6101e16102e03660046108d7565b610464565b60408051808201909152600080825260208201526103038383610470565b90505b92915050565b604080518082019091526000808252602082015261030383836104c0565b60006103068261056a565b600061030682602001511590565b600061030682610581565b600061030682602001516001600160801b03161590565b6000610306826105a3565b600061030383836105c2565b604080518082018252600080825260208083018290528351808501855282815281019190915282518084019093528351158352838101516001600160801b03169083015290610306565b6000610306826105fe565b6040805180820190915260008082526020820152610303838361061d565b604080518082018252600080825260208083018290528351808501855282815281019190915282518084019093528351158352838101519083015290610306565b604080518082019091526000808252602082015261030383836106eb565b600061030682610732565b600061030682610752565b60006103038383610768565b604080518082018252600080825260208083018290528351808501855282815281019190915282518084019093528351158352838101516001600160801b0316908301529061030390849061061d565b60408051808201909152600080825260208201526040805180820190915260008082526020820152825184511515901515141561051b57835115158152602080840151908501516105119190610a3c565b6020820152610303565b826020015184602001511061054457835115158152602080840151908501516105119190610a54565b8251151581526020808501519084015161055e9190610a54565b60208201529392505050565b805160009015801561030657505060200151151590565b600061059882602001516001600160801b03161590565b806103065750505190565b80516000908015610306575050602001516001600160801b0316151590565b60008160200151836020015114156105f55760208301516105e557506001610306565b5080518251151590151514610306565b50600092915050565b60008082602001516001600160801b0316118015610306575050511590565b604080518082019091526000808252602082015260408051808201909152600080825260208201528251845115159015151415610681578351151581526020808401519085015161066e9190610a6f565b6001600160801b03166020820152610303565b82602001516001600160801b031684602001516001600160801b0316106106bc578351151581526020808401519085015161066e9190610aa2565b825115158152602080850151908401516106d69190610aa2565b6001600160801b031660208201529392505050565b6040805180820182526000808252602080830182905283518085018552828152810191909152825180840190935283511583528381015190830152906103039084906104c0565b8051600090158015610306575050602001516001600160801b0316151590565b8051600090801561030657505060200151151590565b600081602001516001600160801b031683602001516001600160801b031614156105f55760208301516001600160801b03166105e557506001610306565b8015155b82525050565b6001600160801b0381166107aa565b805160408301906107d084826107a6565b5060208201516107e360208501826107b0565b50505050565b6040810161030682846107bf565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610833576108336107f7565b6040525050565b600061084560405190565b9050610851828261080d565b919050565b8015155b811461086557600080fd5b50565b803561030681610856565b6001600160801b03811661085a565b803561030681610873565b6000604082840312156108a2576108a2600080fd5b6108ac604061083a565b905060006108ba8484610868565b82525060206108cb84848301610882565b60208301525092915050565b600080608083850312156108ed576108ed600080fd5b60006108f9858561088d565b925050604061090a8582860161088d565b9150509250929050565b806107aa565b8051604083019061092b84826107a6565b5060208201516107e36020850182610914565b60408101610306828461091a565b8061085a565b80356103068161094c565b60006040828403121561097257610972600080fd5b61097c604061083a565b9050600061098a8484610868565b82525060206108cb84848301610952565b600080608083850312156109b1576109b1600080fd5b60006109bd858561095d565b925050604061090a8582860161095d565b6000604082840312156109e3576109e3600080fd5b60006109ef848461095d565b949350505050565b6020810161030682846107a6565b600060408284031215610a1a57610a1a600080fd5b60006109ef848461088d565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a4f57610a4f610a26565b500190565b6000825b925082821015610a6a57610a6a610a26565b500390565b60006001600160801b03821691506001600160801b0383169250826001600160801b0303821115610a4f57610a4f610a26565b60006001600160801b03821691506001600160801b038316610a5856fea26469706673582212205b5cdbb364509875e3459c8eef5514537f6b02210b5462a1206f37b502ae70a964736f6c63430008090033";

type TestTypesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTypesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTypes__factory extends ContractFactory {
  constructor(...args: TestTypesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestTypes> {
    return super.deploy(overrides || {}) as Promise<TestTypes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestTypes {
    return super.attach(address) as TestTypes;
  }
  override connect(signer: Signer): TestTypes__factory {
    return super.connect(signer) as TestTypes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTypesInterface {
    return new utils.Interface(_abi) as TestTypesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTypes {
    return new Contract(address, _abi, signerOrProvider) as TestTypes;
  }
}
