/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestAccountActionLib,
  TestAccountActionLibInterface,
} from "../../../contracts/test/TestAccountActionLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "all",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fromAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "enum IDolomiteStructs.AssetDenomination",
            name: "denomination",
            type: "uint8",
          },
          {
            internalType: "enum IDolomiteStructs.AssetReference",
            name: "ref",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AssetAmount",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_accountId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_callee",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "encodeCallAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_accountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "enum IDolomiteStructs.AssetDenomination",
            name: "denomination",
            type: "uint8",
          },
          {
            internalType: "enum IDolomiteStructs.AssetReference",
            name: "ref",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AssetAmount",
        name: "_amount",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_fromAccount",
        type: "address",
      },
    ],
    name: "encodeDepositAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo",
        name: "_account",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_accountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_owedMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_expiry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimeDelta",
        type: "uint256",
      },
    ],
    name: "encodeExpirationAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_solidAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_owedMarketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_heldMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_expiryProxy",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_expiry",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "_flipMarkets",
        type: "bool",
      },
    ],
    name: "encodeExpiryLiquidateAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_primaryMarketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_secondaryMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMinWei",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_orderData",
        type: "bytes",
      },
    ],
    name: "encodeExternalSellAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_primaryMarketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_secondaryMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_traderAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutWei",
        type: "uint256",
      },
    ],
    name: "encodeInternalTradeAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_solidAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_owedMarketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_heldMarketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_owedWeiToLiquidate",
        type: "uint256",
      },
    ],
    name: "encodeLiquidateAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "enum IDolomiteStructs.AssetDenomination",
        name: "_denomination",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "encodeTransferAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_accountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "enum IDolomiteStructs.AssetDenomination",
            name: "denomination",
            type: "uint8",
          },
          {
            internalType: "enum IDolomiteStructs.AssetReference",
            name: "ref",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AssetAmount",
        name: "_amount",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_toAccount",
        type: "address",
      },
    ],
    name: "encodeWithdrawalAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromAccountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toAccountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "enum IDolomiteStructs.AssetDenomination",
        name: "_denomination",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "enum IDolomiteStructs.AssetDenomination",
            name: "denomination",
            type: "uint8",
          },
          {
            internalType: "enum IDolomiteStructs.AssetReference",
            name: "ref",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AssetAmount",
        name: "_amount",
        type: "tuple",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200248238038062002482833981016040819052620000349162000080565b6001600160a01b0316608052620000ad565b60006001600160a01b0382165b92915050565b620000648162000046565b81146200007057600080fd5b50565b8051620000538162000059565b600060208284031215620000975762000097600080fd5b6000620000a5848462000073565b949350505050565b6080516123a4620000de600039600081816101220152818161023c0152818161029f015261037d01526123a46000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063841c66a11161008c578063dd2f0ec211610066578063dd2f0ec2146101e3578063e1d62af0146101f6578063eb29806014610209578063ff784ebc1461021c57600080fd5b8063841c66a1146101aa578063bafc16fa146101bd578063cd7373a5146101d057600080fd5b80631ffdf878116100c85780631ffdf878146101515780632e849489146101715780636c18ae4f146101845780637711f88b1461019757600080fd5b80630c60d4be146100ef57806310c4e8b01461010457806315c14a4a1461011d575b600080fd5b6101026100fd3660046115e5565b61022f565b005b6000196040516101149190611679565b60405180910390f35b6101447f000000000000000000000000000000000000000000000000000000000000000081565b60405161011491906116a6565b61016461015f366004611750565b61026f565b60405161011491906119dd565b61010261017f3660046119ee565b610292565b610164610192366004611aa1565b6102d6565b6101646101a5366004611b05565b6102f3565b6101646101b8366004611bba565b610310565b6101646101cb366004611c32565b61032f565b6101646101de366004611cc2565b610346565b6101646101f1366004611d2d565b61035b565b610102610204366004611d87565b610370565b610164610217366004611aa1565b6103ae565b61016461022a366004611e0a565b6103c2565b6102676001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168787878787876103d9565b505050505050565b610277611417565b61028688888888888888610586565b98975050505050505050565b6102cc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016898989898989898961068c565b5050505050505050565b6102de611417565b6102ea8585858561089e565b95945050505050565b6102fb611417565b610306848484610907565b90505b9392505050565b610318611417565b6103258686868686610984565b9695505050505050565b610337611417565b61028688888888888888610aac565b61034e611417565b6103258686868686610b48565b610363611417565b6103258686868686610c5e565b6103a76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686868686610d1d565b5050505050565b6103b6611417565b6102ea85858585610e62565b6103ca611417565b61028688888888888888610e7e565b604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816103f05790505090506040518060400160405280886001600160a01b03168152602001878152508160008151811061044a5761044a611e9a565b6020908102919091010152604080516001808252818301909252600091816020015b610474611417565b81526020019060019003908161046c5790505090506104966000868689610e62565b816000815181106104a9576104a9611e9a565b602090810291909101015260405163a67a6a4560e01b81526001600160a01b038a169063a67a6a45906104e29085908590600401611fa3565b600060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b506000925061051d915050565b83600381111561052f5761052f61180a565b148061054c5750600183600381111561054a5761054a61180a565b145b1561057b5761057b898360008151811061056857610568611e9a565b6020026020010151600001518988610f18565b505050505050505050565b61058e611417565b6105ba604080516080810190915260008082526020820190815260200160008152602001600081525090565b6000198514156105f15760408051608081019091526000808252602082019081526020016001815260200160008152509050610618565b60408051608081019091526000808252602082019081526020016000815260200186905290505b60408051610100810190915280600481526020018a8152602001828152602001898152602001888152602001876001600160a01b0316815260200160008152602001858560405160200161066d929190611fc8565b60408051601f1981840301815291905290529998505050505050505050565b60408051600280825260608201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816106a457905050905060405180604001604052808a6001600160a01b0316815260200189815250816000815181106106fe576106fe611e9a565b60200260200101819052506040518060400160405280886001600160a01b03168152602001878152508160018151811061073a5761073a611e9a565b6020908102919091010152604080516001808252818301909252600091816020015b610764611417565b81526020019060019003908161075c57905050905061078860006001888888610b48565b8160008151811061079b5761079b611e9a565b602090810291909101015260405163a67a6a4560e01b81526001600160a01b038c169063a67a6a45906107d49085908590600401611fa3565b600060405180830381600087803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b506000925061080f915050565b8360038111156108215761082161180a565b148061083e5750600183600381111561083c5761083c61180a565b145b1561084f5761084f8b8b8b89610f18565b60008360038111156108635761086361180a565b14806108805750600283600381111561087e5761087e61180a565b145b15610891576108918b898989610f18565b5050505050505050505050565b6108a6611417565b6040805161010081019091528060005b815260200186815260200184815260200185815260200160008152602001836001600160a01b0316815260200160008152602001604051806020016040528060008152508152509050949350505050565b61090f611417565b60408051610100810182526008815260208082018790528251608081018452600080825292938401929091820190815260200160008152602001600081525081526020016000815260200160008152602001846001600160a01b03168152602001600081526020018381525090509392505050565b61098c611417565b6109d28263ffffffff1683146f20b1b1b7bab73a20b1ba34b7b72634b160811b7f496e76616c6964206578706972792074696d652064656c746100000000000000611011565b604080516001808252818301909252600091816020015b6040805160c08101825260006080820181815260a0830182905282526020808301829052928201819052606082015282526000199092019101816109e957905050905060405180608001604052808881526020018681526020018463ffffffff1681526020016001151581525081600081518110610a6957610a69611e9a565b6020026020010181905250610aa18685600084604051602001610a8d929190612090565b604051602081830303815290604052610907565b979650505050505050565b610ab4611417565b604080516101008101909152806005815260208082018b905260408051608081018252600181529201919081016000815260200160008152602001868152508152602001878152602001868152602001856001600160a01b0316815260200188815260200183604051602001610b2a9190611679565b60408051601f19818403018152919052905298975050505050505050565b610b50611417565b610b7c604080516080810190915260008082526020820190815260200160008152602001600081525090565b600019831415610bc4576040518060800160405280600015158152602001856001811115610bac57610bac61180a565b81526020016001815260200160008152509050610bfc565b6040518060800160405280600015158152602001856001811115610bea57610bea61180a565b81526020016000815260200184905290505b60408051610100810190915280600281526020018881526020018281526020018681526020016000815260200160006001600160a01b031681526020018781526020016040518060200160405280600081525081525091505095945050505050565b610c66611417565b604080516101008101909152806006815260208082018990526040805160808101825260018152920191908101600081526020016000815260200185815250815260200185815260200184815260200160006001600160a01b03168152602001868152602001600067ffffffffffffffff811115610ce657610ce66114d1565b6040519080825280601f01601f191660200182016040528015610d10576020820181803683370190505b5090529695505050505050565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610d345790505090506040518060400160405280876001600160a01b031681526020018581525081600081518110610d8e57610d8e611e9a565b6020908102919091010152604080516001808252818301909252600091816020015b610db8611417565b815260200190600190039081610db0579050509050610dda600085858961089e565b81600081518110610ded57610ded611e9a565b602090810291909101015260405163a67a6a4560e01b81526001600160a01b0389169063a67a6a4590610e269085908590600401611fa3565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b505050505050505050505050565b610e6a611417565b6040805161010081019091528060016108b6565b610e86611417565b60408051610100810182526005815260208082018b90528251608081018452600080825292938401929091820190815260200160018152602001600081525081526020018315610ed65786610ed8565b875b81526020018315610ee95787610eeb565b865b8152602001856001600160a01b031681526020018881526020018785604051602001610b2a9291906120b0565b6040805180820182526001600160a01b0380861682526020820185905291516311f46d4f60e21b81529091600091908716906347d1b53c90610f6090859087906004016120cb565b604080518083038186803b158015610f7757600080fd5b505afa158015610f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faf9190612149565b9050610267610fbd82611074565b80610fd3575060208201516001600160801b0316155b7020b1b1b7bab73a2130b630b731b2a634b160791b7f6163636f756e742063616e6e6f7420676f206e65676174697665000000000000888888611098565b8261106f5761101f82611100565b6101d160f51b61102e83611100565b6040516020016110409392919061219c565b60408051601f198184030181529082905262461bcd60e51b8252611066916004016121c4565b60405180910390fd5b505050565b805160009080156110925750600082602001516001600160801b0316115b92915050565b85610267576110a685611100565b6101d160f51b6110b586611100565b61080f60f21b6110c48761119b565b61016160f51b6110d3886112e1565b61016160f51b6110e2896112e1565b60405161104099989796959493929190601f60f91b906020016121e5565b60606000826040516020016111159190612285565b60408051601f19818403018152919052905060205b8015611180578061113a816122b0565b91505081818151811061114f5761114f611e9a565b01602001516001600160f81b0319161561117b5760006111708260016122c7565b835250909392505050565b61112a565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b816000815181106111e1576111e1611e9a565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061121057611210611e9a565b60200101906001600160f81b031916908160001a90535060005b60148110156111935760006112408260026122df565b905061124e600f85166113ed565b8361125a8360296122fe565b8151811061126a5761126a611e9a565b60200101906001600160f81b031916908160001a905350600484901c9350611294600f85166113ed565b836112a08360286122fe565b815181106112b0576112b0611e9a565b60200101906001600160f81b031916908160001a9053505060049290921c91806112d981612315565b91505061122a565b6060816113055750506040805180820190915260018152600360fc1b602082015290565b8160005b811561132f578061131981612315565b91506113289050600a83612346565b9150611309565b60008167ffffffffffffffff81111561134a5761134a6114d1565b6040519080825280601f01601f191660200182016040528015611374576020820181803683370190505b508593509050815b80156113e4578061138c816122b0565b915061139b9050600a8561235a565b6113a69060306122c7565b60f81b8282815181106113bb576113bb611e9a565b60200101906001600160f81b031916908160001a9053506113dd600a85612346565b935061137c565b50949350505050565b6000600a82101561140c576114036030836122c7565b60f81b92915050565b6114036057836122c7565b60408051610100810182526000808252602082015290810161145b604080516080810190915260008082526020820190815260200160008152602001600081525090565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b60006001600160a01b038216611092565b6114a78161148d565b81146114b257600080fd5b50565b80356110928161149e565b806114a7565b8035611092816114c0565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561150d5761150d6114d1565b6040525050565b600061151f60405190565b905061152b82826114e7565b919050565b8015156114a7565b803561109281611530565b600281106114b257600080fd5b803561109281611543565b60006080828403121561157057611570600080fd5b61157a6080611514565b905060006115888484611538565b825250602061159984848301611550565b60208301525060406115ad84828501611550565b60408301525060606115c1848285016114c6565b60608301525092915050565b600481106114b257600080fd5b8035611092816115cd565b600080600080600080610120878903121561160257611602600080fd5b600061160e89896114b5565b965050602061161f89828a016114c6565b955050604061163089828a016114b5565b945050606061164189828a016114c6565b935050608061165289828a0161155b565b92505061010061166489828a016115da565b9150509295509295509295565b805b82525050565b602081016110928284611671565b60006110928261148d565b600061109282611687565b61167381611692565b60208101611092828461169d565b600067ffffffffffffffff8211156116ce576116ce6114d1565b601f19601f83011660200192915050565b82818337506000910152565b60006116fe6116f9846116b4565b611514565b90508281526020810184848401111561171957611719600080fd5b6111938482856116df565b600082601f83011261173857611738600080fd5b81356117488482602086016116eb565b949350505050565b600080600080600080600060e0888a03121561176e5761176e600080fd5b600061177a8a8a6114c6565b975050602061178b8a828b016114c6565b965050604061179c8a828b016114c6565b95505060606117ad8a828b016114b5565b94505060806117be8a828b016114c6565b93505060a06117cf8a828b016114c6565b92505060c088013567ffffffffffffffff8111156117ef576117ef600080fd5b6117fb8a828b01611724565b91505092959891949750929550565b634e487b7160e01b600052602160045260246000fd5b600981106114b2576114b261180a565b8061152b81611820565b600061109282611830565b6116738161183a565b801515611673565b600281106114b2576114b261180a565b8061152b81611856565b600061109282611866565b61167381611870565b80516080830190611895848261184e565b5060208201516118a8602085018261187b565b5060408201516118bb604085018261187b565b5060608201516118ce6060850182611671565b50505050565b6116738161148d565b60005b838110156118f85781810151838201526020016118e0565b838111156118ce5750506000910152565b6000611913825190565b80845260208401935061192a8185602086016118dd565b601f01601f19169290920192915050565b80516000906101608401906119508582611845565b5060208301516119636020860182611671565b5060408301516119766040860182611884565b50606083015161198960c0860182611671565b50608083015161199c60e0860182611671565b5060a08301516119b06101008601826118d4565b5060c08301516119c4610120860182611671565b5060e08301518482036101408601526102ea8282611909565b60208082528101610309818461193b565b600080600080600080600080610100898b031215611a0e57611a0e600080fd5b6000611a1a8b8b6114b5565b9850506020611a2b8b828c016114c6565b9750506040611a3c8b828c016114b5565b9650506060611a4d8b828c016114c6565b9550506080611a5e8b828c016114c6565b94505060a0611a6f8b828c01611550565b93505060c0611a808b828c016114c6565b92505060e0611a918b828c016115da565b9150509295985092959890939650565b60008060008060e08587031215611aba57611aba600080fd5b6000611ac687876114c6565b9450506020611ad7878288016114c6565b9350506040611ae88782880161155b565b92505060c0611af9878288016114b5565b91505092959194509250565b600080600060608486031215611b1d57611b1d600080fd5b6000611b2986866114c6565b9350506020611b3a868287016114b5565b925050604084013567ffffffffffffffff811115611b5a57611b5a600080fd5b611b6686828701611724565b9150509250925092565b600060408284031215611b8557611b85600080fd5b611b8f6040611514565b90506000611b9d84846114b5565b8252506020611bae848483016114c6565b60208301525092915050565b600080600080600060c08688031215611bd557611bd5600080fd5b6000611be18888611b70565b9550506040611bf2888289016114c6565b9450506060611c03888289016114c6565b9350506080611c14888289016114b5565b92505060a0611c25888289016114c6565b9150509295509295909350565b600080600080600080600060e0888a031215611c5057611c50600080fd5b6000611c5c8a8a6114c6565b9750506020611c6d8a828b016114c6565b9650506040611c7e8a828b016114c6565b9550506060611c8f8a828b016114c6565b9450506080611ca08a828b016114b5565b93505060a0611cb18a828b016114c6565b92505060c06117fb8a828b016114c6565b600080600080600060a08688031215611cdd57611cdd600080fd5b6000611ce988886114c6565b9550506020611cfa888289016114c6565b9450506040611d0b888289016114c6565b9350506060611d1c88828901611550565b9250506080611c25888289016114c6565b600080600080600060a08688031215611d4857611d48600080fd5b6000611d5488886114c6565b9550506020611d65888289016114c6565b9450506040611d76888289016114c6565b9350506060611d1c888289016114c6565b60008060008060006101008688031215611da357611da3600080fd5b6000611daf88886114b5565b9550506020611dc0888289016114b5565b9450506040611dd1888289016114c6565b9350506060611de2888289016114c6565b9250506080611c258882890161155b565b63ffffffff81166114a7565b803561109281611df3565b600080600080600080600060e0888a031215611e2857611e28600080fd5b6000611e348a8a6114c6565b9750506020611e458a828b016114c6565b9650506040611e568a828b016114c6565b9550506060611e678a828b016114c6565b9450506080611e788a828b016114b5565b93505060a0611e898a828b01611dff565b92505060c06117fb8a828b01611538565b634e487b7160e01b600052603260045260246000fd5b80516040830190611ec184826118d4565b5060208201516118ce6020850182611671565b6000611ee08383611eb0565b505060400190565b6000611ef2825190565b80845260209384019383018060005b83811015611f26578151611f158882611ed4565b975060208301925050600101611f01565b509495945050505050565b6000610309838361193b565b6000611f47825190565b80845260208401935083602082028501611f618560200190565b8060005b85811015611f965784840389528151611f7e8582611f31565b94506020830160209a909a0199925050600101611f65565b5091979650505050505050565b60408082528101611fb48185611ee8565b905081810360208301526103068184611f3d565b60408101611fd68285611671565b81810360208301526103068184611909565b63ffffffff8116611673565b805160a08301906120058482611eb0565b5060208201516120186040850182611671565b50604082015161202b6060850182611fe8565b5060608201516118ce608085018261184e565b600061204a8383611ff4565b505060a00190565b600061205c825190565b80845260209384019383018060005b83811015611f2657815161207f888261203e565b97506020830192505060010161206b565b6040810161209e828561187b565b81810360208301526103068184612052565b604081016120be8285611671565b6103096020830184611fe8565b606081016120d98285611eb0565b6103096040830184611671565b805161109281611530565b6001600160801b0381166114a7565b8051611092816120f1565b60006040828403121561212057612120600080fd5b61212a6040611514565b9050600061213884846120e6565b8252506020611bae84848301612100565b60006040828403121561215e5761215e600080fd5b6000611748848461210b565b6000612174825190565b6121828185602086016118dd565b9290920192915050565b6001600160f01b03198116611673565b60006121a8828661216a565b91506121b4828561218c565b6002820191506102ea828461216a565b602080825281016103098184611909565b6001600160f81b03198116611673565b60006121f1828d61216a565b91506121fd828c61218c565b60028201915061220d828b61216a565b9150612219828a61218c565b600282019150612229828961216a565b9150612235828861218c565b600282019150612245828761216a565b9150612251828661218c565b600282019150612261828561216a565b915061226d82846121d5565b506001019a9950505050505050505050565b80611673565b6000612291828461227f565b50602001919050565b634e487b7160e01b600052601160045260246000fd5b6000816122bf576122bf61229a565b506000190190565b600082198211156122da576122da61229a565b500190565b60008160001904831182151516156122f9576122f961229a565b500290565b6000828210156123105761231061229a565b500390565b60006000198214156123295761232961229a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261235557612355612330565b500490565b60008261236957612369612330565b50069056fea26469706673582212200158a6ed59997fa0ace2bc81edc72923bb8cdf94a4519327f4d037f9c38d5b5e64736f6c63430008090033";

type TestAccountActionLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAccountActionLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAccountActionLib__factory extends ContractFactory {
  constructor(...args: TestAccountActionLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestAccountActionLib> {
    return super.deploy(
      _dolomiteMargin,
      overrides || {}
    ) as Promise<TestAccountActionLib>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_dolomiteMargin, overrides || {});
  }
  override attach(address: string): TestAccountActionLib {
    return super.attach(address) as TestAccountActionLib;
  }
  override connect(signer: Signer): TestAccountActionLib__factory {
    return super.connect(signer) as TestAccountActionLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAccountActionLibInterface {
    return new utils.Interface(_abi) as TestAccountActionLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAccountActionLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestAccountActionLib;
  }
}
