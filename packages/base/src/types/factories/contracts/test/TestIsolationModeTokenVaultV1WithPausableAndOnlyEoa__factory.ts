/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa,
  TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaInterface,
} from "../../../contracts/test/TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa";

const _abi = [
  {
    inputs: [],
    name: "BORROW_POSITION_PROXY",
    outputs: [
      {
        internalType: "contract IBorrowPositionProxyV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "addCollateralAndSwapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_collateralMarketIds",
        type: "uint256[]",
      },
    ],
    name: "closeBorrowPositionWithOtherTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
    ],
    name: "closeBorrowPositionWithUnderlyingVaultToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "depositIntoVaultForDolomiteMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "executeDepositIntoVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "executeWithdrawalFromVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isExternalRedemptionPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "openBorrowPosition",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "openBorrowPositionAndSwapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "repayAllForBorrowPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newIsExternalRedemptionPaused",
        type: "bool",
      },
    ],
    name: "setIsExternalRedemptionPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "swapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "swapExactInputForOutputAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "transferFromPositionWithOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "transferFromPositionWithUnderlyingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "transferIntoPositionWithOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "transferIntoPositionWithUnderlyingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "withdrawFromVaultForDolomiteMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506139bd806100206000396000f3fe60806040526004361061019c5760003560e01c80636ee31021116100ec5780639cd7a1c41161008a578063bd12584f11610064578063bd12584f1461041c578063bdd019e914610431578063f4a2924c14610451578063fa93d69a1461047157600080fd5b80639cd7a1c4146103d4578063a9f47158146103e9578063b0463d5c146103fc57600080fd5b8063797b5125116100c6578063797b51251461035d5780638129fc1c1461037d5780638bc179b8146103925780638ddab4e5146103b457600080fd5b80636ee310211461030a57806370983b041461031d578063739a09b81461033d57600080fd5b806325ffd13611610159578063359e125f11610133578063359e125f146102af578063428302d9146102c2578063565e4240146102d55780636ed71ede146102e857600080fd5b806325ffd1361461026557806329db1be6146102855780632ee3d92f1461029a57600080fd5b806304a192cd146101a15780630d423941146101c3578063103f2907146101e3578063117803e31461020e57806315c14a4a14610223578063258aecf614610245575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612598565b610491565b005b3480156101cf57600080fd5b506101c16101de366004612610565b6104c0565b3480156101ef57600080fd5b506101f86104e9565b604051610205919061266d565b60405180910390f35b34801561021a57600080fd5b506101f8610522565b34801561022f57600080fd5b50610238610552565b604051610205919061269a565b34801561025157600080fd5b506101c16102603660046126a8565b6105cc565b34801561027157600080fd5b506101c16102803660046126a8565b6105f7565b34801561029157600080fd5b506101f8610614565b3480156102a657600080fd5b5061023861068e565b6101c16102bd3660046127ae565b6106d0565b6101c16102d03660046127ae565b61077b565b6101c16102e33660046128bd565b61081c565b3480156102f457600080fd5b506102fd61092a565b60405161020591906129be565b6101c16103183660046127ae565b6109a4565b34801561032957600080fd5b506101c16103383660046129df565b610a1f565b34801561034957600080fd5b506101c1610358366004612598565b610a66565b34801561036957600080fd5b506101c1610378366004612a14565b610a85565b34801561038957600080fd5b506101c1610ac5565b34801561039e57600080fd5b506103a7610acf565b6040516102059190612a3e565b3480156103c057600080fd5b506101c16103cf366004612a14565b610b07565b3480156103e057600080fd5b506102fd610b30565b6101c16103f73660046126a8565b610b7d565b34801561040857600080fd5b506101c1610417366004612a4c565b610ba2565b34801561042857600080fd5b50610238610bcf565b34801561043d57600080fd5b506101c161044c366004612ab0565b610c11565b34801561045d57600080fd5b506101c161046c366004612610565b610c2f565b34801561047d57600080fd5b506101c161048c366004612610565b610c4b565b610499610c67565b336104a381610cf6565b6104b08686868686610d4a565b506104b9610dc8565b5050505050565b6104c8610c67565b336104d281610cf6565b6104dc8383610dfc565b506104e5610dc8565b5050565b600061051d61051960017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef3612b33565b5490565b905090565b600061051d61051960017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b612b33565b600061055c6104e9565b6001600160a01b03166315c14a4a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561059457600080fd5b505afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190612b5e565b6105d4610c67565b336105de81610cf6565b6105e9848484610e6b565b506105f2610dc8565b505050565b6105ff610c67565b3361060981610cf6565b6105e9848484610e81565b600061061e6104e9565b6001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561065657600080fd5b505afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190612b8a565b60006106986104e9565b6001600160a01b0316632ee3d92f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561059457600080fd5b6106d8610c67565b336106e281610ef3565b6106ea610fdc565b6107658c8c8c8c8c8c6106fd8c8e612dc2565b8b8b808060200260200160405190810160405280939291908181526020016000905b8282101561074b5761073c60408302860136819003810190612e19565b8152602001906001019061071f565b506107609350505050368c90038c018c612eb0565b611008565b5061076e610dc8565b5050505050505050505050565b610783610c67565b3361078d81610ef3565b610795610fdc565b6107a18c8c600061108c565b6107658c8c8c8c8c8c6107b48c8e612dc2565b8b8b808060200260200160405190810160405280939291908181526020016000905b82821015610802576107f360408302860136819003810190612e19565b815260200190600101906107d6565b506108179350505050368c90038c018c612eb0565b6110a2565b610824610c67565b3361082e81610ef3565b610836610fdc565b60006040518060e001604052808d81526020018c8c80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505090825250602081018b9052604081018a905260600161089a888a612dc2565b81526020018686808060200260200160405190810160405280939291908181526020016000905b828210156108ed576108de60408302860136819003810190612e19565b815260200190600101906108c1565b505050918352505060200161090736869003860186612eb0565b90529050610914816110eb565b505061091e610dc8565b50505050505050505050565b60006109346104e9565b6001600160a01b0316636ed71ede6040518163ffffffff1660e01b815260040160206040518083038186803b15801561096c57600080fd5b505afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190612edc565b6109ac610c67565b336109b681610ef3565b6109be610fdc565b6107658c8c8c8c8c8c6109d18c8e612dc2565b8b8b808060200260200160405190810160405280939291908181526020016000905b8282101561080257610a1060408302860136819003810190612e19565b815260200190600101906109f3565b610a63610a4d60017ffab2f639eb6850bdc54a5972022bb88511b351f3e0016122953f3652fdb82cbe612b33565b82610a59576000610a5c565b60015b60ff169055565b50565b610a6e610c67565b33610a7881610cf6565b6104b086868686866116b8565b33610a8f816117bd565b6001600160a01b038316301415610aa857610aa8612efd565b6105f28383610ab5610614565b6001600160a01b0316919061180a565b610acd611860565b565b6000610aff61051960017ffab2f639eb6850bdc54a5972022bb88511b351f3e0016122953f3652fdb82cbe612b33565b600114905090565b33610b11816117bd565b6105f2833084610b1f610614565b6001600160a01b03169291906118bd565b6000610b3a610614565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610b65919061266d565b60206040518083038186803b15801561096c57600080fd5b610b85610c67565b33610b8f81610cf6565b610b97610fdc565b6105e984848461108c565b610baa610c67565b33610bb481610cf6565b610bc0858585856118de565b50610bc9610dc8565b50505050565b6000610bd96104e9565b6001600160a01b031663bd12584f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561059457600080fd5b610c19610c67565b33610c2381610cf6565b610bc085858585611953565b610c37610c67565b33610c4181610cf6565b6104dc8383611979565b610c53610c67565b33610c5d816119b4565b6104dc8383611a22565b610cc26002610c9a61051960017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b62612b33565b14156000805160206139688339815191526d1499595b9d1c985b9d0818d85b1b60921b611a5d565b610acd610cf060017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b62612b33565b60029055565b610cff81611abb565b610a636001600160a01b03821632147f49736f6c6174696f6e4d6f64655661756c7456315061757361626c6526456f617013db9b1e481153d04818d85b8818d85b1b607a1b84611b02565b604051634dcae86960e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90634dcae86990610d9190309089908990899089908990600190600090600401612f57565b60006040518083038186803b158015610da957600080fd5b505af4158015610dbd573d6000803e3d6000fd5b505050505050505050565b610acd610df660017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b62612b33565b60019055565b60405163043e6d7160e41b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__906343e6d71090610e3790309086908690600401612fce565b60006040518083038186803b158015610e4f57600080fd5b505af4158015610e63573d6000803e3d6000fd5b505050505050565b828282610e76611b48565b610e63868686611b89565b6040516302be155360e31b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__906315f0aa9890610ebe903090879087908790600401612ff6565b60006040518083038186803b158015610ed657600080fd5b505af4158015610eea573d6000803e3d6000fd5b50505050505050565b610efc81611bc6565b610a636001600160a01b038216321480610f945750610f196104e9565b6001600160a01b03166316774ba0836040518263ffffffff1660e01b8152600401610f44919061266d565b60206040518083038186803b158015610f5c57600080fd5b505afa158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f94919061303f565b7f49736f6c6174696f6e4d6f64655661756c7456315061757361626c6526456f617f4f6e6c7920454f41206f7220636f6e7665727465722063616e2063616c6c000084611b02565b610acd34156000805160206139688339815191526e086c2dcdcdee840e6cadcc8408aa89608b1b611a5d565b60405163b59abc5f60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063b59abc5f906110519030908d908d908d908d908d908d908d908d908d906004016132a1565b60006040518083038186803b15801561106957600080fd5b505af415801561107d573d6000803e3d6000fd5b50505050505050505050505050565b828282611097611b48565b610e63868686611ca4565b60405163967c6f6b60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063967c6f6b906110519030908d908d908d908d908d908d908d908d908d906004016132a1565b8051602082015160408301516000611101610acf565b60408051808201909152600080825260208201529091506040805180820190915230815260208101869052821561126a57600085600187516111439190612b33565b815181106111535761115361333e565b602002602001015190506111a161116861092a565b8214156000805160206139488339815191527f43616e6e6f74207a617020746f206d61726b6574207768656e2070617573656484611ce0565b6111a9610552565b6001600160a01b031663c190c2ec83836040518363ffffffff1660e01b81526004016111d6929190613354565b604080518083038186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122591906133ad565b925061126861123384611d0c565b6000805160206139488339815191527f5a6170732063616e206f6e6c79207265706179207768656e2070617573656400611a5d565b505b61127387611d28565b8215610eea576000611283610552565b905060008660008151811061129a5761129a61333e565b60200260200101519050600087600189516112b59190612b33565b815181106112c5576112c561333e565b602002602001015190506000836001600160a01b03166347d1b53c86856040518363ffffffff1660e01b81526004016112ff929190613354565b604080518083038186803b15801561131657600080fd5b505afa15801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190613426565b90506113a861135c82611db9565b80611372575060208201516001600160801b0316155b6000805160206139488339815191527f43616e6e6f74206c65766572207570207768656e20706175736564000000000086611ce0565b60405163306430bb60e21b81526000906001600160a01b0386169063c190c2ec906113d99089908790600401613354565b604080518083038186803b1580156113f057600080fd5b505afa158015611404573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142891906133ad565b905060006114368289611dd8565b90506000866001600160a01b0316638928378e876040518263ffffffff1660e01b815260040161146691906129be565b60206040518083038186803b15801561147e57600080fd5b505afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b6919061347d565b516114c1908c61349e565b90506000876001600160a01b0316638928378e876040518263ffffffff1660e01b81526004016114f191906129be565b60206040518083038186803b15801561150957600080fd5b505afa15801561151d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611541919061347d565b516020840151611551919061349e565b9050600061155d610bcf565b6001600160a01b0316632ba813046040518163ffffffff1660e01b815260040160206040518083038186803b15801561159557600080fd5b505afa1580156115a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cd9190612edc565b905060006115d9610bcf565b6001600160a01b031663389bc5d36040518163ffffffff1660e01b815260040160206040518083038186803b15801561161157600080fd5b505afa158015611625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116499190612edc565b90506116a581611659848761349e565b61166391906134d3565b61166d9086612b33565b8410156000805160206139488339815191527f556e61636365707461626c65207472616465207768656e207061757365640000611a5d565b5050505050505050505050505050505050565b848484848460006116c7610552565b6040805180820182523081526020810189905290516311f46d4f60e21b81526001600160a01b0392909216916347d1b53c91611707918890600401613354565b604080518083038186803b15801561171e57600080fd5b505afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117569190613426565b90506117658b8b8b8b8b611e26565b61176d610acf565b1561076e576117b461177e82611db9565b6000805160206139488339815191527f43616e6e6f74206c65766572207570207768656e20706175736564000000000087611ce0565b61076e86611e6a565b610a636117c86104e9565b6001600160a01b0316826001600160a01b0316146000805160206139688339815191527413db9b1e48199858dd1bdc9e4818d85b8818d85b1b605a1b84611b02565b6105f28363a9059cbb60e01b84846040516024016118299291906134e7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f3e565b610dc861189161051960017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f2050612b33565b1560008051602061396883398151915272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b611a5d565b610bc9846323b872dd60e01b85858560405160240161182993929190613502565b60405163508f47dd60e11b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063a11e8fba9061191d903090889088908890889060040161351d565b60006040518083038186803b15801561193557600080fd5b505af4158015611949573d6000803e3d6000fd5b5050505050505050565b8383838361196388888888611fd0565b61196b610acf565b156119495761194984611e6a565b60405163d5e3aed360e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063d5e3aed390610e3790309086908690600401612fce565b6119bd81612012565b610a63326119c9610522565b6001600160a01b0316147f49736f6c6174696f6e4d6f64655661756c7456315061757361626c6526456f617f5661756c74206f776e6572206973206e6f7420616e20454f4100000000000000611a1d610522565b611b02565b604051631dfa88e760e11b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90633bf511ce90610e3790309086908690600401612fce565b826105f257611a6b8261208a565b6101d160f51b611a7a8361208a565b604051602001611a8c9392919061359b565b60408051601f198184030181529082905262461bcd60e51b8252611ab2916004016135c3565b60405180910390fd5b610a63611ac6610522565b6001600160a01b0316826001600160a01b0316146000805160206139688339815191527213db9b1e481bdddb995c8818d85b8818d85b1b606a1b845b83610bc957611b108361208a565b6101d160f51b611b1f8461208a565b61080f60f21b611b2e85612125565b604051611a8c959493929190601f60f91b906020016135e4565b610acd611b53610acf565b156000805160206139488339815191527f43616e6e6f742065786563757465207768656e20706175736564000000000000611a5d565b60405163225f6bc760e21b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063897daf1c90610ebe903090879087908790600401612ff6565b610a63611bd1610522565b6001600160a01b0316826001600160a01b03161480611c6e5750611bf36104e9565b6001600160a01b03166316774ba0836040518263ffffffff1660e01b8152600401611c1e919061266d565b60206040518083038186803b158015611c3657600080fd5b505afa158015611c4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6e919061303f565b6000805160206139688339815191527f4f6e6c79206f776e6572206f7220636f6e7665727465722063616e2063616c6c84611b02565b60405162987d3960e61b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063261f4e4090610ebe903090879087908790600401612ff6565b83610bc957611cee8361208a565b6101d160f51b611cfd8461208a565b61080f60f21b611b2e8561226b565b8051600090158015611d22575060008260200151115b92915050565b805160208201516040808401516060850151608086015160a087015160c088015194516323b0865760e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__976323b0865797611d8d9730979296919592949193600190600090600401613694565b60006040518083038186803b158015611da557600080fd5b505af41580156104b9573d6000803e3d6000fd5b80516000908015611d22575050602001516001600160801b0316151590565b604080518082018252600080825260208083018290528351808501855282815281019190915282518084019093528351158352838101519083015290611e1f908490612376565b9392505050565b604051637e0f4c7f60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90637e0f4c7f90610d919030908990899089908990899060009060040161372f565b6000611e74610552565b6040805180820182523081526020810185905290516317b5052560e01b81526001600160a01b0392909216916317b5052591611eb291600401613797565b60206040518083038186803b158015611eca57600080fd5b505afa158015611ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f029190612edc565b90506104e581156000805160206139488339815191527f43616e6e6f74206c65766572207570207768656e207061757365640000000000611a5d565b6000611f93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124209092919063ffffffff16565b9050805160001480611fb4575080806020019051810190611fb4919061303f565b6105f25760405162461bcd60e51b8152600401611ab2906137ef565b604051600162396b2560e21b0319815273__$647ae408e7e1ac559d6a35a4ca834ab881$";

type TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaConstructorParams =
  | [
      linkLibraryAddresses: TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory extends ContractFactory {
  constructor(
    ...args: TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$647ae408e7e1ac559d6a35a4ca834ab881\\$__", "g"),
      linkLibraryAddresses[
        "contracts/isolation-mode/abstract/impl/IsolationModeTokenVaultV1ActionsImpl.sol:IsolationModeTokenVaultV1ActionsImpl"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(
    address: string
  ): TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa {
    return super.attach(
      address
    ) as TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa;
  }
  override connect(
    signer: Signer
  ): TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory {
    return super.connect(
      signer
    ) as TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaInterface {
    return new utils.Interface(
      _abi
    ) as TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa;
  }
}

export interface TestIsolationModeTokenVaultV1WithPausableAndOnlyEoaLibraryAddresses {
  ["contracts/isolation-mode/abstract/impl/IsolationModeTokenVaultV1ActionsImpl.sol:IsolationModeTokenVaultV1ActionsImpl"]: string;
}
