/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20Lib,
  TestERC20LibInterface,
} from "../../../contracts/test/TestERC20Lib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "resetAllowanceIfNeededAndApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610735806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e10b854414610030575b600080fd5b61004361003e366004610418565b610045565b005b610050838383610055565b505050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906100869030908790600401610477565b60206040518083038186803b15801561009e57600080fd5b505afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d6919061049d565b11156100f1576100f16001600160a01b038416836000610101565b6100506001600160a01b03841683835b8015806101895750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906101379030908690600401610477565b60206040518083038186803b15801561014f57600080fd5b505afa158015610163573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610187919061049d565b155b6101ae5760405162461bcd60e51b81526004016101a590610514565b60405180910390fd5b6100508363095ea7b360e01b84846040516024016101cd92919061052a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000610254826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102919092919063ffffffff16565b90508051600014806102755750808060200190518101906102759190610558565b6100505760405162461bcd60e51b81526004016101a5906105c0565b60606102a084846000856102aa565b90505b9392505050565b6060824710156102cc5760405162461bcd60e51b81526004016101a590610613565b600080866001600160a01b031685876040516102e89190610675565b60006040518083038185875af1925050503d8060008114610325576040519150601f19603f3d011682016040523d82523d6000602084013e61032a565b606091505b509150915061033b87838387610348565b925050505b949350505050565b6060831561038457825161037d576001600160a01b0385163b61037d5760405162461bcd60e51b81526004016101a590610681565b5081610340565b61034083838151156103995781518083602001fd5b8060405162461bcd60e51b81526004016101a591906106ee565b60006001600160a01b0382165b92915050565b60006103c0826103b3565b6103da816103c6565b81146103e557600080fd5b50565b80356103c0816103d1565b6103da816103b3565b80356103c0816103f3565b806103da565b80356103c081610407565b60008060006060848603121561043057610430600080fd5b600061043c86866103e8565b935050602061044d868287016103fc565b925050604061045e8682870161040d565b9150509250925092565b610471816103b3565b82525050565b604081016104858285610468565b6102a36020830184610468565b80516103c081610407565b6000602082840312156104b2576104b2600080fd5b60006103408484610492565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015291505b5060400190565b602080825281016103c0816104be565b80610471565b604081016105388285610468565b6102a36020830184610524565b8015156103da565b80516103c081610545565b60006020828403121561056d5761056d600080fd5b6000610340848461054d565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b6020820152915061050d565b602080825281016103c081610579565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b6020820152915061050d565b602080825281016103c0816105d0565b60005b8381101561063e578181015183820152602001610626565b8381111561064d576000848401525b50505050565b600061065d825190565b61066b818560208601610623565b9290920192915050565b60006102a38284610653565b602080825281016103c081601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000602082015260400190565b60006106c6825190565b8084526020840193506106dd818560208601610623565b601f01601f19169290920192915050565b602080825281016102a381846106bc56fea26469706673582212202ffc3c51d1554dce0b22344a4d66a5d440c72f91bc91d4521eee298f3c086cfa64736f6c63430008090033";

type TestERC20LibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20LibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20Lib__factory extends ContractFactory {
  constructor(...args: TestERC20LibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestERC20Lib> {
    return super.deploy(overrides || {}) as Promise<TestERC20Lib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC20Lib {
    return super.attach(address) as TestERC20Lib;
  }
  override connect(signer: Signer): TestERC20Lib__factory {
    return super.connect(signer) as TestERC20Lib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20LibInterface {
    return new utils.Interface(_abi) as TestERC20LibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20Lib {
    return new Contract(address, _abi, signerOrProvider) as TestERC20Lib;
  }
}
