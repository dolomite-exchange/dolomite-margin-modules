/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestIsolationModeTokenVaultV1,
  TestIsolationModeTokenVaultV1Interface,
} from "../../../contracts/test/TestIsolationModeTokenVaultV1";

const _abi = [
  {
    inputs: [],
    name: "BORROW_POSITION_PROXY",
    outputs: [
      {
        internalType: "contract IBorrowPositionProxyV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "addCollateralAndSwapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "callDepositOtherTokenIntoDolomiteMarginForVaultOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_collateralMarketIds",
        type: "uint256[]",
      },
    ],
    name: "closeBorrowPositionWithOtherTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
    ],
    name: "closeBorrowPositionWithUnderlyingVaultToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "depositIntoVaultForDolomiteMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "executeDepositIntoVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "executeWithdrawalFromVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "openBorrowPosition",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "openBorrowPositionAndSwapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "repayAllForBorrowPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "swapExactInputForOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_inputAmountWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOutputAmountWei",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo[]",
        name: "_makerAccounts",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum AccountBalanceLib.BalanceCheckFlag",
            name: "balanceCheckFlag",
            type: "uint8",
          },
          {
            internalType: "enum IGenericTraderProxyV1.EventEmissionType",
            name: "eventType",
            type: "uint8",
          },
        ],
        internalType: "struct IGenericTraderProxyV1.UserConfig",
        name: "_userConfig",
        type: "tuple",
      },
    ],
    name: "swapExactInputForOutputAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldReenter",
        type: "bool",
      },
    ],
    name: "testReentrancy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "testReentrancyOnOtherFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "transferFromPositionWithOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "transferFromPositionWithUnderlyingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "transferIntoPositionWithOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "transferIntoPositionWithUnderlyingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "withdrawFromVaultForDolomiteMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612fd6806100206000396000f3fe6080604052600436106101b75760003560e01c80636ee31021116100ec578063b0463d5c1161008a578063dd4a3c5411610064578063dd4a3c541461044a578063f4a2924c1461046a578063fa5ff5451461048a578063fa93d69a146104aa57600080fd5b8063b0463d5c146103f5578063bd12584f14610415578063bdd019e91461042a57600080fd5b80638129fc1c116100c65780638129fc1c146103985780638ddab4e5146103ad5780639cd7a1c4146103cd578063a9f47158146103e257600080fd5b80636ee3102114610345578063739a09b814610358578063797b51251461037857600080fd5b806328e7b01211610159578063359e125f11610133578063359e125f146102ea578063428302d9146102fd578063565e4240146103105780636ed71ede1461032357600080fd5b806328e7b012146102a057806329db1be6146102c05780632ee3d92f146102d557600080fd5b8063117803e311610195578063117803e31461022957806315c14a4a1461023e578063258aecf61461026057806325ffd1361461028057600080fd5b806304a192cd146101bc5780630d423941146101de578063103f2907146101fe575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611bca565b6104ca565b005b3480156101ea57600080fd5b506101dc6101f9366004611c42565b6104f9565b34801561020a57600080fd5b50610213610522565b6040516102209190611c9f565b60405180910390f35b34801561023557600080fd5b5061021361055b565b34801561024a57600080fd5b5061025361058b565b6040516102209190611ccc565b34801561026c57600080fd5b506101dc61027b366004611cda565b610605565b34801561028c57600080fd5b506101dc61029b366004611cda565b610630565b3480156102ac57600080fd5b506101dc6102bb366004611e1b565b61064d565b3480156102cc57600080fd5b50610213610727565b3480156102e157600080fd5b506102536107a1565b6101dc6102f8366004611f0b565b6107e3565b6101dc61030b366004611f0b565b61088e565b6101dc61031e36600461201a565b61092f565b34801561032f57600080fd5b50610338610a3d565b604051610220919061211b565b6101dc610353366004611f0b565b610ab7565b34801561036457600080fd5b506101dc610373366004611bca565b610b32565b34801561038457600080fd5b506101dc61039336600461213d565b610b51565b3480156103a457600080fd5b506101dc610b91565b3480156103b957600080fd5b506101dc6103c836600461213d565b610b9b565b3480156103d957600080fd5b50610338610bc4565b6101dc6103f0366004611cda565b610c11565b34801561040157600080fd5b506101dc61041036600461215f565b610c36565b34801561042157600080fd5b50610253610c63565b34801561043657600080fd5b506101dc6104453660046121c3565b610ca5565b34801561045657600080fd5b506101dc610465366004611cda565b610cc3565b34801561047657600080fd5b506101dc610485366004611c42565b610dd0565b34801561049657600080fd5b506101dc6104a5366004612243565b610dec565b3480156104b657600080fd5b506101dc6104c5366004611c42565b610e0c565b6104d2610e28565b336104dc81610eb7565b6104e98686868686610f02565b506104f2610f80565b5050505050565b610501610e28565b3361050b81610eb7565b6105158383610fb4565b5061051e610f80565b5050565b600061055661055260017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef361227a565b5490565b905090565b600061055661055260017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b61227a565b6000610595610522565b6001600160a01b03166315c14a4a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105cd57600080fd5b505afa1580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906122a5565b61060d610e28565b3361061781610eb7565b610622848484611023565b5061062b610f80565b505050565b610638610e28565b3361064281610eb7565b61062284848461108c565b610655610e28565b600080306001600160a01b0316836040516106709190612314565b600060405180830381855af49150503d80600081146106ab576040519150601f19603f3d011682016040523d82523d6000602084013e6106b0565b606091505b50915091508161071a576044815110156106e55760405162461bcd60e51b81526004016106dc9061234f565b60405180910390fd5b6004016000818060200190518101906106fe91906123b7565b90508060405162461bcd60e51b81526004016106dc9190612423565b5050610724610f80565b50565b6000610731610522565b6001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610556919061243f565b60006107ab610522565b6001600160a01b0316632ee3d92f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105cd57600080fd5b6107eb610e28565b336107f5816110c9565b6107fd6111a7565b6108788c8c8c8c8c8c6108108c8e612586565b8b8b808060200260200160405190810160405280939291908181526020016000905b8282101561085e5761084f604083028601368190038101906125dd565b81526020019060010190610832565b506108739350505050368c90038c018c612674565b6111d3565b50610881610f80565b5050505050505050505050565b610896610e28565b336108a0816110c9565b6108a86111a7565b6108b48c8c6000611257565b6108788c8c8c8c8c8c6108c78c8e612586565b8b8b808060200260200160405190810160405280939291908181526020016000905b8282101561091557610906604083028601368190038101906125dd565b815260200190600101906108e9565b5061092a9350505050368c90038c018c612674565b611293565b610937610e28565b33610941816110c9565b6109496111a7565b60006040518060e001604052808d81526020018c8c80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505090825250602081018b9052604081018a90526060016109ad888a612586565b81526020018686808060200260200160405190810160405280939291908181526020016000905b82821015610a00576109f1604083028601368190038101906125dd565b815260200190600101906109d4565b5050509183525050602001610a1a36869003860186612674565b90529050610a27816112dc565b5050610a31610f80565b50505050505050505050565b6000610a47610522565b6001600160a01b0316636ed71ede6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906126a0565b610abf610e28565b33610ac9816110c9565b610ad16111a7565b6108788c8c8c8c8c8c610ae48c8e612586565b8b8b808060200260200160405190810160405280939291908181526020016000905b8282101561091557610b23604083028601368190038101906125dd565b81526020019060010190610b06565b610b3a610e28565b33610b4481610eb7565b6104e9868686868661136d565b33610b5b816113b1565b6001600160a01b038316301415610b7457610b746126c1565b61062b8383610b81610727565b6001600160a01b031691906113fe565b610b99611454565b565b33610ba5816113b1565b61062b833084610bb3610727565b6001600160a01b03169291906114b1565b6000610bce610727565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610bf99190611c9f565b60206040518083038186803b158015610a7f57600080fd5b610c19610e28565b33610c2381610eb7565b610c2b6111a7565b610622848484611257565b610c3e610e28565b33610c4881610eb7565b610c54858585856114d2565b50610c5d610f80565b50505050565b6000610c6d610522565b6001600160a01b031663bd12584f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105cd57600080fd5b610cad610e28565b33610cb781610eb7565b610c5485858585611547565b610d62610cce61058b565b82610cd761058b565b6001600160a01b031663062bd3e9866040518263ffffffff1660e01b8152600401610d02919061211b565b60206040518083038186803b158015610d1a57600080fd5b505afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d52919061243f565b6001600160a01b03169190611589565b610d6a610522565b6001600160a01b0316633c939dc18484846040518463ffffffff1660e01b8152600401610d99939291906126d7565b600060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b50505050505050565b610dd8610e28565b33610de281610eb7565b610515838361164c565b610df4610e28565b8015610e0457610e046000610dec565b610724610f80565b610e14610e28565b33610e1e81611687565b61051583836116ff565b610e836002610e5b61055260017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b6261227a565b1415600080516020612f818339815191526d1499595b9d1c985b9d0818d85b1b60921b61173a565b610b99610eb160017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b6261227a565b60029055565b610724610ec261055b565b6001600160a01b0316826001600160a01b031614600080516020612f818339815191527213db9b1e481bdddb995c8818d85b8818d85b1b606a1b8461178f565b604051634dcae86960e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90634dcae86990610f499030908990899089908990899060019060009060040161274b565b60006040518083038186803b158015610f6157600080fd5b505af4158015610f75573d6000803e3d6000fd5b505050505050505050565b610b99610fae60017f2055d34ef4e6ac2e46f60705e95454cb98afb4f8e76d000ade51a7e920260b6261227a565b60019055565b60405163043e6d7160e41b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__906343e6d71090610fef903090869086906004016127c2565b60006040518083038186803b15801561100757600080fd5b505af415801561101b573d6000803e3d6000fd5b505050505050565b60405163225f6bc760e21b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063897daf1c906110609030908790879087906004016127d0565b60006040518083038186803b15801561107857600080fd5b505af4158015610dc7573d6000803e3d6000fd5b6040516302be155360e31b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__906315f0aa98906110609030908790879087906004016127d0565b6107246110d461055b565b6001600160a01b0316826001600160a01b0316148061117157506110f6610522565b6001600160a01b03166316774ba0836040518263ffffffff1660e01b81526004016111219190611c9f565b60206040518083038186803b15801561113957600080fd5b505afa15801561114d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111719190612819565b600080516020612f818339815191527f4f6e6c79206f776e6572206f7220636f6e7665727465722063616e2063616c6c8461178f565b610b993415600080516020612f818339815191526e086c2dcdcdee840e6cadcc8408aa89608b1b61173a565b60405163b59abc5f60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063b59abc5f9061121c9030908d908d908d908d908d908d908d908d908d90600401612a1d565b60006040518083038186803b15801561123457600080fd5b505af4158015611248573d6000803e3d6000fd5b50505050505050505050505050565b60405162987d3960e61b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063261f4e40906110609030908790879087906004016127d0565b60405163967c6f6b60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063967c6f6b9061121c9030908d908d908d908d908d908d908d908d908d90600401612a1d565b805160208201516040808401516060850151608086015160a087015160c088015194516323b0865760e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__976323b08657976113419730979296919592949193600190600090600401612b0c565b60006040518083038186803b15801561135957600080fd5b505af41580156104f2573d6000803e3d6000fd5b604051637e0f4c7f60e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90637e0f4c7f90610f4990309089908990899089908990600090600401612ba7565b6107246113bc610522565b6001600160a01b0316826001600160a01b031614600080516020612f818339815191527413db9b1e48199858dd1bdc9e4818d85b8818d85b1b605a1b8461178f565b61062b8363a9059cbb60e01b848460405160240161141d929190612c0f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117d5565b610f8061148561055260017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f205061227a565b15600080516020612f8183398151915272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b61173a565b610c5d846323b872dd60e01b85858560405160240161141d93929190612c2a565b60405163508f47dd60e11b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063a11e8fba906115119030908890889088908890600401612c45565b60006040518083038186803b15801561152957600080fd5b505af415801561153d573d6000803e3d6000fd5b5050505050505050565b604051600162396b2560e21b0319815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063ff1a536c906115119030908890889088908890600401612c91565b8015806116115750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906115bf9030908690600401612cd7565b60206040518083038186803b1580156115d757600080fd5b505afa1580156115eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160f91906126a0565b155b61162d5760405162461bcd60e51b81526004016106dc90612d48565b61062b8363095ea7b360e01b848460405160240161141d929190612c0f565b60405163d5e3aed360e01b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__9063d5e3aed390610fef903090869086906004016127c2565b61072461169261055b565b6001600160a01b0316826001600160a01b031614806116c957506116b4610522565b6001600160a01b0316826001600160a01b0316145b600080516020612f818339815191527f4f6e6c79206f776e6572206f7220666163746f72792063616e2063616c6c00008461178f565b604051631dfa88e760e11b815273__$647ae408e7e1ac559d6a35a4ca834ab881$__90633bf511ce90610fef903090869086906004016127c2565b8261062b5761174882611867565b6101d160f51b61175783611867565b60405160200161176993929190612d68565b60408051601f198184030181529082905262461bcd60e51b82526106dc91600401612423565b83610c5d5761179d83611867565b6101d160f51b6117ac84611867565b61080f60f21b6117bb85611902565b604051611769959493929190601f60f91b90602001612da0565b600061182a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a489092919063ffffffff16565b905080516000148061184b57508080602001905181019061184b9190612819565b61062b5760405162461bcd60e51b81526004016106dc90612e45565b606060008260405160200161187c9190612e55565b60408051601f19818403018152919052905060205b80156118e757806118a181612e6a565b9150508181815181106118b6576118b6612e81565b01602001516001600160f81b031916156118e25760006118d7826001612e97565b835250909392505050565b611891565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061194857611948612e81565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061197757611977612e81565b60200101906001600160f81b031916908160001a90535060005b60148110156118fa5760006119a7826002612eaf565b90506119b5600f8516611a61565b836119c183602961227a565b815181106119d1576119d1612e81565b60200101906001600160f81b031916908160001a905350600484901c93506119fb600f8516611a61565b83611a0783602861227a565b81518110611a1757611a17612e81565b60200101906001600160f81b031916908160001a9053505060049290921c9180611a4081612ece565b915050611991565b6060611a578484600085611a8b565b90505b9392505050565b6000600a821015611a8057611a77603083612e97565b60f81b92915050565b611a77605783612e97565b606082471015611aad5760405162461bcd60e51b81526004016106dc90612f2c565b600080866001600160a01b03168587604051611ac99190612314565b60006040518083038185875af1925050503d8060008114611b06576040519150601f19603f3d011682016040523d82523d6000602084013e611b0b565b606091505b5091509150611b1c87838387611b29565b925050505b949350505050565b60608315611b65578251611b5e576001600160a01b0385163b611b5e5760405162461bcd60e51b81526004016106dc90612f70565b5081611b21565b611b218383815115611b7a5781518083602001fd5b8060405162461bcd60e51b81526004016106dc9190612423565b805b811461072457600080fd5b8035611bac81611b94565b92915050565b6004811061072457600080fd5b8035611bac81611bb2565b600080600080600060a08688031215611be557611be5600080fd5b6000611bf18888611ba1565b9550506020611c0288828901611ba1565b9450506040611c1388828901611ba1565b9350506060611c2488828901611ba1565b9250506080611c3588828901611bbf565b9150509295509295909350565b60008060408385031215611c5857611c58600080fd5b6000611c648585611ba1565b9250506020611c7585828601611ba1565b9150509250929050565b60006001600160a01b038216611bac565b611c9981611c7f565b82525050565b60208101611bac8284611c90565b6000611bac82611c7f565b6000611bac82611cad565b611c9981611cb8565b60208101611bac8284611cc3565b600080600060608486031215611cf257611cf2600080fd5b6000611cfe8686611ba1565b9350506020611d0f86828701611ba1565b9250506040611d2086828701611ba1565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611d6557611d65611d2a565b6040525050565b6000611d7760405190565b9050611d838282611d40565b919050565b60006001600160401b03821115611da157611da1611d2a565b601f19601f83011660200192915050565b82818337506000910152565b6000611dd1611dcc84611d88565b611d6c565b905082815260208101848484011115611dec57611dec600080fd5b6118fa848285611db2565b600082601f830112611e0b57611e0b600080fd5b8135611b21848260208601611dbe565b600060208284031215611e3057611e30600080fd5b81356001600160401b03811115611e4957611e49600080fd5b611b2184828501611df7565b60008083601f840112611e6a57611e6a600080fd5b5081356001600160401b03811115611e8457611e84600080fd5b602083019150836020820283011115611e9f57611e9f600080fd5b9250929050565b60008083601f840112611ebb57611ebb600080fd5b5081356001600160401b03811115611ed557611ed5600080fd5b602083019150836040820283011115611e9f57611e9f600080fd5b600060608284031215611f0557611f05600080fd5b50919050565b60008060008060008060008060008060006101408c8e031215611f3057611f30600080fd5b6000611f3c8e8e611ba1565b9b50506020611f4d8e828f01611ba1565b9a505060408c01356001600160401b03811115611f6c57611f6c600080fd5b611f788e828f01611e55565b99509950506060611f8b8e828f01611ba1565b9750506080611f9c8e828f01611ba1565b96505060a08c01356001600160401b03811115611fbb57611fbb600080fd5b611fc78e828f01611e55565b955095505060c08c01356001600160401b03811115611fe857611fe8600080fd5b611ff48e828f01611ea6565b935093505060e06120078e828f01611ef0565b9150509295989b509295989b9093969950565b6000806000806000806000806000806101208b8d03121561203d5761203d600080fd5b60006120498d8d611ba1565b9a505060208b01356001600160401b0381111561206857612068600080fd5b6120748d828e01611e55565b995099505060406120878d828e01611ba1565b97505060606120988d828e01611ba1565b96505060808b01356001600160401b038111156120b7576120b7600080fd5b6120c38d828e01611e55565b955095505060a08b01356001600160401b038111156120e4576120e4600080fd5b6120f08d828e01611ea6565b935093505060c06121038d828e01611ef0565b9150509295989b9194979a5092959850565b80611c99565b60208101611bac8284612115565b611b9681611c7f565b8035611bac81612129565b6000806040838503121561215357612153600080fd5b6000611c648585612132565b6000806000806080858703121561217857612178600080fd5b60006121848787611ba1565b945050602061219587828801611ba1565b93505060406121a687828801611ba1565b92505060606121b787828801611bbf565b91505092959194509250565b600080600080606085870312156121dc576121dc600080fd5b60006121e88787611ba1565b94505060206121f987828801611ba1565b93505060408501356001600160401b0381111561221857612218600080fd5b61222487828801611e55565b95989497509550505050565b801515611b96565b8035611bac81612230565b60006020828403121561225857612258600080fd5b6000611b218484612238565b634e487b7160e01b600052601160045260246000fd5b60008282101561228c5761228c612264565b500390565b611b9681611cad565b8051611bac81612291565b6000602082840312156122ba576122ba600080fd5b6000611b21848461229a565b60005b838110156122e15781810151838201526020016122c9565b83811115610c5d5750506000910152565b60006122fc825190565b61230a8185602086016122c6565b9290920192915050565b6000611a5a82846122f2565b60158152600060208201744e6f20726576657273696f6e206d6573736167652160581b815291505b5060200190565b60208082528101611bac81612320565b600061236d611dcc84611d88565b90508281526020810184848401111561238857612388600080fd5b6118fa8482856122c6565b600082601f8301126123a7576123a7600080fd5b8151611b2184826020860161235f565b6000602082840312156123cc576123cc600080fd5b81516001600160401b038111156123e5576123e5600080fd5b611b2184828501612393565b60006123fb825190565b8084526020840193506124128185602086016122c6565b601f01601f19169290920192915050565b60208082528101611a5a81846123f1565b8051611bac81612129565b60006020828403121561245457612454600080fd5b6000611b218484612434565b60006001600160401b0382111561247957612479611d2a565b5060209081020190565b60006080828403121561249857612498600080fd5b6124a26080611d6c565b905060006124b08484611bbf565b82525060206124c184848301611ba1565b60208301525060406124d584828501612132565b60408301525060608201356001600160401b038111156124f7576124f7600080fd5b61250384828501611df7565b60608301525092915050565b600061251d611dcc84612460565b8381529050602080820190840283018581111561253c5761253c600080fd5b835b8181101561257c5780356001600160401b0381111561255f5761255f600080fd5b80860161256c8982612483565b855250506020928301920161253e565b5050509392505050565b6000611a5a36848461250f565b6000604082840312156125a8576125a8600080fd5b6125b26040611d6c565b905060006125c08484612132565b82525060206125d184848301611ba1565b60208301525092915050565b6000604082840312156125f2576125f2600080fd5b6000611b218484612593565b6003811061072457600080fd5b8035611bac816125fe565b60006060828403121561262b5761262b600080fd5b6126356060611d6c565b905060006126438484611ba1565b825250602061265484848301611bbf565b60208301525060406126688482850161260b565b60408301525092915050565b60006060828403121561268957612689600080fd5b6000611b218484612616565b8051611bac81611b94565b6000602082840312156126b5576126b5600080fd5b6000611b218484612695565b634e487b7160e01b600052600160045260246000fd5b606081016126e58286612115565b6126f26020830185612115565b611b216040830184612115565b634e487b7160e01b600052602160045260246000fd5b60048110610724576107246126ff565b80611d8381612715565b6000611bac82612725565b611c998161272f565b801515611c99565b610100810161275a828b611cc3565b612767602083018a612115565b6127746040830189612115565b6127816060830188612115565b61278e6080830187612115565b61279b60a083018661273a565b6127a860c0830185612743565b6127b560e0830184612743565b9998505050505050505050565b606081016126e58286611cc3565b608081016127de8287611cc3565b6127eb6020830186612115565b6127f86040830185612115565b6128056060830184612115565b95945050505050565b8051611bac81612230565b60006020828403121561282e5761282e600080fd5b6000611b21848461280e565b81835260006020840193506001600160fb1b0383111561285c5761285c600080fd5b60208302925061286d838584611db2565b50500190565b80516000906080840190612887858261273a565b50602083015161289a6020860182612115565b5060408301516128ad6040860182611c90565b506060830151848203606086015261280582826123f1565b6000611a5a8383612873565b60006128db825190565b808452602084019350836020820285016128f58560200190565b8060005b8581101561292a578484038952815161291285826128c5565b94506020830160209a909a01999250506001016128f9565b5091979650505050505050565b805160408301906129488482611c90565b506020820151610c5d6020850182612115565b60006129678383612937565b505060400190565b6000612979825190565b80845260209384019383018060005b838110156129ad57815161299c888261295b565b975060208301925050600101612988565b509495945050505050565b60038110610724576107246126ff565b80611d83816129b8565b6000611bac826129c8565b611c99816129d2565b805160608301906129f78482612115565b506020820151612a0a602085018261273a565b506040820151610c5d60408501826129dd565b6101608101612a2c828d611cc3565b612a39602083018c612115565b612a46604083018b612115565b8181036060830152612a5981898b61283a565b9050612a686080830188612115565b612a7560a0830187612115565b81810360c0830152612a8781866128d1565b905081810360e0830152612a9b818561296f565b9050612aab6101008301846129e6565b9b9a5050505050505050505050565b6000612ac68383612115565b505060200190565b6000612ad8825190565b80845260209384019383018060005b838110156129ad578151612afb8882612aba565b975060208301925050600101612ae7565b6101808101612b1b828d611cc3565b612b28602083018c612115565b8181036040830152612b3a818b612ace565b9050612b49606083018a612115565b612b566080830189612115565b81810360a0830152612b6881886128d1565b905081810360c0830152612b7c818761296f565b9050612b8b60e08301866129e6565b612b99610140830185612743565b612aab610160830184612743565b60e08101612bb5828a611cc3565b612bc26020830189612115565b612bcf6040830188612115565b612bdc6060830187612115565b612be96080830186612115565b612bf660a083018561273a565b612c0360c0830184612743565b98975050505050505050565b60408101612c1d8285611c90565b611a5a6020830184612115565b60608101612c388286611c90565b6126f26020830185611c90565b60a08101612c538288611cc3565b612c606020830187612115565b612c6d6040830186612115565b612c7a6060830185612115565b612c87608083018461273a565b9695505050505050565b60808101612c9f8288611cc3565b612cac6020830187612115565b612cb96040830186612115565b8181036060830152612ccc81848661283a565b979650505050505050565b60408101612ce58285611c90565b611a5a6020830184611c90565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015291505b5060400190565b60208082528101611bac81612cf2565b6001600160f01b03198116611c99565b6000612d7482866122f2565b9150612d808285612d58565b60028201915061280582846122f2565b6001600160f81b03198116611c99565b6000612dac82896122f2565b9150612db88288612d58565b600282019150612dc882876122f2565b9150612dd48286612d58565b600282019150612de482856122f2565b9150612df08284612d90565b506001019695505050505050565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150612d41565b60208082528101611bac81612dfe565b6000612e618284612115565b50602001919050565b600081612e7957612e79612264565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115612eaa57612eaa612264565b500190565b6000816000190483118215151615612ec957612ec9612264565b500290565b6000600019821415612ee257612ee2612264565b5060010190565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150612d41565b60208082528101611bac81612ee9565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150612348565b60208082528101611bac81612f3c56fe49736f6c6174696f6e4d6f6465546f6b656e5661756c74563100000000000000a264697066735822122032c64ddcaf72e252de87db4b70bf925352d827994e2334dd90bc45268678286464736f6c63430008090033";

type TestIsolationModeTokenVaultV1ConstructorParams =
  | [
      linkLibraryAddresses: TestIsolationModeTokenVaultV1LibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestIsolationModeTokenVaultV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestIsolationModeTokenVaultV1__factory extends ContractFactory {
  constructor(...args: TestIsolationModeTokenVaultV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestIsolationModeTokenVaultV1__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestIsolationModeTokenVaultV1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$647ae408e7e1ac559d6a35a4ca834ab881\\$__", "g"),
      linkLibraryAddresses[
        "contracts/isolation-mode/abstract/impl/IsolationModeTokenVaultV1ActionsImpl.sol:IsolationModeTokenVaultV1ActionsImpl"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestIsolationModeTokenVaultV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestIsolationModeTokenVaultV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestIsolationModeTokenVaultV1 {
    return super.attach(address) as TestIsolationModeTokenVaultV1;
  }
  override connect(signer: Signer): TestIsolationModeTokenVaultV1__factory {
    return super.connect(signer) as TestIsolationModeTokenVaultV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestIsolationModeTokenVaultV1Interface {
    return new utils.Interface(_abi) as TestIsolationModeTokenVaultV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestIsolationModeTokenVaultV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestIsolationModeTokenVaultV1;
  }
}

export interface TestIsolationModeTokenVaultV1LibraryAddresses {
  ["contracts/isolation-mode/abstract/impl/IsolationModeTokenVaultV1ActionsImpl.sol:IsolationModeTokenVaultV1ActionsImpl"]: string;
}
