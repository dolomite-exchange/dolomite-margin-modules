/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IsolationModeUpgradeableProxy,
  IsolationModeUpgradeableProxyInterface,
} from "../../../contracts/isolation-mode/IsolationModeUpgradeableProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061004461003f60017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef361005f565b339055565b610076565b634e487b7160e01b600052601160045260246000fd5b60008282101561007157610071610049565b500390565b610aa9806100856000396000f3fe60806040526004361061004e5760003560e01c8063392e53cd146100ab5780635c60da1b146100d65780638da5cb5b146100f8578063c4d66de81461010d578063d8a06f731461012d57610055565b3661005557005b610099610060610142565b7f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000006e139bdd081a5b9a5d1a585b1a5e9959608a1b61017e565b6100a96100a46101e1565b610260565b005b3480156100b757600080fd5b506100c0610142565b6040516100cd9190610774565b60405180910390f35b3480156100e257600080fd5b506100eb6101e1565b6040516100cd919061079c565b34801561010457600080fd5b506100eb610284565b34801561011957600080fd5b506100a96101283660046107c9565b6102b4565b34801561013957600080fd5b506100eb61046a565b600061017661017260017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f2050610808565b5490565b600114905090565b826101dc5761018c8261049a565b6101d160f51b61019b8361049a565b6040516020016101ad9392919061087d565b60408051601f198184030181529082905262461bcd60e51b82526101d3916004016108e0565b60405180910390fd5b505050565b60006101eb61046a565b6001600160a01b031663a6e7d83f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610903565b905090565b3660008037600080366000845af43d6000803e80801561027f573d6000f35b3d6000fd5b600061025b61017260017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b610808565b6102fd6102bf610142565b157f49736f6c6174696f6e4d6f64655570677261646561626c6550726f787900000072105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b61017e565b6103c83061030961046a565b6001600160a01b031663b01f61e1846040518263ffffffff1660e01b8152600401610334919061079c565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610903565b6001600160a01b0316147f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000006e125b9d985b1a59081858d8dbdd5b9d608a1b84610535565b6103fb6103f660017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b610808565b829055565b6104326104066101e1565b60405161041e9063204a7f0760e21b90602001610934565b604051602081830303815290604052610581565b5061046761046160017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f2050610808565b60019055565b50565b600061025b61017260017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef3610808565b60606000826040516020016104af919061094f565b60408051601f19818403018152919052905060205b801561051a57806104d481610964565b9150508181815181106104e9576104e961097b565b01602001516001600160f81b0319161561051557600061050a826001610991565b835250909392505050565b6104c4565b5060408051600080825260208201909252905b509392505050565b8361057b576105438361049a565b6101d160f51b6105528461049a565b61080f60f21b610561856105fa565b6040516101ad959493929190601f60f91b906020016109b9565b50505050565b6060600080846001600160a01b03168460405161059e9190610a17565b600060405180830381855af49150503d80600081146105d9576040519150601f19603f3d011682016040523d82523d6000602084013e6105de565b606091505b5091509150816105f0576105f0610a23565b9150505b92915050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b816000815181106106405761064061097b565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061066f5761066f61097b565b60200101906001600160f81b031916908160001a90535060005b601481101561052d57600061069f826002610a39565b90506106ad600f8516610740565b836106b9836029610808565b815181106106c9576106c961097b565b60200101906001600160f81b031916908160001a905350600484901c93506106f3600f8516610740565b836106ff836028610808565b8151811061070f5761070f61097b565b60200101906001600160f81b031916908160001a9053505060049290921c918061073881610a58565b915050610689565b6000600a82101561075f57610756603083610991565b60f81b92915050565b610756605783610991565b8015155b82525050565b602081016105f4828461076a565b60006001600160a01b0382166105f4565b61076e81610782565b602081016105f48284610793565b6107b381610782565b811461046757600080fd5b80356105f4816107aa565b6000602082840312156107de576107de600080fd5b60006107ea84846107be565b949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561081a5761081a6107f2565b500390565b60005b8381101561083a578181015183820152602001610822565b8381111561057b5750506000910152565b6000610855825190565b61086381856020860161081f565b9290920192915050565b6001600160f01b0319811661076e565b6000610889828661084b565b9150610895828561086d565b6002820191506108a5828461084b565b95945050505050565b60006108b8825190565b8084526020840193506108cf81856020860161081f565b601f01601f19169290920192915050565b602080825281016108f181846108ae565b9392505050565b80516105f4816107aa565b60006020828403121561091857610918600080fd5b60006107ea84846108f8565b6001600160e01b0319811661076e565b60006109408284610924565b50600401919050565b8061076e565b600061095b8284610949565b50602001919050565b600081610973576109736107f2565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600082198211156109a4576109a46107f2565b500190565b6001600160f81b0319811661076e565b60006109c5828961084b565b91506109d1828861086d565b6002820191506109e1828761084b565b91506109ed828661086d565b6002820191506109fd828561084b565b9150610a0982846109a9565b506001019695505050505050565b60006108f1828461084b565b634e487b7160e01b600052600160045260246000fd5b6000816000190483118215151615610a5357610a536107f2565b500290565b6000600019821415610a6c57610a6c6107f2565b506001019056fea2646970667358221220c7eb29a23ba57bc04e5cb350764568ee46b24373bd23a6b4880fbb0d6edacf1464736f6c63430008090033";

type IsolationModeUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsolationModeUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsolationModeUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: IsolationModeUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<IsolationModeUpgradeableProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<IsolationModeUpgradeableProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IsolationModeUpgradeableProxy {
    return super.attach(address) as IsolationModeUpgradeableProxy;
  }
  override connect(signer: Signer): IsolationModeUpgradeableProxy__factory {
    return super.connect(signer) as IsolationModeUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsolationModeUpgradeableProxyInterface {
    return new utils.Interface(_abi) as IsolationModeUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IsolationModeUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IsolationModeUpgradeableProxy;
  }
}
