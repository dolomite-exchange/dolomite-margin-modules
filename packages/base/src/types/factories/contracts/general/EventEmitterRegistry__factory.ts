/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EventEmitterRegistry,
  EventEmitterRegistryInterface,
} from "../../../contracts/general/EventEmitterRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncDepositCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncDepositCancelledFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType:
          "struct IUpgradeableAsyncIsolationModeWrapperTrader.DepositInfo",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "AsyncDepositCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncDepositExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncDepositFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    name: "AsyncDepositOutputAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncWithdrawalCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidation",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType:
          "struct IUpgradeableAsyncIsolationModeUnwrapperTrader.WithdrawalInfo",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "AsyncWithdrawalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncWithdrawalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncWithdrawalFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    name: "AsyncWithdrawalOutputAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "borrowAccountNumber",
        type: "uint256",
      },
    ],
    name: "BorrowPositionOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "marginWithdrawalUpdate",
        type: "tuple",
      },
    ],
    name: "MarginPositionClose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "marginDepositUpdate",
        type: "tuple",
      },
    ],
    name: "MarginPositionOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "marketIdsPath",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "tradersPath",
        type: "tuple[]",
      },
    ],
    name: "ZapExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncDepositCancelled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncDepositCancelledFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
        ],
        internalType:
          "struct IUpgradeableAsyncIsolationModeWrapperTrader.DepositInfo",
        name: "_deposit",
        type: "tuple",
      },
    ],
    name: "emitAsyncDepositCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncDepositExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncDepositFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputAmount",
        type: "uint256",
      },
    ],
    name: "emitAsyncDepositOutputAmountUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncWithdrawalCancelled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidation",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType:
          "struct IUpgradeableAsyncIsolationModeUnwrapperTrader.WithdrawalInfo",
        name: "_withdrawal",
        type: "tuple",
      },
    ],
    name: "emitAsyncWithdrawalCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncWithdrawalExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncWithdrawalFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputAmount",
        type: "uint256",
      },
    ],
    name: "emitAsyncWithdrawalOutputAmountUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
    ],
    name: "emitBorrowPositionOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_withdrawalToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_marginWithdrawalUpdate",
        type: "tuple",
      },
    ],
    name: "emitMarginPositionClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_marginDepositUpdate",
        type: "tuple",
      },
    ],
    name: "emitMarginPositionOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
    ],
    name: "emitZapExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506119cb806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634ee7426e116100a25780639929b0f5116100715780639929b0f5146101f6578063a3b2907614610209578063a5697d331461021c578063bacf3bac1461022f578063eb02def21461024257600080fd5b80634ee7426e146101b557806362eeb68e146101c8578063717d8088146101db5780638129fc1c146101ee57600080fd5b806315cc2b8f116100de57806315cc2b8f14610169578063255a3bf71461017c5780632b1ca6cd1461018f5780634a015d67146101a257600080fd5b806304732a83146101105780630f680cc21461012557806312d63f2c1461013857806315c14a4a1461014b575b600080fd5b61012361011e366004610cac565b610255565b005b610123610133366004610d04565b61029d565b610123610146366004610e0b565b6103b8565b610153610410565b6040516101609190610e9e565b60405180910390f35b610123610177366004610eac565b610449565b61012361018a366004610f47565b61049e565b61012361019d366004610d04565b6104fc565b6101236101b0366004610cac565b61054c565b6101236101c3366004610fff565b610594565b6101236101d6366004611060565b6105da565b6101236101e93660046110a8565b610621565b610123610667565b610123610204366004610eac565b610737565b610123610217366004610cac565b61077d565b61012361022a366004610e0b565b6107c5565b61012361023d366004610e0b565b61080d565b610123610250366004610cac565b610855565b8033610261828261089d565b6040516001600160a01b0384169085907fb81c7282d67bf68c0e1c366a5c99c73552afca7a394aec76112d7ec6127f148690600090a350505050565b336103616102a9610410565b6001600160a01b031663052f72d7836040518263ffffffff1660e01b81526004016102d491906110f8565b60206040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190611119565b7127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206120676c6f62616c206f70657261746f7200846109ec565b87896001600160a01b03167fecf4fe97b02d1620f6c04edbd484eff130a2247b31ac1ef061f54c8177b657b98989898989896040516103a59695949392919061123f565b60405180910390a3505050505050505050565b82336103c4828261089d565b846001600160a01b0316867fb49936231b6b93c6b550005f9d7bf3f6ef2d090495bcaaf04948b3f970141d2286866040516104009291906112d0565b60405180910390a3505050505050565b600061044461044060017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa176112f8565b5490565b905090565b8133610455828261089d565b836001600160a01b0316857fe54d9bf9276805c6d3349a45eb0b373584d5b36adad7da2f9a728a9eca514f8e8560405161048f919061130f565b60405180910390a35050505050565b336104aa6102a9610410565b866001600160a01b03167f4734ab23c4afeb4c308f754e6840d7f06d306a7331f39119ac53c8ee656ec2cf87878787876040516104eb959493929190611536565b60405180910390a250505050505050565b336105086102a9610410565b87896001600160a01b03167fb81518bcaf15a56ac0e4b0ff579f0bd8e163ac444d526743908dc22733789f068989898989896040516103a59695949392919061123f565b8033610558828261089d565b6040516001600160a01b0384169085907f79ae3bafba9acd97592ccb085127403890c4caab2fa5688230a4053fb01a2c6c90600090a350505050565b81336105a0828261089d565b836001600160a01b0316857f8c528bde64c1b9528c88498bc469dbd84b35fff473102a86eba122238d20619d8560405161048f9190611667565b336105e66102a9610410565b60405182906001600160a01b038516907ffd9156bd20ce24a786c761efe71a3931de038c1f2620c1bb4720609bc742b58e90600090a3505050565b813361062d828261089d565b836001600160a01b0316857f07483e098a6cfa5c67659e928fc3e7b08b3e60e09d57a7825c4becf2da6da2a78560405161048f9190611732565b600054610100900460ff16158080156106875750600054600160ff909116105b806106a15750303b1580156106a1575060005460ff166001145b6106c65760405162461bcd60e51b81526004016106bd90611740565b60405180910390fd5b6000805460ff1916600117905580156106e9576000805461ff0019166101001790555b8015610734576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061072b906001906117a6565b60405180910390a15b50565b8133610743828261089d565b836001600160a01b0316857fc9928e1d9617af662c39df3b5cc307baae009cd2f7f20f6602a33248b2b064558560405161048f919061130f565b8033610789828261089d565b6040516001600160a01b0384169085907fdd67006c5e22e2c60998a37b5b2e9c6b4cb5b863c0585594c38fe8753bd35b6790600090a350505050565b82336107d1828261089d565b846001600160a01b0316867f5f0729fbbcabdd12edc1f3e5bbb039131d87c438aa5771fe8540ecf19a4ed76686866040516104009291906112d0565b8233610819828261089d565b846001600160a01b0316867ffc712b6e64eb509b3349e9c98f17ce96b1c6d5e0f249497169575a1abdaec08f86866040516104009291906112d0565b8033610861828261089d565b6040516001600160a01b0384169085907fdb59e8c64546e7cc1a3b0f384b953ea638c37523272e3f65dc05f7a6d738c22390600090a350505050565b60006108a7610410565b6001600160a01b0316638fae3be1846040518263ffffffff1660e01b81526004016108d291906110f8565b60206040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092291906117bf565b905080610931576109316117e0565b60405162b3ba5d60e51b81526109e7906001600160a01b038516906316774ba0906109609086906004016110f8565b60206040518083038186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611119565b6b22bb32b73a22b6b4ba3a32b960a11b7f43616c6c6572206973206e6f74206120636f6e76657274657200000000000000856109ec565b505050565b83610a58576109fa83610a5e565b6101d160f51b610a0984610a5e565b61080f60f21b610a1885610af9565b604051610a32959493929190601f60f91b90602001611864565b60408051601f198184030181529082905262461bcd60e51b82526106bd916004016118f0565b50505050565b6060600082604051602001610a739190611901565b60408051601f19818403018152919052905060205b8015610ade5780610a9881611916565b915050818181518110610aad57610aad61192d565b01602001516001600160f81b03191615610ad9576000610ace826001611943565b835250909392505050565b610a88565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b81600081518110610b3f57610b3f61192d565b60200101906001600160f81b031916908160001a905350607860f81b81600181518110610b6e57610b6e61192d565b60200101906001600160f81b031916908160001a90535060005b6014811015610af1576000610b9e82600261195b565b9050610bac600f8516610c3f565b83610bb88360296112f8565b81518110610bc857610bc861192d565b60200101906001600160f81b031916908160001a905350600484901c9350610bf2600f8516610c3f565b83610bfe8360286112f8565b81518110610c0e57610c0e61192d565b60200101906001600160f81b031916908160001a9053505060049290921c9180610c378161197a565b915050610b88565b6000600a821015610c5e57610c55603083611943565b60f81b92915050565b610c55605783611943565b805b811461073457600080fd5b8035610c8181610c69565b92915050565b60006001600160a01b038216610c81565b610c6b81610c87565b8035610c8181610c98565b60008060408385031215610cc257610cc2600080fd5b6000610cce8585610c76565b9250506020610cdf85828601610ca1565b9150509250929050565b600060808284031215610cfe57610cfe600080fd5b50919050565b600080600080600080600080610220898b031215610d2457610d24600080fd5b6000610d308b8b610ca1565b9850506020610d418b828c01610c76565b9750506040610d528b828c01610ca1565b9650506060610d638b828c01610ca1565b9550506080610d748b828c01610ca1565b94505060a0610d858b828c01610ce9565b935050610120610d978b828c01610ce9565b9250506101a0610da98b828c01610ce9565b9150509295985092959890939650565b60008083601f840112610dce57610dce600080fd5b50813567ffffffffffffffff811115610de957610de9600080fd5b602083019150836001820283011115610e0457610e04600080fd5b9250929050565b60008060008060608587031215610e2457610e24600080fd5b6000610e308787610c76565b9450506020610e4187828801610ca1565b935050604085013567ffffffffffffffff811115610e6157610e61600080fd5b610e6d87828801610db9565b95989497509550505050565b6000610c8182610c87565b6000610c8182610e79565b610e9881610e84565b82525050565b60208101610c818284610e8f565b600080600060608486031215610ec457610ec4600080fd5b6000610ed08686610c76565b9350506020610ee186828701610ca1565b9250506040610ef286828701610c76565b9150509250925092565b60008083601f840112610f1157610f11600080fd5b50813567ffffffffffffffff811115610f2c57610f2c600080fd5b602083019150836020820283011115610e0457610e04600080fd5b60008060008060008060808789031215610f6357610f63600080fd5b6000610f6f8989610ca1565b9650506020610f8089828a01610c76565b955050604087013567ffffffffffffffff811115610fa057610fa0600080fd5b610fac89828a01610efc565b9450945050606087013567ffffffffffffffff811115610fce57610fce600080fd5b610fda89828a01610efc565b92509250509295509295509295565b60006101208284031215610cfe57610cfe600080fd5b60008060006060848603121561101757611017600080fd5b60006110238686610c76565b935050602061103486828701610ca1565b925050604084013567ffffffffffffffff81111561105457611054600080fd5b610ef286828701610fe9565b6000806040838503121561107657611076600080fd5b60006110828585610ca1565b9250506020610cdf85828601610c76565b600060e08284031215610cfe57610cfe600080fd5b600080600061012084860312156110c1576110c1600080fd5b60006110cd8686610c76565b93505060206110de86828701610ca1565b9250506040610ef286828701611093565b610e9881610c87565b60208101610c8182846110ef565b801515610c6b565b8051610c8181611106565b60006020828403121561112e5761112e600080fd5b600061113a848461110e565b949350505050565b8035610c8181611106565b600061115c6020840184611142565b9392505050565b801515610e98565b600061115c6020840184610c76565b80610e98565b6040820161118e828061114d565b6111988482611163565b506111a6602083018361116b565b610a58602085018261117a565b6001600160801b038116610c6b565b8035610c81816111b3565b600061115c60208401846111c2565b6001600160801b038116610e98565b604082016111f9828061114d565b6112038482611163565b5061121160208301836111cd565b610a5860208501826111dc565b608082018161122d8482611180565b5060408201610a5860408501826111eb565b6101e0810161124e82896110ef565b61125b60208301886110ef565b61126860408301876110ef565b611275606083018661121e565b61128260e083018561121e565b61129061016083018461121e565b979650505050505050565b82818337506000910152565b81835260006020840193506112bd83858461129b565b601f19601f8401165b9093019392505050565b6020808252810161113a8184866112a7565b634e487b7160e01b600052601160045260246000fd5b60008282101561130a5761130a6112e2565b500390565b60208101610c81828461117a565b81835260006020840193506001600160fb1b0383111561133f5761133f600080fd5b60208302925061135083858461129b565b50500190565b6004811061073457600080fd5b8035610c8181611356565b600061115c6020840184611363565b634e487b7160e01b600052602160045260246000fd5b600481106107345761073461137d565b806113ad81611393565b919050565b6000610c81826113a3565b610e98816113b2565b600061115c6020840184610ca1565b6000808335601e19368590030181126113f0576113f0600080fd5b83810160208101935035915067ffffffffffffffff82111561141457611414600080fd5b3682900384131561142757611427600080fd5b509250929050565b60006080830161143f838061136e565b61144985826113bd565b50611457602084018461116b565b611464602086018261117a565b5061147260408401846113c6565b61147f60408601826110ef565b5061148d60608401846113d5565b85830360608701526114a08382846112a7565b9695505050505050565b600061115c838361142f565b60008235607e19368490030181126114d0576114d0600080fd5b90910192915050565b818352600060208401935083602084028101838060005b8781101561152957848403895261150782846114b6565b61151185826114aa565b94506020830160209a909a01999250506001016114f0565b5091979650505050505050565b60608101611544828861117a565b818103602083015261155781868861131d565b905081810360408301526112908184866114d9565b6000610120830161157d838061116b565b611587858261117a565b5061159560208401846113c6565b6115a260208601826110ef565b506115b0604084018461116b565b6115bd604086018261117a565b506115cb606084018461116b565b6115d8606086018261117a565b506115e660808401846113c6565b6115f360808601826110ef565b5061160160a084018461116b565b61160e60a086018261117a565b5061161c60c084018461114d565b61162960c0860182611163565b5061163760e084018461114d565b61164460e0860182611163565b506116536101008401846113d5565b8583036101008701526114a08382846112a7565b6020808252810161115c818461156c565b60e08201611686828061116b565b611690848261117a565b5061169e60208301836113c6565b6116ab60208501826110ef565b506116b9604083018361116b565b6116c6604085018261117a565b506116d460608301836113c6565b6116e160608501826110ef565b506116ef608083018361116b565b6116fc608085018261117a565b5061170a60a083018361116b565b61171760a085018261117a565b5061172560c083018361114d565b610a5860c0850182611163565b60e08101610c818284611678565b60208082528101610c8181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b600060ff8216610c81565b610e9881611792565b60208101610c81828461179d565b8051610c8181610c69565b6000602082840312156117d4576117d4600080fd5b600061113a84846117b4565b634e487b7160e01b600052600160045260246000fd5b60005b838110156118115781810151838201526020016117f9565b83811115610a585750506000910152565b600061182c825190565b61183a8185602086016117f6565b9290920192915050565b6001600160f01b03198116610e98565b6001600160f81b03198116610e98565b60006118708289611822565b915061187c8288611844565b60028201915061188c8287611822565b91506118988286611844565b6002820191506118a88285611822565b91506118b48284611854565b506001019695505050505050565b60006118cc825190565b8084526020840193506118e38185602086016117f6565b601f19601f8201166112c6565b6020808252810161115c81846118c2565b600061190d828461117a565b50602001919050565b600081611925576119256112e2565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115611956576119566112e2565b500190565b6000816000190483118215151615611975576119756112e2565b500290565b600060001982141561198e5761198e6112e2565b506001019056fea26469706673582212203aaf1d42bcfccb5934654f4f50a8ed0d14325af153c1bd2cb02b52b38dfd06df64736f6c63430008090033";

type EventEmitterRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventEmitterRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventEmitterRegistry__factory extends ContractFactory {
  constructor(...args: EventEmitterRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<EventEmitterRegistry> {
    return super.deploy(overrides || {}) as Promise<EventEmitterRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventEmitterRegistry {
    return super.attach(address) as EventEmitterRegistry;
  }
  override connect(signer: Signer): EventEmitterRegistry__factory {
    return super.connect(signer) as EventEmitterRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventEmitterRegistryInterface {
    return new utils.Interface(_abi) as EventEmitterRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventEmitterRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EventEmitterRegistry;
  }
}
