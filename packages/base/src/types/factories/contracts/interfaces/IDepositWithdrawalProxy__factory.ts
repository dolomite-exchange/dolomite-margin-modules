/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDepositWithdrawalProxy,
  IDepositWithdrawalProxyInterface,
} from "../../../contracts/interfaces/IDepositWithdrawalProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountIndex",
        type: "uint256",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositETHIntoDefaultAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPar",
        type: "uint256",
      },
    ],
    name: "depositPar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPar",
        type: "uint256",
      },
    ],
    name: "depositParIntoDefaultAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_toAccountIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "depositWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "depositWeiIntoDefaultAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawETHFromDefaultAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPar",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawPar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPar",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawParFromDefaultAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromAccountIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
      {
        internalType: "enum AccountBalanceLib.BalanceCheckFlag",
        name: "_balanceCheckFlag",
        type: "uint8",
      },
    ],
    name: "withdrawWeiFromDefaultAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDepositWithdrawalProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IDepositWithdrawalProxyInterface {
    return new utils.Interface(_abi) as IDepositWithdrawalProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDepositWithdrawalProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IDepositWithdrawalProxy;
  }
}
