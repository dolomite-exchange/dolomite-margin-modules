/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILiquidatorProxyV1,
  ILiquidatorProxyV1Interface,
} from "../../../contracts/interfaces/ILiquidatorProxyV1";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo",
        name: "_solidAccount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo",
        name: "_liquidAccount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Decimal",
        name: "_minLiquidatorRatio",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_minValueLiquidated",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_owedPreferences",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_heldPreferences",
        type: "uint256[]",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILiquidatorProxyV1__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidatorProxyV1Interface {
    return new utils.Interface(_abi) as ILiquidatorProxyV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidatorProxyV1 {
    return new Contract(address, _abi, signerOrProvider) as ILiquidatorProxyV1;
  }
}
