/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestChainlinkRegistry,
  TestChainlinkRegistryInterface,
} from "../../../contracts/test/TestChainlinkRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "forwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101c63803806101c683398101604081905261002f91610089565b600080546001600160a01b0319166001600160a01b03929092169190911790556100b2565b60006001600160a01b0382165b92915050565b61007081610054565b811461007b57600080fd5b50565b805161006181610067565b60006020828403121561009e5761009e600080fd5b60006100aa848461007e565b949350505050565b610105806100c16000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806379ea9943146037578063f645d4f9146066575b600080fd5b605260423660046081565b506000546001600160a01b031690565b604051605d919060c3565b60405180910390f35b6000546052906001600160a01b031681565b80355b92915050565b6000602082840312156094576094600080fd5b6000609e84846078565b949350505050565b60006001600160a01b038216607b565b60bd8160a6565b82525050565b60208101607b828460b656fea264697066735822122000b80e23c5a2637cbd82848c0cd9563bb7b0572a562f4283e6053934da18fc7364736f6c63430008090033";

type TestChainlinkRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestChainlinkRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestChainlinkRegistry__factory extends ContractFactory {
  constructor(...args: TestChainlinkRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _forwarder: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestChainlinkRegistry> {
    return super.deploy(
      _forwarder,
      overrides || {}
    ) as Promise<TestChainlinkRegistry>;
  }
  override getDeployTransaction(
    _forwarder: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_forwarder, overrides || {});
  }
  override attach(address: string): TestChainlinkRegistry {
    return super.attach(address) as TestChainlinkRegistry;
  }
  override connect(signer: Signer): TestChainlinkRegistry__factory {
    return super.connect(signer) as TestChainlinkRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestChainlinkRegistryInterface {
    return new utils.Interface(_abi) as TestChainlinkRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestChainlinkRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestChainlinkRegistry;
  }
}
