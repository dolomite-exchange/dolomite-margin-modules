/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OnlyDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyDolomiteMargin__factory>;
    getContractFactory(
      name: "OnlyDolomiteMarginForUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyDolomiteMarginForUpgradeable__factory>;
    getContractFactory(
      name: "IAlgebraV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlgebraV3Pool__factory>;
    getContractFactory(
      name: "IOnlyDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOnlyDolomiteMargin__factory>;
    getContractFactory(
      name: "IDolomiteInterestSetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteInterestSetter__factory>;
    getContractFactory(
      name: "IDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMargin__factory>;
    getContractFactory(
      name: "IDolomiteMarginAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginAdmin__factory>;
    getContractFactory(
      name: "IDolomitePriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomitePriceOracle__factory>;
    getContractFactory(
      name: "IAlgebraPoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlgebraPoolErrors__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "ChainlinkPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkPriceOracle__factory>;
    getContractFactory(
      name: "IChainlinkAccessControlAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAccessControlAggregator__factory>;
    getContractFactory(
      name: "IChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAggregator__factory>;
    getContractFactory(
      name: "IChainlinkAutomation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAutomation__factory>;
    getContractFactory(
      name: "IChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "IChainlinkPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkPriceOracle__factory>;
    getContractFactory(
      name: "IChainlinkPriceOracleOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkPriceOracleOld__factory>;
    getContractFactory(
      name: "IChainlinkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkRegistry__factory>;
    getContractFactory(
      name: "ITWAPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWAPPriceOracle__factory>;
    getContractFactory(
      name: "TWAPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWAPPriceOracle__factory>;

    getContractAt(
      name: "OnlyDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyDolomiteMargin>;
    getContractAt(
      name: "OnlyDolomiteMarginForUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyDolomiteMarginForUpgradeable>;
    getContractAt(
      name: "IAlgebraV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlgebraV3Pool>;
    getContractAt(
      name: "IOnlyDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOnlyDolomiteMargin>;
    getContractAt(
      name: "IDolomiteInterestSetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteInterestSetter>;
    getContractAt(
      name: "IDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMargin>;
    getContractAt(
      name: "IDolomiteMarginAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginAdmin>;
    getContractAt(
      name: "IDolomitePriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomitePriceOracle>;
    getContractAt(
      name: "IAlgebraPoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlgebraPoolErrors>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "ChainlinkPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkPriceOracle>;
    getContractAt(
      name: "IChainlinkAccessControlAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAccessControlAggregator>;
    getContractAt(
      name: "IChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAggregator>;
    getContractAt(
      name: "IChainlinkAutomation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAutomation>;
    getContractAt(
      name: "IChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "IChainlinkPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkPriceOracle>;
    getContractAt(
      name: "IChainlinkPriceOracleOld",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkPriceOracleOld>;
    getContractAt(
      name: "IChainlinkRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkRegistry>;
    getContractAt(
      name: "ITWAPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWAPPriceOracle>;
    getContractAt(
      name: "TWAPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TWAPPriceOracle>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
