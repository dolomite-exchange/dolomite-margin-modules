/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace IDolomiteStructs {
  export type MonetaryPriceStruct = { value: BigNumberish };

  export type MonetaryPriceStructOutput = [BigNumber] & { value: BigNumber };
}

export interface ChainlinkPriceOracleInterface extends utils.Interface {
  functions: {
    "DOLOMITE_MARGIN()": FunctionFragment;
    "getAggregatorByToken(address)": FunctionFragment;
    "getDecimalsByToken(address)": FunctionFragment;
    "getPrice(address)": FunctionFragment;
    "getTokenPairByToken(address)": FunctionFragment;
    "ownerInsertOrUpdateOracleToken(address,uint8,address,address)": FunctionFragment;
    "ownerSetStalenessThreshold(uint256)": FunctionFragment;
    "stalenessThreshold()": FunctionFragment;
    "standardizeNumberOfDecimals(uint8,uint256,uint8)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DOLOMITE_MARGIN"
      | "getAggregatorByToken"
      | "getDecimalsByToken"
      | "getPrice"
      | "getTokenPairByToken"
      | "ownerInsertOrUpdateOracleToken"
      | "ownerSetStalenessThreshold"
      | "stalenessThreshold"
      | "standardizeNumberOfDecimals"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DOLOMITE_MARGIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAggregatorByToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getDecimalsByToken",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getPrice", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getTokenPairByToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerInsertOrUpdateOracleToken",
    values: [string, BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetStalenessThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "stalenessThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "standardizeNumberOfDecimals",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "DOLOMITE_MARGIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAggregatorByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDecimalsByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTokenPairByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerInsertOrUpdateOracleToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetStalenessThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stalenessThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "standardizeNumberOfDecimals",
    data: BytesLike
  ): Result;

  events: {
    "StalenessDurationUpdated(uint256)": EventFragment;
    "TokenInsertedOrUpdated(address,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "StalenessDurationUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenInsertedOrUpdated"): EventFragment;
}

export interface StalenessDurationUpdatedEventObject {
  stalenessDuration: BigNumber;
}
export type StalenessDurationUpdatedEvent = TypedEvent<
  [BigNumber],
  StalenessDurationUpdatedEventObject
>;

export type StalenessDurationUpdatedEventFilter =
  TypedEventFilter<StalenessDurationUpdatedEvent>;

export interface TokenInsertedOrUpdatedEventObject {
  token: string;
  aggregator: string;
  tokenPair: string;
}
export type TokenInsertedOrUpdatedEvent = TypedEvent<
  [string, string, string],
  TokenInsertedOrUpdatedEventObject
>;

export type TokenInsertedOrUpdatedEventFilter =
  TypedEventFilter<TokenInsertedOrUpdatedEvent>;

export interface ChainlinkPriceOracle extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ChainlinkPriceOracleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<[string]>;

    getAggregatorByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDecimalsByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[IDolomiteStructs.MonetaryPriceStructOutput]>;

    getTokenPairByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[string] & { _tokenPair: string }>;

    ownerInsertOrUpdateOracleToken(
      _token: string,
      _tokenDecimals: BigNumberish,
      _chainlinkAggregator: string,
      _tokenPair: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetStalenessThreshold(
      _stalenessThreshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    stalenessThreshold(overrides?: CallOverrides): Promise<[BigNumber]>;

    standardizeNumberOfDecimals(
      _tokenDecimals: BigNumberish,
      _value: BigNumberish,
      _valueDecimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

  getAggregatorByToken(
    _token: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getDecimalsByToken(
    _token: string,
    overrides?: CallOverrides
  ): Promise<number>;

  getPrice(
    _token: string,
    overrides?: CallOverrides
  ): Promise<IDolomiteStructs.MonetaryPriceStructOutput>;

  getTokenPairByToken(
    _token: string,
    overrides?: CallOverrides
  ): Promise<string>;

  ownerInsertOrUpdateOracleToken(
    _token: string,
    _tokenDecimals: BigNumberish,
    _chainlinkAggregator: string,
    _tokenPair: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetStalenessThreshold(
    _stalenessThreshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  stalenessThreshold(overrides?: CallOverrides): Promise<BigNumber>;

  standardizeNumberOfDecimals(
    _tokenDecimals: BigNumberish,
    _value: BigNumberish,
    _valueDecimals: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

    getAggregatorByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getDecimalsByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<number>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<IDolomiteStructs.MonetaryPriceStructOutput>;

    getTokenPairByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<string>;

    ownerInsertOrUpdateOracleToken(
      _token: string,
      _tokenDecimals: BigNumberish,
      _chainlinkAggregator: string,
      _tokenPair: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetStalenessThreshold(
      _stalenessThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    stalenessThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    standardizeNumberOfDecimals(
      _tokenDecimals: BigNumberish,
      _value: BigNumberish,
      _valueDecimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "StalenessDurationUpdated(uint256)"(
      stalenessDuration?: null
    ): StalenessDurationUpdatedEventFilter;
    StalenessDurationUpdated(
      stalenessDuration?: null
    ): StalenessDurationUpdatedEventFilter;

    "TokenInsertedOrUpdated(address,address,address)"(
      token?: string | null,
      aggregator?: string | null,
      tokenPair?: string | null
    ): TokenInsertedOrUpdatedEventFilter;
    TokenInsertedOrUpdated(
      token?: string | null,
      aggregator?: string | null,
      tokenPair?: string | null
    ): TokenInsertedOrUpdatedEventFilter;
  };

  estimateGas: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<BigNumber>;

    getAggregatorByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDecimalsByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrice(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    getTokenPairByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerInsertOrUpdateOracleToken(
      _token: string,
      _tokenDecimals: BigNumberish,
      _chainlinkAggregator: string,
      _tokenPair: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetStalenessThreshold(
      _stalenessThreshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    stalenessThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    standardizeNumberOfDecimals(
      _tokenDecimals: BigNumberish,
      _value: BigNumberish,
      _valueDecimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAggregatorByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDecimalsByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrice(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenPairByToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerInsertOrUpdateOracleToken(
      _token: string,
      _tokenDecimals: BigNumberish,
      _chainlinkAggregator: string,
      _tokenPair: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetStalenessThreshold(
      _stalenessThreshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    stalenessThreshold(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    standardizeNumberOfDecimals(
      _tokenDecimals: BigNumberish,
      _value: BigNumberish,
      _valueDecimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
