/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OARB, OARBInterface } from "../../contracts/OARB";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200141d3803806200141d83398101604081905262000034916200018f565b604080518082018252600a81526937a0a921102a37b5b2b760b11b60208083019182528351808501909452600484526337a0a92160e11b908401528151849391620000839160039190620000af565b50805162000099906004906020840190620000af565b5050506001600160a01b03166080525062000203565b828054620000bd90620001d2565b90600052602060002090601f016020900481019282620000e157600085556200012c565b82601f10620000fc57805160ff19168380011785556200012c565b828001600101855582156200012c579182015b828111156200012c5782518255916020019190600101906200010f565b506200013a9291506200013e565b5090565b5b808211156200013a57600081556001016200013f565b60006001600160a01b0382165b92915050565b620001738162000155565b81146200017f57600080fd5b50565b8051620001628162000168565b600060208284031215620001a657620001a6600080fd5b6000620001b4848462000182565b949350505050565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620001e757607f821691505b60208210811415620001fd57620001fd620001bc565b50919050565b6080516111f06200022d6000396000818161012f0152818161032b015261042601526111f06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d68146101e7578063a457c2d7146101fa578063a9059cbb1461020d578063dd62ed3e1461022057600080fd5b806342966c68146101a157806370a08231146101b657806395d89b41146101df57600080fd5b806318160ddd116100c857806318160ddd1461015b57806323b872dd1461016c578063313ce5671461017f578063395093511461018e57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806315c14a4a1461012d575b600080fd5b6100f7610233565b6040516101049190610ae3565b60405180910390f35b61012061011b366004610b3f565b6102c5565b6040516101049190610b86565b7f00000000000000000000000000000000000000000000000000000000000000006040516101049190610bb3565b6002545b6040516101049190610bc7565b61012061017a366004610bd5565b6102df565b60126040516101049190610c2e565b61012061019c366004610b3f565b610303565b6101b46101af366004610c3c565b610325565b005b61015f6101c4366004610c65565b6001600160a01b031660009081526020819052604090205490565b6100f7610411565b6101b46101f5366004610c3c565b610420565b610120610208366004610b3f565b610454565b61012061021b366004610b3f565b61049a565b61015f61022e366004610c86565b6104a8565b60606003805461024290610ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461026e90610ccf565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b5050505050905090565b6000336102d38185856104d3565b60019150505b92915050565b6000336102ed858285610587565b6102f88585856105d1565b506001949350505050565b6000336102d381858561031683836104a8565b6103209190610d12565b6104d3565b336104037f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b031663052f72d7836040518263ffffffff1660e01b81526004016103769190610d33565b60206040518083038186803b15801561038e57600080fd5b505afa1580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610d54565b7127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206120676c6f62616c206f70657261746f7200846106c1565b61040d338361072d565b5050565b60606004805461024290610ccf565b3361044a7f000000000000000000000000000000000000000000000000000000000000000061034b565b61040d33836107e4565b6000338161046282866104a8565b90508381101561048d5760405162461bcd60e51b815260040161048490610dba565b60405180910390fd5b6102f882868684036104d3565b6000336102d38185856105d1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104f95760405162461bcd60e51b815260040161048490610e0b565b6001600160a01b03821661051f5760405162461bcd60e51b815260040161048490610e5a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061057a908590610bc7565b60405180910390a3505050565b600061059384846104a8565b905060001981146105cb57818110156105be5760405162461bcd60e51b815260040161048490610ea1565b6105cb84848484036104d3565b50505050565b6001600160a01b0383166105f75760405162461bcd60e51b815260040161048490610ef3565b6001600160a01b03821661061d5760405162461bcd60e51b815260040161048490610f43565b6001600160a01b038316600090815260208190526040902054818110156106565760405162461bcd60e51b815260040161048490610f96565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106b4908690610bc7565b60405180910390a36105cb565b836105cb576106cf8361087a565b6101d160f51b6106de8461087a565b61080f60f21b6106ed85610915565b604051610707959493929190601f60f91b90602001610fe8565b60408051601f198184030181529082905262461bcd60e51b825261048491600401610ae3565b6001600160a01b0382166107535760405162461bcd60e51b815260040161048490611084565b6001600160a01b0382166000908152602081905260409020548181101561078c5760405162461bcd60e51b8152600401610484906110d3565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061057a908690610bc7565b6001600160a01b03821661080a5760405162461bcd60e51b815260040161048490611117565b806002600082825461081c9190610d12565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061086e908590610bc7565b60405180910390a35050565b606060008260405160200161088f9190611127565b60408051601f19818403018152919052905060205b80156108fa57806108b48161113c565b9150508181815181106108c9576108c9611153565b01602001516001600160f81b031916156108f55760006108ea826001610d12565b835250909392505050565b6108a4565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061095b5761095b611153565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061098a5761098a611153565b60200101906001600160f81b031916908160001a90535060005b601481101561090d5760006109ba826002611169565b90506109c8600f8516610a5b565b836109d4836029611188565b815181106109e4576109e4611153565b60200101906001600160f81b031916908160001a905350600484901c9350610a0e600f8516610a5b565b83610a1a836028611188565b81518110610a2a57610a2a611153565b60200101906001600160f81b031916908160001a9053505060049290921c9180610a538161119f565b9150506109a4565b6000600a821015610a7a57610a71603083610d12565b60f81b92915050565b610a71605783610d12565b60005b83811015610aa0578181015183820152602001610a88565b838111156105cb5750506000910152565b6000610abb825190565b808452602084019350610ad2818560208601610a85565b601f01601f19169290920192915050565b60208082528101610af48184610ab1565b9392505050565b60006001600160a01b0382166102d9565b610b1581610afb565b8114610b2057600080fd5b50565b80356102d981610b0c565b80610b15565b80356102d981610b2e565b60008060408385031215610b5557610b55600080fd5b6000610b618585610b23565b9250506020610b7285828601610b34565b9150509250929050565b8015155b82525050565b602081016102d98284610b7c565b60006102d982610afb565b60006102d982610b94565b610b8081610b9f565b602081016102d98284610baa565b80610b80565b602081016102d98284610bc1565b600080600060608486031215610bed57610bed600080fd5b6000610bf98686610b23565b9350506020610c0a86828701610b23565b9250506040610c1b86828701610b34565b9150509250925092565b60ff8116610b80565b602081016102d98284610c25565b600060208284031215610c5157610c51600080fd5b6000610c5d8484610b34565b949350505050565b600060208284031215610c7a57610c7a600080fd5b6000610c5d8484610b23565b60008060408385031215610c9c57610c9c600080fd5b6000610ca88585610b23565b9250506020610b7285828601610b23565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610ce357607f821691505b60208210811415610cf657610cf6610cb9565b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2557610d25610cfc565b500190565b610b8081610afb565b602081016102d98284610d2a565b801515610b15565b80516102d981610d41565b600060208284031215610d6957610d69600080fd5b6000610c5d8484610d49565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b602080825281016102d981610d75565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b60208201529150610db3565b602080825281016102d981610dca565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b60208201529150610db3565b602080825281016102d981610e1b565b601d81526000602082017f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000815291505b5060200190565b602080825281016102d981610e6a565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b60208201529150610db3565b602080825281016102d981610eb1565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b60208201529150610db3565b602080825281016102d981610f03565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b60208201529150610db3565b602080825281016102d981610f53565b6000610fb0825190565b610fbe818560208601610a85565b9290920192915050565b6001600160f01b03198116610b80565b6001600160f81b03198116610b80565b6000610ff48289610fa6565b91506110008288610fc8565b6002820191506110108287610fa6565b915061101c8286610fc8565b60028201915061102c8285610fa6565b91506110388284610fd8565b506001019695505050505050565b602181526000602082017f45524332303a206275726e2066726f6d20746865207a65726f206164647265738152607360f81b60208201529150610db3565b602080825281016102d981611046565b602281526000602082017f45524332303a206275726e20616d6f756e7420657863656564732062616c616e815261636560f01b60208201529150610db3565b602080825281016102d981611094565b601f81526000602082017f45524332303a206d696e7420746f20746865207a65726f20616464726573730081529150610e9a565b602080825281016102d9816110e3565b60006111338284610bc1565b50602001919050565b60008161114b5761114b610cfc565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561118357611183610cfc565b500290565b60008282101561119a5761119a610cfc565b500390565b60006000198214156111b3576111b3610cfc565b506001019056fea2646970667358221220616719465133f32e5e2cbc20ce98f11d2ca550a958496deee90619bd4ed3bb5464736f6c63430008090033";

type OARBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OARBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OARB__factory extends ContractFactory {
  constructor(...args: OARBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OARB> {
    return super.deploy(_dolomiteMargin, overrides || {}) as Promise<OARB>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_dolomiteMargin, overrides || {});
  }
  override attach(address: string): OARB {
    return super.attach(address) as OARB;
  }
  override connect(signer: Signer): OARB__factory {
    return super.connect(signer) as OARB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OARBInterface {
    return new utils.Interface(_abi) as OARBInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OARB {
    return new Contract(address, _abi, signerOrProvider) as OARB;
  }
}
