/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUmamiAggregateVault,
  IUmamiAggregateVaultInterface,
} from "../../../contracts/interfaces/IUmamiAggregateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "_newCaps",
        type: "uint256[5]",
      },
    ],
    name: "setVaultCaps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_performanceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_managementFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_withdrawalFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depositFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timelockBoostPercent",
        type: "uint256",
      },
    ],
    name: "setVaultFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUmamiAggregateVault__factory {
  static readonly abi = _abi;
  static createInterface(): IUmamiAggregateVaultInterface {
    return new utils.Interface(_abi) as IUmamiAggregateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUmamiAggregateVault {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IUmamiAggregateVault;
  }
}
