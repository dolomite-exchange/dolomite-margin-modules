/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEventEmitterRegistry,
  IEventEmitterRegistryInterface,
} from "../../../../../@dolomite-exchange/modules-base/contracts/interfaces/IEventEmitterRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncDepositCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncDepositCancelledFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
        ],
        indexed: false,
        internalType:
          "struct IUpgradeableAsyncIsolationModeWrapperTrader.DepositInfo",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "AsyncDepositCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncDepositExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncDepositFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    name: "AsyncDepositOutputAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncWithdrawalCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidation",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType:
          "struct IUpgradeableAsyncIsolationModeUnwrapperTrader.WithdrawalInfo",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "AsyncWithdrawalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AsyncWithdrawalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AsyncWithdrawalFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    name: "AsyncWithdrawalOutputAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "borrowAccountNumber",
        type: "uint256",
      },
    ],
    name: "BorrowPositionOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "marginWithdrawalUpdate",
        type: "tuple",
      },
    ],
    name: "MarginPositionClose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "marginDepositUpdate",
        type: "tuple",
      },
    ],
    name: "MarginPositionOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accountOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accountNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "marketIdsPath",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "tradersPath",
        type: "tuple[]",
      },
    ],
    name: "ZapExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncDepositCancelled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncDepositCancelledFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
        ],
        internalType:
          "struct IUpgradeableAsyncIsolationModeWrapperTrader.DepositInfo",
        name: "_deposit",
        type: "tuple",
      },
    ],
    name: "emitAsyncDepositCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncDepositExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncDepositFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputAmount",
        type: "uint256",
      },
    ],
    name: "emitAsyncDepositOutputAmountUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncWithdrawalCancelled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "accountNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "outputAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRetryable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidation",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType:
          "struct IUpgradeableAsyncIsolationModeUnwrapperTrader.WithdrawalInfo",
        name: "_withdrawal",
        type: "tuple",
      },
    ],
    name: "emitAsyncWithdrawalCreated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emitAsyncWithdrawalExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emitAsyncWithdrawalFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputAmount",
        type: "uint256",
      },
    ],
    name: "emitAsyncWithdrawalOutputAmountUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
    ],
    name: "emitBorrowPositionOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_withdrawalToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_marginWithdrawalUpdate",
        type: "tuple",
      },
    ],
    name: "emitMarginPositionClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_inputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_outputBalanceUpdate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.Wei",
            name: "deltaWei",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct IDolomiteStructs.Par",
            name: "newPar",
            type: "tuple",
          },
        ],
        internalType: "struct IEventEmitterRegistry.BalanceUpdate",
        name: "_marginDepositUpdate",
        type: "tuple",
      },
    ],
    name: "emitMarginPositionOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_accountNumber",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_marketIdsPath",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "enum IGenericTraderBase.TraderType",
            name: "traderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "makerAccountIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "tradeData",
            type: "bytes",
          },
        ],
        internalType: "struct IGenericTraderBase.TraderParam[]",
        name: "_tradersPath",
        type: "tuple[]",
      },
    ],
    name: "emitZapExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEventEmitterRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IEventEmitterRegistryInterface {
    return new utils.Interface(_abi) as IEventEmitterRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEventEmitterRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEventEmitterRegistry;
  }
}
