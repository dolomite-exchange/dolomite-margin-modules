/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IGmxV2Registry,
  IGmxV2RegistryInterface,
} from "../../../../../contracts/external/interfaces/gmx/IGmxV2Registry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "CallbackGasLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxDataStore",
        type: "address",
      },
    ],
    name: "GmxDataStoreSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxDepositVault",
        type: "address",
      },
    ],
    name: "GmxDepositVaultSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxExchangeRouter",
        type: "address",
      },
    ],
    name: "GmxExchangeRouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxReader",
        type: "address",
      },
    ],
    name: "GmxReaderSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxRouter",
        type: "address",
      },
    ],
    name: "GmxRouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxV2UnwrapperTrader",
        type: "address",
      },
    ],
    name: "GmxV2UnwrapperTraderSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxV2WrapperTrader",
        type: "address",
      },
    ],
    name: "GmxV2WrapperTraderSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gmxDepositVault",
        type: "address",
      },
    ],
    name: "GmxWithdrawalVaultSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isTrusted",
        type: "bool",
      },
    ],
    name: "HandlerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_unwrapperTrader",
        type: "address",
      },
    ],
    name: "UnwrapperTraderSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_wrapperTrader",
        type: "address",
      },
    ],
    name: "WrapperTraderSet",
    type: "event",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
    ],
    name: "getUnwrapperByToken",
    outputs: [
      {
        internalType: "contract IUpgradeableAsyncIsolationModeUnwrapperTrader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
    ],
    name: "getWrapperByToken",
    outputs: [
      {
        internalType: "contract IUpgradeableAsyncIsolationModeWrapperTrader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxDataStore",
    outputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxDepositHandler",
    outputs: [
      {
        internalType: "contract IGmxDepositHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxDepositVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxExchangeRouter",
    outputs: [
      {
        internalType: "contract IGmxExchangeRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxReader",
    outputs: [
      {
        internalType: "contract IGmxReader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxRouter",
    outputs: [
      {
        internalType: "contract IGmxRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxWithdrawalHandler",
    outputs: [
      {
        internalType: "contract IGmxWithdrawalHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxWithdrawalVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "isHandler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "ownerSetCallbackGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxDataStore",
        type: "address",
      },
    ],
    name: "ownerSetGmxDataStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxDepositVault",
        type: "address",
      },
    ],
    name: "ownerSetGmxDepositVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxExchangeRouter",
        type: "address",
      },
    ],
    name: "ownerSetGmxExchangeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxReader",
        type: "address",
      },
    ],
    name: "ownerSetGmxReader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxRouter",
        type: "address",
      },
    ],
    name: "ownerSetGmxRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxWithdrawalVault",
        type: "address",
      },
    ],
    name: "ownerSetGmxWithdrawalVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isTrusted",
        type: "bool",
      },
    ],
    name: "ownerSetIsHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
      {
        internalType: "contract IUpgradeableAsyncIsolationModeUnwrapperTrader",
        name: "_unwrapperTrader",
        type: "address",
      },
    ],
    name: "ownerSetUnwrapperByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
      {
        internalType: "contract IUpgradeableAsyncIsolationModeWrapperTrader",
        name: "_wrapperTrader",
        type: "address",
      },
    ],
    name: "ownerSetWrapperByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IGmxV2Registry__factory {
  static readonly abi = _abi;
  static createInterface(): IGmxV2RegistryInterface {
    return new utils.Interface(_abi) as IGmxV2RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGmxV2Registry {
    return new Contract(address, _abi, signerOrProvider) as IGmxV2Registry;
  }
}
