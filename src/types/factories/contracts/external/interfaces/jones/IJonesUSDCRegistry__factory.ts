/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IJonesUSDCRegistry,
  IJonesUSDCRegistryInterface,
} from "../../../../../contracts/external/interfaces/jones/IJonesUSDCRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_glpAdapter",
        type: "address",
      },
    ],
    name: "GlpAdapterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_glpVaultRouter",
        type: "address",
      },
    ],
    name: "GlpVaultRouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_jUSDCFarm",
        type: "address",
      },
    ],
    name: "JUSDCFarmSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_jUSDC",
        type: "address",
      },
    ],
    name: "JUSDCSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_unwrapperTraderForLiquidation",
        type: "address",
      },
    ],
    name: "UnwrapperTraderForLiquidationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_unwrapperTraderForZap",
        type: "address",
      },
    ],
    name: "UnwrapperTraderForZapSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_usdcReceiptToken",
        type: "address",
      },
    ],
    name: "UsdcReceiptTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_whitelistController",
        type: "address",
      },
    ],
    name: "WhitelistControllerSet",
    type: "event",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpAdapter",
    outputs: [
      {
        internalType: "contract IJonesGLPAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpVaultRouter",
    outputs: [
      {
        internalType: "contract IJonesGLPVaultRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unwrapperTraderForLiquidation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_unwrapperTraderForZap",
        type: "address",
      },
    ],
    name: "initializeUnwrapperTraders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "jUSDC",
    outputs: [
      {
        internalType: "contract IERC4626",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jUSDCFarm",
    outputs: [
      {
        internalType: "contract IJonesUSDCFarm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_glpAdapter",
        type: "address",
      },
    ],
    name: "ownerSetGlpAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_glpVaultRouter",
        type: "address",
      },
    ],
    name: "ownerSetGlpVaultRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_jUSDC",
        type: "address",
      },
    ],
    name: "ownerSetJUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_jUSDCFarm",
        type: "address",
      },
    ],
    name: "ownerSetJUSDCFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unwrapperTraderForLiquidation",
        type: "address",
      },
    ],
    name: "ownerSetUnwrapperTraderForLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unwrapperTraderForZap",
        type: "address",
      },
    ],
    name: "ownerSetUnwrapperTraderForZap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcReceiptToken",
        type: "address",
      },
    ],
    name: "ownerSetUsdcReceiptToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_whitelistController",
        type: "address",
      },
    ],
    name: "ownerSetWhitelistController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unwrapperTraderForLiquidation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unwrapperTraderForZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcReceiptToken",
    outputs: [
      {
        internalType: "contract IERC4626",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistController",
    outputs: [
      {
        internalType: "contract IJonesWhitelistController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IJonesUSDCRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IJonesUSDCRegistryInterface {
    return new utils.Interface(_abi) as IJonesUSDCRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJonesUSDCRegistry {
    return new Contract(address, _abi, signerOrProvider) as IJonesUSDCRegistry;
  }
}
