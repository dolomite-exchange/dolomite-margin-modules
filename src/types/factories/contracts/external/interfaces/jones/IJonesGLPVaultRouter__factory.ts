/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IJonesGLPVaultRouter,
  IJonesGLPVaultRouterInterface,
} from "../../../../../contracts/external/interfaces/jones/IJonesGLPVaultRouter";

const _abi = [
  {
    inputs: [],
    name: "emergencyPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_compound",
        type: "bool",
      },
    ],
    name: "stableWithdrawalSignal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleEmergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IJonesGLPVaultRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IJonesGLPVaultRouterInterface {
    return new utils.Interface(_abi) as IJonesGLPVaultRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IJonesGLPVaultRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IJonesGLPVaultRouter;
  }
}
