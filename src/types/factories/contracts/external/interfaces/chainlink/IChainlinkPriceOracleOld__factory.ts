/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IChainlinkPriceOracleOld,
  IChainlinkPriceOracleOldInterface,
} from "../../../../../contracts/external/interfaces/chainlink/IChainlinkPriceOracleOld";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenPair",
        type: "address",
      },
    ],
    name: "TokenInsertedOrUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_chainlinkAggregator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_aggregatorDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_tokenPair",
        type: "address",
      },
    ],
    name: "insertOrUpdateOracleToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stalenessThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address",
      },
    ],
    name: "tokenToAggregatorDecimalsMap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenToAggregatorMap",
    outputs: [
      {
        internalType: "contract IChainlinkAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenToDecimalsMap",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenToPairingMap",
    outputs: [
      {
        internalType: "address",
        name: "_tokenPair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IChainlinkPriceOracleOld__factory {
  static readonly abi = _abi;
  static createInterface(): IChainlinkPriceOracleOldInterface {
    return new utils.Interface(_abi) as IChainlinkPriceOracleOldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IChainlinkPriceOracleOld {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IChainlinkPriceOracleOld;
  }
}
