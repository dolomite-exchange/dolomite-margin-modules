/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IHandlerRegistry,
  IHandlerRegistryInterface,
} from "../../../../contracts/external/interfaces/IHandlerRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "CallbackGasLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isTrusted",
        type: "bool",
      },
    ],
    name: "HandlerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_unwrapperTrader",
        type: "address",
      },
    ],
    name: "UnwrapperTraderSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_wrapperTrader",
        type: "address",
      },
    ],
    name: "WrapperTraderSet",
    type: "event",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
    ],
    name: "getUnwrapperByToken",
    outputs: [
      {
        internalType: "contract IUpgradeableAsyncIsolationModeUnwrapperTrader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
    ],
    name: "getWrapperByToken",
    outputs: [
      {
        internalType: "contract IUpgradeableAsyncIsolationModeWrapperTrader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "isHandler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "ownerSetCallbackGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isTrusted",
        type: "bool",
      },
    ],
    name: "ownerSetIsHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
      {
        internalType: "contract IUpgradeableAsyncIsolationModeUnwrapperTrader",
        name: "_unwrapperTrader",
        type: "address",
      },
    ],
    name: "ownerSetUnwrapperByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "_factoryToken",
        type: "address",
      },
      {
        internalType: "contract IUpgradeableAsyncIsolationModeWrapperTrader",
        name: "_wrapperTrader",
        type: "address",
      },
    ],
    name: "ownerSetWrapperByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHandlerRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IHandlerRegistryInterface {
    return new utils.Interface(_abi) as IHandlerRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHandlerRegistry {
    return new Contract(address, _abi, signerOrProvider) as IHandlerRegistry;
  }
}
