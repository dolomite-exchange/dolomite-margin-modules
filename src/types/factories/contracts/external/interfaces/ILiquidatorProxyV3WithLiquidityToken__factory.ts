/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILiquidatorProxyV3WithLiquidityToken,
  ILiquidatorProxyV3WithLiquidityTokenInterface,
} from "../../../../contracts/external/interfaces/ILiquidatorProxyV3WithLiquidityToken";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo",
        name: "_solidAccount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.AccountInfo",
        name: "_liquidAccount",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_owedMarket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_heldMarket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_paraswapCallData",
        type: "bytes",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenUnwrapper",
        type: "address",
      },
    ],
    name: "setMarketIdToTokenUnwrapperForLiquidationMap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILiquidatorProxyV3WithLiquidityToken__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidatorProxyV3WithLiquidityTokenInterface {
    return new utils.Interface(
      _abi
    ) as ILiquidatorProxyV3WithLiquidityTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidatorProxyV3WithLiquidityToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILiquidatorProxyV3WithLiquidityToken;
  }
}
