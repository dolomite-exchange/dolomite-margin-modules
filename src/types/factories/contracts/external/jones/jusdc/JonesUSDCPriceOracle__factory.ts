/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JonesUSDCPriceOracle,
  JonesUSDCPriceOracleInterface,
} from "../../../../../contracts/external/jones/jusdc/JonesUSDCPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_jonesUSDCRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_usdcMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "djUSDC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DJUSDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JONES_USDC_REGISTRY",
    outputs: [
      {
        internalType: "contract IJonesUSDCRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_MARKET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001351380380620013518339810160408190526200003591620000a4565b6001600160a01b0393841660805291831660a05260c0521660e05262000112565b60006001600160a01b0382165b92915050565b620000748162000056565b81146200008057600080fd5b50565b8051620000638162000069565b8062000074565b8051620000638162000090565b60008060008060808587031215620000bf57620000bf600080fd5b6000620000cd878762000083565b9450506020620000e08782880162000083565b9350506040620000f38782880162000097565b9250506060620001068782880162000083565b91505092959194509250565b60805160a05160c05160e0516111d76200017a60003960008181610119015261015c01526000818160e5015261042d015260008181609e015281816104b60152818161065b01526106f40152600081816061015281816101d9015261040001526111d76000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806315c14a4a1461005c5780633b3b377a1461009957806341976e09146100c0578063b5bc1017146100e0578063e7fd931014610114575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516100909190610b83565b60405180910390f35b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6100d36100ce366004610bc4565b610148565b6040516100909190610c04565b6101077f000000000000000000000000000000000000000000000000000000000000000081565b6040516100909190610c12565b61013b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100909190610c29565b6040805160208101909152600081526101be7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614734a6f6e65735553444350726963654f7261636c6560601b6c24b73b30b634b2103a37b5b2b760991b8561032b565b604051638fae3be160e01b8152610310906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ac7d17c908290638fae3be190610216908890600401610c29565b60206040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610c48565b6040518263ffffffff1660e01b81526004016102829190610c12565b60206040518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610c7c565b734a6f6e65735553444350726963654f7261636c6560601b7f6a555344432063616e6e6f7420626520626f72726f7761626c650000000000006103a6565b60405180602001604052806103236103da565b905292915050565b836103a05761033983610749565b6101d160f51b61034884610749565b61080f60f21b610357856107e4565b604051610371959493929190601f60f91b90602001610d0b565b60408051601f198184030181529082905262461bcd60e51b825261039791600401610d9b565b60405180910390fd5b50505050565b826103d5576103b482610749565b6101d160f51b6103c383610749565b60405160200161037193929190610db3565b505050565b6000806103e9600c600a610f08565b6040516344941bc760e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638928378e90610455907f000000000000000000000000000000000000000000000000000000000000000090600401610c12565b60206040518083038186803b15801561046d57600080fd5b505afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190610fac565b516104b09190610fe3565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166369d713ca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050d57600080fd5b505afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190611016565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058257600080fd5b505afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190610c48565b90506000811561064f5781836001600160a01b03166301e1d1146040518163ffffffff1660e01b815260040160206040518083038186803b1580156105fe57600080fd5b505afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610c48565b6106409086611037565b61064a9190610fe3565b610651565b835b905060008061071a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630a9a07f86040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190611061565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169061092a565b90925090508061072a8385611037565b6107349190610fe3565b61073e9084611082565b965050505050505090565b606060008260405160200161075e9190611099565b60408051601f19818403018152919052905060205b80156107c95780610783816110ae565b915050818181518110610798576107986110c5565b01602001516001600160f81b031916156107c45760006107b98260016110db565b835250909392505050565b610773565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061082a5761082a6110c5565b60200101906001600160f81b031916908160001a905350607860f81b81600181518110610859576108596110c5565b60200101906001600160f81b031916908160001a90535060005b60148110156107dc576000610889826002611037565b9050610897600f8516610b21565b836108a3836029611082565b815181106108b3576108b36110c5565b60200101906001600160f81b031916908160001a905350600484901c93506108dd600f8516610b21565b836108e9836028611082565b815181106108f9576108f96110c5565b60200101906001600160f81b031916908160001a9053505060049290921c9180610922816110f3565b915050610873565b6000806000846001600160a01b0316636124a5776040518163ffffffff1660e01b815260040160206040518083038186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611016565b90506000816001600160a01b03166327820851866040518263ffffffff1660e01b81526004016109d09190610c29565b60206040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190610c48565b60405163be409a1160e01b81529091506001600160a01b0383169063be409a1190610a4f908490600401610c12565b60806040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190611180565b606001519350816001600160a01b031663e1f1c4a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610ade57600080fd5b505afa158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190610c48565b925050509250929050565b6000600a821015610b4057610b376030836110db565b60f81b92915050565b610b376057836110db565b60006001600160a01b0382165b92915050565b6000610b5882610b4b565b6000610b5882610b5e565b610b7d81610b69565b82525050565b60208101610b588284610b74565b60006001600160a01b038216610b58565b610bab81610b91565b8114610bb657600080fd5b50565b8035610b5881610ba2565b600060208284031215610bd957610bd9600080fd5b6000610be58484610bb9565b949350505050565b80610b7d565b805160208301906103a08482610bed565b60208101610b588284610bf3565b60208101610b588284610bed565b610b7d81610b91565b60208101610b588284610c20565b80610bab565b8051610b5881610c37565b600060208284031215610c5d57610c5d600080fd5b6000610be58484610c3d565b801515610bab565b8051610b5881610c69565b600060208284031215610c9157610c91600080fd5b6000610be58484610c71565b60005b83811015610cb8578181015183820152602001610ca0565b838111156103a05750506000910152565b6000610cd3825190565b610ce1818560208601610c9d565b9290920192915050565b6001600160f01b03198116610b7d565b6001600160f81b03198116610b7d565b6000610d178289610cc9565b9150610d238288610ceb565b600282019150610d338287610cc9565b9150610d3f8286610ceb565b600282019150610d4f8285610cc9565b9150610d5b8284610cfb565b506001019695505050505050565b6000610d73825190565b808452602084019350610d8a818560208601610c9d565b601f01601f19169290920192915050565b60208082528101610dac8184610d69565b9392505050565b6000610dbf8286610cc9565b9150610dcb8285610ceb565b600282019150610ddb8284610cc9565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b80825b6001851115610e3957808604811115610e1857610e18610de4565b6001851615610e2657908102905b8002610e328560011c90565b9450610dfd565b94509492505050565b600082610e5157506001610dac565b81610e5e57506000610dac565b8160018114610e745760028114610e7e57610eab565b6001915050610dac565b60ff841115610e8f57610e8f610de4565b8360020a915084821115610ea557610ea5610de4565b50610dac565b5060208310610133831016604e8410600b8410161715610ede575081810a83811115610ed957610ed9610de4565b610dac565b610eeb8484846001610dfa565b92509050818404811115610f0157610f01610de4565b0292915050565b6000610dac6000198484610e42565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610f5357610f53610f17565b6040525050565b6000610f6560405190565b9050610f718282610f2d565b919050565b600060208284031215610f8b57610f8b600080fd5b610f956020610f5a565b90506000610fa38484610c3d565b82525092915050565b600060208284031215610fc157610fc1600080fd5b6000610be58484610f76565b634e487b7160e01b600052601260045260246000fd5b600082610ff257610ff2610fcd565b500490565b6000610b5882610b91565b610bab81610ff7565b8051610b5881611002565b60006020828403121561102b5761102b600080fd5b6000610be5848461100b565b600081600019048311821515161561105157611051610de4565b500290565b8051610b5881610ba2565b60006020828403121561107657611076600080fd5b6000610be58484611056565b60008282101561109457611094610de4565b500390565b60006110a58284610bed565b50602001919050565b6000816110bd576110bd610de4565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600082198211156110ee576110ee610de4565b500190565b600060001982141561110757611107610de4565b5060010190565b60006080828403121561112357611123600080fd5b61112d6080610f5a565b9050600061113b8484610c71565b825250602061114c84848301610c71565b602083015250604061116084828501610c3d565b604083015250606061117484828501610c3d565b60608301525092915050565b60006080828403121561119557611195600080fd5b6000610be5848461110e56fea264697066735822122052d13c21f758ebb83f88a2d088577ad93f1a6ebc0f515e95a4a2fc461fb95d8864736f6c63430008090033";

type JonesUSDCPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JonesUSDCPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JonesUSDCPriceOracle__factory extends ContractFactory {
  constructor(...args: JonesUSDCPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    _jonesUSDCRegistry: string,
    _usdcMarketId: BigNumberish,
    djUSDC: string,
    overrides?: Overrides & { from?: string }
  ): Promise<JonesUSDCPriceOracle> {
    return super.deploy(
      _dolomiteMargin,
      _jonesUSDCRegistry,
      _usdcMarketId,
      djUSDC,
      overrides || {}
    ) as Promise<JonesUSDCPriceOracle>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    _jonesUSDCRegistry: string,
    _usdcMarketId: BigNumberish,
    djUSDC: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dolomiteMargin,
      _jonesUSDCRegistry,
      _usdcMarketId,
      djUSDC,
      overrides || {}
    );
  }
  override attach(address: string): JonesUSDCPriceOracle {
    return super.attach(address) as JonesUSDCPriceOracle;
  }
  override connect(signer: Signer): JonesUSDCPriceOracle__factory {
    return super.connect(signer) as JonesUSDCPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JonesUSDCPriceOracleInterface {
    return new utils.Interface(_abi) as JonesUSDCPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JonesUSDCPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JonesUSDCPriceOracle;
  }
}
