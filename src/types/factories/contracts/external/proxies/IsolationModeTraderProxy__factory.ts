/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IsolationModeTraderProxy,
  IsolationModeTraderProxyInterface,
} from "../../../../contracts/external/proxies/IsolationModeTraderProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_initializationCalldata",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ImplementationSet",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_upgradeCalldata",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200134138038062001341833981016040819052620000349162000556565b6200003f836200008e565b6200004a8262000157565b62000084620000586200018b565b826040518060600160405280602f8152602001620012f2602f9139620001b660201b620002ed1760201c565b505050506200076a565b620000fb620000a8826200023560201b620003651760201c565b7f49736f6c6174696f6e4d6f646554726164657250726f787900000000000000007f496d706c656d656e746174696f6e206973206e6f74206120636f6e74726163746200024460201b620003741760201c565b620001206200011b600160008051602062001321833981519152620005e0565b829055565b6040516001600160a01b038216907fab64f92ab780ecbf4f3866f57cee465ff36c89450dcce20237ca7a8d81fb7d1390600090a250565b620001886200011b60017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa17620005e0565b50565b6000620001b1620001ad600160008051602062001321833981519152620005e0565b5490565b905090565b6060600080856001600160a01b031685604051620001d591906200061f565b600060405180830381855af49150503d806000811462000212576040519150601f19603f3d011682016040523d82523d6000602084013e62000217565b606091505b5090925090506200022b86838387620002b0565b9695505050505050565b6001600160a01b03163b151590565b82620002ab57620002558262000306565b6101d160f51b620002668362000306565b6040516020016200027a9392919062000646565b60408051601f198184030181529082905262461bcd60e51b8252620002a291600401620006b2565b60405180910390fd5b505050565b60608315620002f2578251620002ea576001600160a01b0385163b620002ea5760405162461bcd60e51b8152600401620002a290620006c5565b5081620002fe565b620002fe8383620003c5565b949350505050565b60606000826040516020016200031d919062000708565b60408051601f19818403018152919052905060205b8015620003aa578062000345816200071f565b9150508181815181106200035d576200035d62000739565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615620003a4576000620003998260016200074f565b835250909392505050565b62000332565b5060408051600080825260208201909252905b509392505050565b815115620003d65781518083602001fd5b8060405162461bcd60e51b8152600401620002a29190620006b2565b60006001600160a01b0382165b92915050565b6200041081620003f2565b81146200018857600080fd5b8051620003ff8162000405565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171562000467576200046762000429565b6040525050565b60006200047a60405190565b90506200048882826200043f565b919050565b60006001600160401b03821115620004a957620004a962000429565b601f19601f83011660200192915050565b60005b83811015620004d7578181015183820152602001620004bd565b83811115620004e7576000848401525b50505050565b600062000504620004fe846200048d565b6200046e565b905082815260208101848484011115620005215762000521600080fd5b620003bd848285620004ba565b600082601f830112620005445762000544600080fd5b8151620002fe848260208601620004ed565b600080600060608486031215620005705762000570600080fd5b60006200057e86866200041c565b935050602062000591868287016200041c565b92505060408401516001600160401b03811115620005b257620005b2600080fd5b620005c0868287016200052e565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015620005f557620005f5620005ca565b500390565b600062000605825190565b62000615818560208601620004ba565b9290920192915050565b60006200062d8284620005fa565b9392505050565b6001600160f01b031981165b82525050565b6000620006548286620005fa565b915062000662828562000634565b600282019150620006748284620005fa565b95945050505050565b600062000688825190565b808452602084019350620006a1818560208601620004ba565b601f01601f19169290920192915050565b602080825281016200062d81846200067d565b60208082528101620003ff81601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000602082015260400190565b8062000640565b600062000716828462000701565b50602001919050565b600081620007315762000731620005ca565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115620007655762000765620005ca565b500190565b610b78806200077a6000396000f3fe6080604052600436106100435760003560e01c806315c14a4a1461005c5780633659cfe6146100875780634f1ef286146100a75780635c60da1b146100c75761004a565b3661004a57005b61005a6100556100e9565b610122565b005b34801561006857600080fd5b5061007161014b565b60405161007e919061079a565b60405180910390f35b34801561009357600080fd5b5061005a6100a23660046107db565b61017b565b3480156100b357600080fd5b5061005a6100c236600461084e565b610255565b3480156100d357600080fd5b506100dc6100e9565b60405161007e91906108b3565b600061011d61011960017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b6108d7565b5490565b905090565b3660008037600080366000845af43d6000803e808015610141573d6000f35b3d6000fd5b505050565b600061011d61011960017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa176108d7565b3361024861018761014b565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101bf57600080fd5b505afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f791906108f9565b6001600160a01b0316826001600160a01b0316147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d69746500846103d2565b6102518261041e565b5050565b3361026161018761014b565b61026a8461041e565b6102e66102756100e9565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051808201909152601d81527f526567697374727950726f78793a2055706772616465206661696c6564000000602082015291506102ed9050565b5050505050565b6060600080856001600160a01b03168560405161030a9190610968565b600060405180830381855af49150503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b509150915061035b868383876104df565b9695505050505050565b6001600160a01b03163b151590565b82610146576103828261052d565b6101d160f51b6103918361052d565b6040516020016103a39392919061098b565b60408051601f198184030181529082905262461bcd60e51b82526103c9916004016109ee565b60405180910390fd5b83610418576103e08361052d565b6101d160f51b6103ef8461052d565b61080f60f21b6103fe856105c8565b6040516103a3959493929190601f60f91b90602001610a0f565b50505050565b6104756001600160a01b0382163b15157f49736f6c6174696f6e4d6f646554726164657250726f787900000000000000007f496d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374610374565b6104a86104a360017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b6108d7565b829055565b6040516001600160a01b038216907fab64f92ab780ecbf4f3866f57cee465ff36c89450dcce20237ca7a8d81fb7d1390600090a250565b6060831561051b578251610514576001600160a01b0385163b6105145760405162461bcd60e51b81526004016103c990610a6d565b5081610525565b610525838361070e565b949350505050565b60606000826040516020016105429190610aae565b60408051601f19818403018152919052905060205b80156105ad578061056781610ac3565b91505081818151811061057c5761057c610ada565b01602001516001600160f81b031916156105a857600061059d826001610af0565b835250909392505050565b610557565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061060e5761060e610ada565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061063d5761063d610ada565b60200101906001600160f81b031916908160001a90535060005b60148110156105c057600061066d826002610b08565b905061067b600f8516610738565b836106878360296108d7565b8151811061069757610697610ada565b60200101906001600160f81b031916908160001a905350600484901c93506106c1600f8516610738565b836106cd8360286108d7565b815181106106dd576106dd610ada565b60200101906001600160f81b031916908160001a9053505060049290921c918061070681610b27565b915050610657565b81511561071e5781518083602001fd5b8060405162461bcd60e51b81526004016103c991906109ee565b6000600a8210156107575761074e603083610af0565b60f81b92915050565b61074e605783610af0565b60006001600160a01b0382165b92915050565b600061076f82610762565b600061076f82610775565b61079481610780565b82525050565b6020810161076f828461078b565b60006001600160a01b03821661076f565b6107c2816107a8565b81146107cd57600080fd5b50565b803561076f816107b9565b6000602082840312156107f0576107f0600080fd5b600061052584846107d0565b60008083601f84011261081157610811600080fd5b50813567ffffffffffffffff81111561082c5761082c600080fd5b60208301915083600182028301111561084757610847600080fd5b9250929050565b60008060006040848603121561086657610866600080fd5b600061087286866107d0565b935050602084013567ffffffffffffffff81111561089257610892600080fd5b61089e868287016107fc565b92509250509250925092565b610794816107a8565b6020810161076f82846108aa565b634e487b7160e01b600052601160045260246000fd5b6000828210156108e9576108e96108c1565b500390565b805161076f816107b9565b60006020828403121561090e5761090e600080fd5b600061052584846108ee565b60005b8381101561093557818101518382015260200161091d565b838111156104185750506000910152565b6000610950825190565b61095e81856020860161091a565b9290920192915050565b60006109748284610946565b9392505050565b6001600160f01b03198116610794565b60006109978286610946565b91506109a3828561097b565b6002820191506109b38284610946565b95945050505050565b60006109c6825190565b8084526020840193506109dd81856020860161091a565b601f01601f19169290920192915050565b6020808252810161097481846109bc565b6001600160f81b03198116610794565b6000610a1b8289610946565b9150610a27828861097b565b600282019150610a378287610946565b9150610a43828661097b565b600282019150610a538285610946565b9150610a5f82846109ff565b506001019695505050505050565b6020808252810161076f81601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000602082015260400190565b80610794565b6000610aba8284610aa8565b50602001919050565b600081610ad257610ad26108c1565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610b0357610b036108c1565b500190565b6000816000190483118215151615610b2257610b226108c1565b500290565b6000600019821415610b3b57610b3b6108c1565b506001019056fea2646970667358221220cbaee077f3d13e1abb5070e3b53b3116f4a3c1b7a36fcc592e02cbd52d97c29464736f6c6343000809003349736f6c6174696f6e4d6f646554726164657250726f78793a20496e697469616c697a6174696f6e206661696c6564a7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b";

type IsolationModeTraderProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsolationModeTraderProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsolationModeTraderProxy__factory extends ContractFactory {
  constructor(...args: IsolationModeTraderProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementation: string,
    _dolomiteMargin: string,
    _initializationCalldata: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<IsolationModeTraderProxy> {
    return super.deploy(
      _implementation,
      _dolomiteMargin,
      _initializationCalldata,
      overrides || {}
    ) as Promise<IsolationModeTraderProxy>;
  }
  override getDeployTransaction(
    _implementation: string,
    _dolomiteMargin: string,
    _initializationCalldata: BytesLike,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _implementation,
      _dolomiteMargin,
      _initializationCalldata,
      overrides || {}
    );
  }
  override attach(address: string): IsolationModeTraderProxy {
    return super.attach(address) as IsolationModeTraderProxy;
  }
  override connect(signer: Signer): IsolationModeTraderProxy__factory {
    return super.connect(signer) as IsolationModeTraderProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsolationModeTraderProxyInterface {
    return new utils.Interface(_abi) as IsolationModeTraderProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IsolationModeTraderProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IsolationModeTraderProxy;
  }
}
