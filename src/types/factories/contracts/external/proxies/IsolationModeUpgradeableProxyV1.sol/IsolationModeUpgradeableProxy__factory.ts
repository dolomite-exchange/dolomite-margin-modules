/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IsolationModeUpgradeableProxy,
  IsolationModeUpgradeableProxyInterface,
} from "../../../../../contracts/external/proxies/IsolationModeUpgradeableProxyV1.sol/IsolationModeUpgradeableProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061004461003f60017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef361005f565b339055565b610076565b634e487b7160e01b600052601160045260246000fd5b60008282101561007157610071610049565b500390565b6109b7806100856000396000f3fe60806040526004361061004e5760003560e01c8063392e53cd146100ab5780635c60da1b146100d65780638da5cb5b146100f8578063c4d66de81461010d578063d8a06f731461012d57610055565b3661005557005b610099610060610142565b7f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000006e139bdd081a5b9a5d1a585b1a5e9959608a1b61017e565b6100a96100a46101e1565b610260565b005b3480156100b757600080fd5b506100c0610142565b6040516100cd91906106c3565b60405180910390f35b3480156100e257600080fd5b506100eb6101e1565b6040516100cd91906106f1565b34801561010457600080fd5b506100eb610284565b34801561011957600080fd5b506100a961012836600461071e565b6102b4565b34801561013957600080fd5b506100eb610432565b600061017661017260017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f205061075d565b5490565b600114905090565b826101dc5761018c82610462565b6101d160f51b61019b83610462565b6040516020016101ad939291906107d2565b60408051601f198184030181529082905262461bcd60e51b82526101d391600401610835565b60405180910390fd5b505050565b60006101eb610432565b6001600160a01b031663a6e7d83f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610858565b905090565b3660008037600080366000845af43d6000803e80801561027f573d6000f35b3d6000fd5b600061025b61017260017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b61075d565b6102fd6102bf610142565b157f49736f6c6174696f6e4d6f64655570677261646561626c6550726f787900000072105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b61017e565b6103c830610309610432565b6001600160a01b031663b01f61e1846040518263ffffffff1660e01b815260040161033491906106f1565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610858565b6001600160a01b0316147f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000006e125b9d985b1a59081858d8dbdd5b9d608a1b846104fd565b6103fc6103f660017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f205061075d565b60019055565b61042f61042a60017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b61075d565b829055565b50565b600061025b61017260017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef361075d565b6060600082604051602001610477919061087f565b60408051601f19818403018152919052905060205b80156104e2578061049c81610894565b9150508181815181106104b1576104b16108ab565b01602001516001600160f81b031916156104dd5760006104d28260016108c1565b835250909392505050565b61048c565b5060408051600080825260208201909252905b509392505050565b836105435761050b83610462565b6101d160f51b61051a84610462565b61080f60f21b61052985610549565b6040516101ad959493929190601f60f91b906020016108e9565b50505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061058f5761058f6108ab565b60200101906001600160f81b031916908160001a905350607860f81b816001815181106105be576105be6108ab565b60200101906001600160f81b031916908160001a90535060005b60148110156104f55760006105ee826002610947565b90506105fc600f851661068f565b8361060883602961075d565b81518110610618576106186108ab565b60200101906001600160f81b031916908160001a905350600484901c9350610642600f851661068f565b8361064e83602861075d565b8151811061065e5761065e6108ab565b60200101906001600160f81b031916908160001a9053505060049290921c918061068781610966565b9150506105d8565b6000600a8210156106ae576106a56030836108c1565b60f81b92915050565b6106a56057836108c1565b8015155b82525050565b602081016106d182846106b9565b92915050565b60006001600160a01b0382166106d1565b6106bd816106d7565b602081016106d182846106e8565b610708816106d7565b811461042f57600080fd5b80356106d1816106ff565b60006020828403121561073357610733600080fd5b600061073f8484610713565b949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561076f5761076f610747565b500390565b60005b8381101561078f578181015183820152602001610777565b838111156105435750506000910152565b60006107aa825190565b6107b8818560208601610774565b9290920192915050565b6001600160f01b031981166106bd565b60006107de82866107a0565b91506107ea82856107c2565b6002820191506107fa82846107a0565b95945050505050565b600061080d825190565b808452602084019350610824818560208601610774565b601f01601f19169290920192915050565b602080825281016108468184610803565b9392505050565b80516106d1816106ff565b60006020828403121561086d5761086d600080fd5b600061073f848461084d565b806106bd565b600061088b8284610879565b50602001919050565b6000816108a3576108a3610747565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600082198211156108d4576108d4610747565b500190565b6001600160f81b031981166106bd565b60006108f582896107a0565b915061090182886107c2565b60028201915061091182876107a0565b915061091d82866107c2565b60028201915061092d82856107a0565b915061093982846108d9565b506001019695505050505050565b600081600019048311821515161561096157610961610747565b500290565b600060001982141561097a5761097a610747565b506001019056fea2646970667358221220090fb165faffa38705a74d90c5a481a9d2cfbbf54857fbafc363f3213ce88e1f64736f6c63430008090033";

type IsolationModeUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsolationModeUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsolationModeUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: IsolationModeUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<IsolationModeUpgradeableProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<IsolationModeUpgradeableProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IsolationModeUpgradeableProxy {
    return super.attach(address) as IsolationModeUpgradeableProxy;
  }
  override connect(signer: Signer): IsolationModeUpgradeableProxy__factory {
    return super.connect(signer) as IsolationModeUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsolationModeUpgradeableProxyInterface {
    return new utils.Interface(_abi) as IsolationModeUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IsolationModeUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IsolationModeUpgradeableProxy;
  }
}
