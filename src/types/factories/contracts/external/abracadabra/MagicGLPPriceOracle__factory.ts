/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MagicGLPPriceOracle,
  MagicGLPPriceOracleInterface,
} from "../../../../contracts/external/abracadabra/MagicGLPPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_magicGlp",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dfsGlpMarketId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DFS_GLP_MARKET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_GLP",
    outputs: [
      {
        internalType: "contract IERC4626",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405162000d5f38038062000d5f83398101604081905261003191610092565b6001600160a01b03928316608052911660a05260c0526100e2565b60006001600160a01b0382165b92915050565b6100688161004c565b811461007357600080fd5b50565b80516100598161005f565b80610068565b805161005981610081565b6000806000606084860312156100aa576100aa600080fd5b60006100b68686610076565b93505060206100c786828701610076565b92505060406100d886828701610087565b9150509250925092565b60805160a05160c051610c26620001396000396000818160b301526103cd01526000818160e70152818161011d015281816104620152610501015260008181605601528181610199015261039e0152610c266000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315c14a4a1461005157806341976e091461008e57806348218835146100ae57806399ff3a6b146100e2575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405161008591906107ee565b60405180910390f35b6100a161009c36600461082f565b610109565b604051610085919061086f565b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b604051610085919061087d565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60408051602081019091526000815261017e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614724d61676963474c5050726963654f7261636c6560681b6c34b73b30b634b2103a37b5b2b760991b856102ea565b604051638fae3be160e01b81526102cf906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ac7d17c908290638fae3be1906101d6908890600401610894565b60206040518083038186803b1580156101ee57600080fd5b505afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022691906108b3565b6040518263ffffffff1660e01b8152600401610242919061087d565b60206040518083038186803b15801561025a57600080fd5b505afa15801561026e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029291906108e7565b724d61676963474c5050726963654f7261636c6560681b7f6d61676963474c502063616e6e6f7420626520626f72726f7761626c65000000610365565b60405180602001604052806102e2610399565b905292915050565b8361035f576102f8836105ab565b6101d160f51b610307846105ab565b61080f60f21b61031685610646565b604051610330959493929190601f60f91b90602001610976565b60408051601f198184030181529082905262461bcd60e51b825261035691600401610a06565b60405180910390fd5b50505050565b8261039457610373826105ab565b6101d160f51b610382836105ab565b60405160200161033093929190610a1e565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638928378e7f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610408919061087d565b60206040518083038186803b15801561042057600080fd5b505afa158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610ae4565b60000151905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f191906108b3565b9050806104fe5750919050565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166301e1d1146040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b505afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059091906108b3565b61059a9084610b1b565b6105a49190610b50565b9250505090565b60606000826040516020016105c09190610b64565b60408051601f19818403018152919052905060205b801561062b57806105e581610b79565b9150508181815181106105fa576105fa610b90565b01602001516001600160f81b0319161561062657600061061b826001610ba6565b835250909392505050565b6105d5565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061068c5761068c610b90565b60200101906001600160f81b031916908160001a905350607860f81b816001815181106106bb576106bb610b90565b60200101906001600160f81b031916908160001a90535060005b601481101561063e5760006106eb826002610b1b565b90506106f9600f851661078c565b83610705836029610bbe565b8151811061071557610715610b90565b60200101906001600160f81b031916908160001a905350600484901c935061073f600f851661078c565b8361074b836028610bbe565b8151811061075b5761075b610b90565b60200101906001600160f81b031916908160001a9053505060049290921c918061078481610bd5565b9150506106d5565b6000600a8210156107ab576107a2603083610ba6565b60f81b92915050565b6107a2605783610ba6565b60006001600160a01b0382165b92915050565b60006107c3826107b6565b60006107c3826107c9565b6107e8816107d4565b82525050565b602081016107c382846107df565b60006001600160a01b0382166107c3565b610816816107fc565b811461082157600080fd5b50565b80356107c38161080d565b60006020828403121561084457610844600080fd5b60006108508484610824565b949350505050565b806107e8565b8051602083019061035f8482610858565b602081016107c3828461085e565b602081016107c38284610858565b6107e8816107fc565b602081016107c3828461088b565b80610816565b80516107c3816108a2565b6000602082840312156108c8576108c8600080fd5b600061085084846108a8565b801515610816565b80516107c3816108d4565b6000602082840312156108fc576108fc600080fd5b600061085084846108dc565b60005b8381101561092357818101518382015260200161090b565b8381111561035f5750506000910152565b600061093e825190565b61094c818560208601610908565b9290920192915050565b6001600160f01b031981166107e8565b6001600160f81b031981166107e8565b60006109828289610934565b915061098e8288610956565b60028201915061099e8287610934565b91506109aa8286610956565b6002820191506109ba8285610934565b91506109c68284610966565b506001019695505050505050565b60006109de825190565b8084526020840193506109f5818560208601610908565b601f01601f19169290920192915050565b60208082528101610a1781846109d4565b9392505050565b6000610a2a8286610934565b9150610a368285610956565b600282019150610a468284610934565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610a8b57610a8b610a4f565b6040525050565b6000610a9d60405190565b9050610aa98282610a65565b919050565b600060208284031215610ac357610ac3600080fd5b610acd6020610a92565b90506000610adb84846108a8565b82525092915050565b600060208284031215610af957610af9600080fd5b60006108508484610aae565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b3557610b35610b05565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610b5f57610b5f610b3a565b500490565b6000610b708284610858565b50602001919050565b600081610b8857610b88610b05565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610bb957610bb9610b05565b500190565b600082821015610bd057610bd0610b05565b500390565b6000600019821415610be957610be9610b05565b506001019056fea2646970667358221220a957210b0b7ebee5e0bd6e120b07e5554157903805af1a94cc584b6bf80e5d3964736f6c63430008090033";

type MagicGLPPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagicGLPPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagicGLPPriceOracle__factory extends ContractFactory {
  constructor(...args: MagicGLPPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    _magicGlp: string,
    _dfsGlpMarketId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<MagicGLPPriceOracle> {
    return super.deploy(
      _dolomiteMargin,
      _magicGlp,
      _dfsGlpMarketId,
      overrides || {}
    ) as Promise<MagicGLPPriceOracle>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    _magicGlp: string,
    _dfsGlpMarketId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dolomiteMargin,
      _magicGlp,
      _dfsGlpMarketId,
      overrides || {}
    );
  }
  override attach(address: string): MagicGLPPriceOracle {
    return super.attach(address) as MagicGLPPriceOracle;
  }
  override connect(signer: Signer): MagicGLPPriceOracle__factory {
    return super.connect(signer) as MagicGLPPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagicGLPPriceOracleInterface {
    return new utils.Interface(_abi) as MagicGLPPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagicGLPPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MagicGLPPriceOracle;
  }
}
