/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UmamiAssetVaultPriceOracle,
  UmamiAssetVaultPriceOracleInterface,
} from "../../../../contracts/external/umami/UmamiAssetVaultPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_umamiAssetVaultRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_isolationModeVaultToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ISOLATION_MODE_TOKEN",
    outputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UMAMI_ASSET_VAULT_REGISTRY",
    outputs: [
      {
        internalType: "contract IUmamiAssetVaultRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_MARKET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200124b3803806200124b8339810160408190526200003591620001f8565b6001600160a01b03808416608081905283821660a05290821660c0819052604080516314ed8df360e11b81529051638fae3be192916329db1be6916004808301926020929190829003018186803b1580156200009057600080fd5b505afa158015620000a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cb919062000250565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010457600080fd5b505afa15801562000119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013f919062000250565b6040518263ffffffff1660e01b81526004016200015d91906200028e565b60206040518083038186803b1580156200017657600080fd5b505afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b19190620002b2565b60e05250620002d7915050565b60006001600160a01b0382165b92915050565b620001dc81620001be565b8114620001e857600080fd5b50565b8051620001cb81620001d1565b600080600060608486031215620002125762000212600080fd5b6000620002208686620001eb565b93505060206200023386828701620001eb565b92505060406200024686828701620001eb565b9150509250925092565b600060208284031215620002675762000267600080fd5b6000620002758484620001eb565b949350505050565b6200028881620001be565b82525050565b60208101620001cb82846200027d565b80620001dc565b8051620001cb816200029e565b600060208284031215620002c957620002c9600080fd5b6000620002758484620002a5565b60805160a05160c05160e051610f136200033860003960008181606c01526104c301526000818160dd0152818161016a01526103ff015260008181610124015261066401526000818160a9015281816101f001526104940152610f136000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630ca5bee21461006757806315c14a4a146100a45780631befc0d8146100d857806341976e09146100ff57806368f059831461011f578063e63a391f14610146575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b60405161009b91906109ae565b60405180910390f35b6100cb7f000000000000000000000000000000000000000000000000000000000000000081565b60405161009b91906109f2565b6100cb7f000000000000000000000000000000000000000000000000000000000000000081565b61011261010d366004610a22565b610156565b60405161009b9190610a5c565b6100cb7f000000000000000000000000000000000000000000000000000000000000000081565b61008e68056bc75e2d6310000081565b6040805160208101909152600081526101d57f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316147f556d616d6941737365745661756c7450726963654f7261636c650000000000006c24b73b30b634b2103a37b5b2b760991b8561034b565b604051638fae3be160e01b8152610330906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ac7d17c908290638fae3be19061022d908890600401610a73565b60206040518083038186803b15801561024557600080fd5b505afa158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d9190610a92565b6040518263ffffffff1660e01b815260040161029991906109ae565b60206040518083038186803b1580156102b157600080fd5b505afa1580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e99190610ac6565b7f556d616d6941737365745661756c7450726963654f7261636c650000000000007f556d616d692041737365742063616e6e6f7420626520626f72726f7761626c656103c6565b60405180602001604052806103436103fa565b905292915050565b836103c0576103598361079b565b6101d160f51b6103688461079b565b61080f60f21b61037785610836565b604051610391959493929190601f60f91b90602001610b55565b60408051601f198184030181529082905262461bcd60e51b82526103b791600401610be5565b60405180910390fd5b50505050565b826103f5576103d48261079b565b6101d160f51b6103e38361079b565b60405160200161039193929190610bfd565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610c39565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638928378e7f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016104fe91906109ae565b60206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190610cef565b6000015190506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058f57600080fd5b505afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190610a92565b90506000811561065c5781846001600160a01b03166301e1d1146040518163ffffffff1660e01b815260040160206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610a92565b61064d9085610d26565b6106579190610d5b565b61065e565b825b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fda89d6d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bb57600080fd5b505afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190610d83565b6001600160a01b03166313ee9df46040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190610e2a565b60400151905068056bc75e2d6310000061077d8284610d26565b6107879190610d5b565b6107919083610e4b565b9550505050505090565b60606000826040516020016107b09190610e68565b60408051601f19818403018152919052905060205b801561081b57806107d581610e7d565b9150508181815181106107ea576107ea610e94565b01602001516001600160f81b0319161561081657600061080b826001610eaa565b835250909392505050565b6107c5565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061087c5761087c610e94565b60200101906001600160f81b031916908160001a905350607860f81b816001815181106108ab576108ab610e94565b60200101906001600160f81b031916908160001a90535060005b601481101561082e5760006108db826002610d26565b90506108e9600f851661097c565b836108f5836029610e4b565b8151811061090557610905610e94565b60200101906001600160f81b031916908160001a905350600484901c935061092f600f851661097c565b8361093b836028610e4b565b8151811061094b5761094b610e94565b60200101906001600160f81b031916908160001a9053505060049290921c918061097481610ec2565b9150506108c5565b6000600a82101561099b57610992603083610eaa565b60f81b92915050565b610992605783610eaa565b805b82525050565b602081016109bc82846109a6565b92915050565b60006001600160a01b0382166109bc565b60006109bc826109c2565b60006109bc826109d3565b6109a8816109de565b602081016109bc82846109e9565b610a09816109c2565b8114610a1457600080fd5b50565b80356109bc81610a00565b600060208284031215610a3757610a37600080fd5b6000610a438484610a17565b949350505050565b805160208301906103c084826109a6565b602081016109bc8284610a4b565b6109a8816109c2565b602081016109bc8284610a6a565b80610a09565b80516109bc81610a81565b600060208284031215610aa757610aa7600080fd5b6000610a438484610a87565b801515610a09565b80516109bc81610ab3565b600060208284031215610adb57610adb600080fd5b6000610a438484610abb565b60005b83811015610b02578181015183820152602001610aea565b838111156103c05750506000910152565b6000610b1d825190565b610b2b818560208601610ae7565b9290920192915050565b6001600160f01b031981166109a8565b6001600160f81b031981166109a8565b6000610b618289610b13565b9150610b6d8288610b35565b600282019150610b7d8287610b13565b9150610b898286610b35565b600282019150610b998285610b13565b9150610ba58284610b45565b506001019695505050505050565b6000610bbd825190565b808452602084019350610bd4818560208601610ae7565b601f01601f19169290920192915050565b60208082528101610bf68184610bb3565b9392505050565b6000610c098286610b13565b9150610c158285610b35565b600282019150610c258284610b13565b95945050505050565b80516109bc81610a00565b600060208284031215610c4e57610c4e600080fd5b6000610a438484610c2e565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610c9657610c96610c5a565b6040525050565b6000610ca860405190565b9050610cb48282610c70565b919050565b600060208284031215610cce57610cce600080fd5b610cd86020610c9d565b90506000610ce68484610a87565b82525092915050565b600060208284031215610d0457610d04600080fd5b6000610a438484610cb9565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610d4057610d40610d10565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610d6a57610d6a610d45565b500490565b610a09816109d3565b80516109bc81610d6f565b600060208284031215610d9857610d98600080fd5b6000610a438484610d78565b600060a08284031215610db957610db9600080fd5b610dc360a0610c9d565b90506000610dd18484610a87565b8252506020610de284848301610a87565b6020830152506040610df684828501610a87565b6040830152506060610e0a84828501610a87565b6060830152506080610e1e84828501610a87565b60808301525092915050565b600060a08284031215610e3f57610e3f600080fd5b6000610a438484610da4565b600082821015610e5d57610e5d610d10565b500390565b806109a8565b6000610e748284610e62565b50602001919050565b600081610e8c57610e8c610d10565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610ebd57610ebd610d10565b500190565b6000600019821415610ed657610ed6610d10565b506001019056fea2646970667358221220903ca67a692aa965f0b3ab8e6b921ebb4dedf05969e439c55e93d191979e34c464736f6c63430008090033";

type UmamiAssetVaultPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UmamiAssetVaultPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UmamiAssetVaultPriceOracle__factory extends ContractFactory {
  constructor(...args: UmamiAssetVaultPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    _umamiAssetVaultRegistry: string,
    _isolationModeVaultToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<UmamiAssetVaultPriceOracle> {
    return super.deploy(
      _dolomiteMargin,
      _umamiAssetVaultRegistry,
      _isolationModeVaultToken,
      overrides || {}
    ) as Promise<UmamiAssetVaultPriceOracle>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    _umamiAssetVaultRegistry: string,
    _isolationModeVaultToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dolomiteMargin,
      _umamiAssetVaultRegistry,
      _isolationModeVaultToken,
      overrides || {}
    );
  }
  override attach(address: string): UmamiAssetVaultPriceOracle {
    return super.attach(address) as UmamiAssetVaultPriceOracle;
  }
  override connect(signer: Signer): UmamiAssetVaultPriceOracle__factory {
    return super.connect(signer) as UmamiAssetVaultPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UmamiAssetVaultPriceOracleInterface {
    return new utils.Interface(_abi) as UmamiAssetVaultPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UmamiAssetVaultPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UmamiAssetVaultPriceOracle;
  }
}
