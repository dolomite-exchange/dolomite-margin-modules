/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VesterImplementationLibForV2,
  VesterImplementationLibForV2Interface,
} from "../../../../contracts/external/liquidityMining/VesterImplementationLibForV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "PositionDurationExtended",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract VesterImplementationV2",
        name: "_implementation",
        type: "VesterImplementationV2",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
    ],
    name: "calculateEffectiveRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "grandfatheredUpgradedMinVestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maxVestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minVestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oldMaxVestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6108dc61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80633fb2007d1461007157806356097ba41461008c57806374e555b61461009557806380c339321461009e5780638b55bd87146100a8578063d919e6d2146100ca575b600080fd5b6224ea005b6040516100839190610530565b60405180910390f35b6249d400610076565b62093a80610076565b6301712400610076565b8180156100b457600080fd5b506100c86100c3366004610593565b6100dd565b005b6100766100d83660046105f7565b61031b565b6040516331a9108f60e11b81526000906001600160a01b03861690636352211e9061010c908690600401610530565b60206040518083038186803b15801561012457600080fd5b505afa158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c919061065b565b905061019b6001600160a01b03821633146000805160206108878339815191527524b73b30b634b2103837b9b4ba34b7b71037bbb732b960511b61042e565b6101f36249d40083101580156101b5575063017124008311155b80156101cb57506101c962093a808461069a565b155b6000805160206108878339815191526f24b73b30b634b210323ab930ba34b7b760811b61042e565b610290856001600160a01b03166325cfcab26040518163ffffffff1660e01b815260040160206040518083038186803b15801561022f57600080fd5b505afa158015610243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026791906106b9565b8411156000805160206108878339815191526d125b9d985b1a590813919508125160921b61042e565b6102d36224ea00856003015411156000805160206108878339815191527f506f736974696f6e20616c72656164792075706772616465640000000000000061042e565b818460030181905550827ffce12fb54c08253672cba7b19abb6a6a7065a833f742440d9788dc4602306f048360405161030c9190610530565b60405180910390a25050505050565b6000836001600160a01b03166325cfcab26040518163ffffffff1660e01b815260040160206040518083038186803b15801561035657600080fd5b505afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e91906106b9565b821115801561039f57506249d40083105b156103fb578262093a8014156103b85750612616610427565b826212750014156103cc575061251c610427565b82621baf8014156103e05750612328610427565b826224ea00146103f2576103f26106da565b50611f40610427565b600061040a62093a8085610706565b90506104178160fa61071a565b61042390612710610739565b9150505b9392505050565b8261048c5761043c82610491565b6101d160f51b61044b83610491565b60405160200161045d939291906107b2565b60408051601f198184030181529082905262461bcd60e51b825261048391600401610815565b60405180910390fd5b505050565b60606000826040516020016104a6919061082c565b60408051601f19818403018152919052905060205b801561051157806104cb81610841565b9150508181815181106104e0576104e0610858565b01602001516001600160f81b0319161561050c57600061050182600161086e565b835250909392505050565b6104bb565b505060408051600081526020810190915292915050565b805b82525050565b6020810161053e8284610528565b92915050565b60006001600160a01b03821661053e565b600061053e82610544565b61056981610555565b811461057457600080fd5b50565b803561053e81610560565b80610569565b803561053e81610582565b600080600080608085870312156105ac576105ac600080fd5b60006105b88787610577565b94505060206105c987828801610588565b93505060406105da87828801610588565b92505060606105eb87828801610588565b91505092959194509250565b60008060006060848603121561060f5761060f600080fd5b600061061b8686610577565b935050602061062c86828701610588565b925050604061063d86828701610588565b9150509250925092565b61056981610544565b805161053e81610647565b60006020828403121561067057610670600080fd5b600061067c8484610650565b949350505050565b634e487b7160e01b600052601260045260246000fd5b6000826106a9576106a9610684565b500690565b805161053e81610582565b6000602082840312156106ce576106ce600080fd5b600061067c84846106ae565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261071557610715610684565b500490565b6000816000190483118215151615610734576107346106f0565b500290565b60008282101561074b5761074b6106f0565b500390565b60005b8381101561076b578181015183820152602001610753565b8381111561077a576000848401525b50505050565b600061078a825190565b610798818560208601610750565b9290920192915050565b6001600160f01b0319811661052a565b60006107be8286610780565b91506107ca82856107a2565b6002820191506107da8284610780565b95945050505050565b60006107ed825190565b808452602084019350610804818560208601610750565b601f01601f19169290920192915050565b6020808252810161042781846107e3565b8061052a565b60006108388284610826565b50602001919050565b600081610850576108506106f0565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610881576108816106f0565b50019056fe566573746572496d706c656d656e746174696f6e4c6962466f72563200000000a2646970667358221220e9b99281ce06be391e5a748a02eb22aabaf96826b3f530be19cfb74ff431805664736f6c63430008090033";

type VesterImplementationLibForV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VesterImplementationLibForV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VesterImplementationLibForV2__factory extends ContractFactory {
  constructor(...args: VesterImplementationLibForV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<VesterImplementationLibForV2> {
    return super.deploy(
      overrides || {}
    ) as Promise<VesterImplementationLibForV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VesterImplementationLibForV2 {
    return super.attach(address) as VesterImplementationLibForV2;
  }
  override connect(signer: Signer): VesterImplementationLibForV2__factory {
    return super.connect(signer) as VesterImplementationLibForV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VesterImplementationLibForV2Interface {
    return new utils.Interface(_abi) as VesterImplementationLibForV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VesterImplementationLibForV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VesterImplementationLibForV2;
  }
}
