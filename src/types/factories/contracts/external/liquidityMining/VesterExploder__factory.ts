/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VesterExploder,
  VesterExploderInterface,
} from "../../../../contracts/external/liquidityMining/VesterExploder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vester",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_initialHandlers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isHandler",
        type: "bool",
      },
    ],
    name: "HandlerSet",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTER",
    outputs: [
      {
        internalType: "contract IVesterV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "explodePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "isHandler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isHandler",
        type: "bool",
      },
    ],
    name: "ownerSetIsHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000cf138038062000cf1833981016040819052620000349162000264565b6001600160a01b03808316608052831660a052805160005b818110156200009757620000848382815181106200006e576200006e620002d8565b60200260200101516001620000a260201b60201c565b6200008f8162000304565b90506200004c565b505050505062000362565b6001600160a01b03821660009081526020819052604090819020805460ff1916831515179055517f6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c8390620000fa90849084906200033c565b60405180910390a15050565b60006001600160a01b0382165b92915050565b620001248162000106565b81146200013057600080fd5b50565b8051620001138162000119565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200017e576200017e62000140565b6040525050565b60006200019160405190565b90506200019f828262000156565b919050565b60006001600160401b03821115620001c057620001c062000140565b5060209081020190565b6000620001e1620001db84620001a4565b62000185565b83815290506020808201908402830185811115620002025762000202600080fd5b835b818110156200022a57806200021a888262000133565b8452506020928301920162000204565b5050509392505050565b600082601f8301126200024a576200024a600080fd5b81516200025c848260208601620001ca565b949350505050565b6000806000606084860312156200027e576200027e600080fd5b60006200028c868662000133565b93505060206200029f8682870162000133565b92505060408401516001600160401b03811115620002c057620002c0600080fd5b620002ce8682870162000234565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156200031b576200031b620002ee565b5060010190565b6200032d8162000106565b82525050565b8015156200032d565b604081016200034c828562000322565b6200035b602083018462000333565b9392505050565b60805160a05161095d620003946000396000818160fa015261017b015260008181607301526101ec015261095d6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304789d881461005c57806315c14a4a1461007157806346ea87af146100a9578063a2067a7d146100e2578063c455d4f6146100f5575b600080fd5b61006f61006a3660046105e4565b61011c565b005b7f00000000000000000000000000000000000000000000000000000000000000005b6040516100a09190610643565b60405180910390f35b6100d56100b7366004610665565b6001600160a01b031660009081526020819052604090205460ff1690565b6040516100a0919061068e565b61006f6100f03660046106af565b6101e6565b6100937f000000000000000000000000000000000000000000000000000000000000000081565b336000818152602081905260409020546101649060ff166d2b32b9ba32b922bc383637b232b960911b7413db9b1e481a185b991b195c8818d85b8818d85b1b605a1b846102db565b604051630af187b160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632bc61ec4906101b09085906004016106f2565b600060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b505050505050565b336102cc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561024357600080fd5b505afa158015610257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027b919061070b565b6001600160a01b0316826001600160a01b0316147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d69746500846102db565b6102d68383610356565b505050565b83610350576102e9836103b8565b6101d160f51b6102f8846103b8565b61080f60f21b61030785610453565b604051610321959493929190601f60f91b9060200161079a565b60408051601f198184030181529082905262461bcd60e51b82526103479160040161082a565b60405180910390fd5b50505050565b6001600160a01b03821660009081526020819052604090819020805460ff1916831515179055517f6cc67219f62a9e5d66cc9f2a62e16634cffcf48facd698a829bafcc1ad2c5c83906103ac908490849061084b565b60405180910390a15050565b60606000826040516020016103cd9190610866565b60408051601f19818403018152919052905060205b801561043857806103f281610891565b915050818181518110610407576104076108a8565b01602001516001600160f81b031916156104335760006104288260016108be565b835250909392505050565b6103e2565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b81600081518110610499576104996108a8565b60200101906001600160f81b031916908160001a905350607860f81b816001815181106104c8576104c86108a8565b60200101906001600160f81b031916908160001a90535060005b601481101561044b5760006104f88260026108d6565b9050610506600f8516610599565b836105128360296108f5565b81518110610522576105226108a8565b60200101906001600160f81b031916908160001a905350600484901c935061054c600f8516610599565b836105588360286108f5565b81518110610568576105686108a8565b60200101906001600160f81b031916908160001a9053505060049290921c91806105918161090c565b9150506104e2565b6000600a8210156105b8576105af6030836108be565b60f81b92915050565b6105af6057836108be565b805b81146105d057600080fd5b50565b80356105de816105c3565b92915050565b6000602082840312156105f9576105f9600080fd5b600061060584846105d3565b949350505050565b60006001600160a01b0382166105de565b60006105de8261060d565b60006105de8261061e565b61063d81610629565b82525050565b602081016105de8284610634565b6105c58161060d565b80356105de81610651565b60006020828403121561067a5761067a600080fd5b6000610605848461065a565b80151561063d565b602081016105de8284610686565b8015156105c5565b80356105de8161069c565b600080604083850312156106c5576106c5600080fd5b60006106d1858561065a565b92505060206106e2858286016106a4565b9150509250929050565b8061063d565b602081016105de82846106ec565b80516105de81610651565b60006020828403121561072057610720600080fd5b60006106058484610700565b60005b8381101561074757818101518382015260200161072f565b838111156103505750506000910152565b6000610762825190565b61077081856020860161072c565b9290920192915050565b6001600160f01b0319811661063d565b6001600160f81b0319811661063d565b60006107a68289610758565b91506107b2828861077a565b6002820191506107c28287610758565b91506107ce828661077a565b6002820191506107de8285610758565b91506107ea828461078a565b506001019695505050505050565b6000610802825190565b80845260208401935061081981856020860161072c565b601f01601f19169290920192915050565b6020808252810161083b81846107f8565b9392505050565b61063d8161060d565b604081016108598285610842565b61083b6020830184610686565b600061087282846106ec565b50602001919050565b634e487b7160e01b600052601160045260246000fd5b6000816108a0576108a061087b565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600082198211156108d1576108d161087b565b500190565b60008160001904831182151516156108f0576108f061087b565b500290565b6000828210156109075761090761087b565b500390565b60006000198214156109205761092061087b565b506001019056fea264697066735822122098a6a89d74d491f8a50346f4155d7c545511875b222aeace5fe1e2e2b465c4b164736f6c63430008090033";

type VesterExploderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VesterExploderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VesterExploder__factory extends ContractFactory {
  constructor(...args: VesterExploderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vester: string,
    _dolomiteMargin: string,
    _initialHandlers: string[],
    overrides?: Overrides & { from?: string }
  ): Promise<VesterExploder> {
    return super.deploy(
      _vester,
      _dolomiteMargin,
      _initialHandlers,
      overrides || {}
    ) as Promise<VesterExploder>;
  }
  override getDeployTransaction(
    _vester: string,
    _dolomiteMargin: string,
    _initialHandlers: string[],
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vester,
      _dolomiteMargin,
      _initialHandlers,
      overrides || {}
    );
  }
  override attach(address: string): VesterExploder {
    return super.attach(address) as VesterExploder;
  }
  override connect(signer: Signer): VesterExploder__factory {
    return super.connect(signer) as VesterExploder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VesterExploderInterface {
    return new utils.Interface(_abi) as VesterExploderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VesterExploder {
    return new Contract(address, _abi, signerOrProvider) as VesterExploder;
  }
}
