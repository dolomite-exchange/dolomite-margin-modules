/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PendlePtPriceOracle,
  PendlePtPriceOracleInterface,
} from "../../../../contracts/external/pendle/PendlePtPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dptToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pendleRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DPT_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PT_ASSET_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REGISTRY",
    outputs: [
      {
        internalType: "contract IPendleRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWAP_DURATION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.MonetaryPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620017b6380380620017b683398101604081905262000035916200042b565b6001600160a01b03808516608081905284821660a05283821660e05290821660c0526040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156200008e57600080fd5b505afa158015620000a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c99190620004b0565b620000d99060ff16600a62000624565b610100818152505060008060a0516001600160a01b03166305d7b9a26040518163ffffffff1660e01b815260040160206040518083038186803b1580156200012057600080fd5b505afa15801562000135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015b91906200065a565b6001600160a01b031663873e960060a0516001600160a01b03166354304fd56040518163ffffffff1660e01b815260040160206040518083038186803b158015620001a557600080fd5b505afa158015620001ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e091906200065a565b6103846040518363ffffffff1660e01b8152600401620002029291906200069d565b60606040518083038186803b1580156200021b57600080fd5b505afa15801562000230573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002569190620006ea565b9250509150620002be821580156200026b5750815b7f50656e646c65507450726963654f7261636c65000000000000000000000000007f4f7261636c65206e6f7420726561647920796574000000000000000000000000620002ca60201b6200038c1760201c565b50505050505062000893565b826200033157620002db8262000336565b6101d160f51b620002ec8362000336565b6040516020016200030093929190620007ab565b60408051601f198184030181529082905262461bcd60e51b8252620003289160040162000817565b60405180910390fd5b505050565b60606000826040516020016200034d919062000831565b60408051601f19818403018152919052905060205b8015620003da5780620003758162000848565b9150508181815181106200038d576200038d62000862565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615620003d4576000620003c982600162000878565b835250909392505050565b62000362565b505060408051600081526020810190915292915050565b60006001600160a01b0382165b92915050565b6200040f81620003f1565b81146200041b57600080fd5b50565b8051620003fe8162000404565b60008060008060808587031215620004465762000446600080fd5b60006200045487876200041e565b945050602062000467878288016200041e565b93505060406200047a878288016200041e565b92505060606200048d878288016200041e565b91505092959194509250565b60ff81166200040f565b8051620003fe8162000499565b600060208284031215620004c757620004c7600080fd5b6000620004d58484620004a3565b949350505050565b634e487b7160e01b600052601160045260246000fd5b80825b60018511156200053957808604811115620005155762000515620004dd565b60018516156200052457908102905b8002620005318560011c90565b9450620004f6565b94509492505050565b60008262000553575060016200061d565b8162000562575060006200061d565b81600181146200057b57600281146200058657620005ba565b60019150506200061d565b60ff8411156200059a576200059a620004dd565b8360020a915084821115620005b357620005b3620004dd565b506200061d565b5060208310610133831016604e8410600b8410161715620005f2575081810a83811115620005ec57620005ec620004dd565b6200061d565b620006018484846001620004f3565b925090508184048111156200061a576200061a620004dd565b81025b9392505050565b60006200061d600019848462000542565b6000620003fe82620003f1565b6200040f8162000635565b8051620003fe8162000642565b600060208284031215620006715762000671600080fd5b6000620004d584846200064d565b6200068a81620003f1565b82525050565b63ffffffff81166200068a565b60408101620006ad82856200067f565b6200061d602083018462000690565b8015156200040f565b8051620003fe81620006bc565b61ffff81166200040f565b8051620003fe81620006d2565b600080600060608486031215620007045762000704600080fd5b6000620007128686620006c5565b93505060206200072586828701620006dd565b92505060406200073886828701620006c5565b9150509250925092565b60005b838110156200075f57818101518382015260200162000745565b838111156200076f576000848401525b50505050565b600062000780825190565b6200079081856020860162000742565b9290920192915050565b6001600160f01b031981166200068a565b6000620007b9828662000775565b9150620007c782856200079a565b600282019150620007d9828462000775565b95945050505050565b6000620007ed825190565b8084526020840193506200080681856020860162000742565b601f01601f19169290920192915050565b602080825281016200061d8184620007e2565b806200068a565b60006200083f82846200082a565b50602001919050565b6000816200085a576200085a620004dd565b506000190190565b634e487b7160e01b600052603260045260246000fd5b600082198211156200088e576200088e620004dd565b500190565b60805160a05160c05160e05161010051610eb06200090660003960008181610166015261078601526000818161011f015261054f01526000818160f8015261023b01526000818160c401528181610440015281816105e40152610683015260008181608701526101bf0152610eb06000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806329db1be61161005b57806329db1be61461011a57806341976e091461014157806365acd47014610161578063879ac8f81461019557600080fd5b8063056c55621461008257806306433b1b146100bf57806315c14a4a146100f3575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b691906109ed565b60405180910390f35b6100e67f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b69190610a2b565b6100e67f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b61015461014f366004610a5b565b6101ab565b6040516100b69190610a9b565b6101887f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b69190610aa9565b61019e61038481565b6040516100b69190610ac3565b6040805160208101909152600081526102207f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316147250656e646c65507450726963654f7261636c6560681b6c34b73b30b634b2103a37b5b2b760991b856103ef565b604051638fae3be160e01b8152610371906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635ac7d17c908290638fae3be1906102789088906004016109ed565b60206040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610ae2565b6040518263ffffffff1660e01b81526004016102e49190610aa9565b60206040518083038186803b1580156102fc57600080fd5b505afa158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103349190610b16565b7250656e646c65507450726963654f7261636c6560681b7f50542063616e6e6f7420626520626f72726f7761626c6500000000000000000061038c565b604051806020016040528061038461043b565b905292915050565b826103ea5761039a826107c0565b6101d160f51b6103a9836107c0565b6040516020016103bb93929190610b95565b60408051601f198184030181529082905262461bcd60e51b82526103e191600401610bf8565b60405180910390fd5b505050565b83610435576103fd836107c0565b6101d160f51b61040c846107c0565b61080f60f21b61041b8561085b565b6040516103bb959493929190601f60f91b90602001610c20565b50505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd12584f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190610c9d565b6001600160a01b03166339f7421b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050757600080fd5b505afa15801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610c9d565b6001600160a01b03166341976e097f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161058a91906109ed565b60206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190610d53565b60000151905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166305d7b9a26040518163ffffffff1660e01b815260040160206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610c9d565b6001600160a01b031663abca0eab7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166354304fd56040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190610c9d565b6103846040518363ffffffff1660e01b8152600401610732929190610d74565b60206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190610ae2565b90507f00000000000000000000000000000000000000000000000000000000000000006107af8284610da5565b6107b99190610dda565b9250505090565b60606000826040516020016107d59190610dee565b60408051601f19818403018152919052905060205b801561084057806107fa81610e03565b91505081818151811061080f5761080f610e1a565b01602001516001600160f81b0319161561083b576000610830826001610e30565b835250909392505050565b6107ea565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b816000815181106108a1576108a1610e1a565b60200101906001600160f81b031916908160001a905350607860f81b816001815181106108d0576108d0610e1a565b60200101906001600160f81b031916908160001a90535060005b6014811015610853576000610900826002610da5565b905061090e600f85166109a1565b8361091a836029610e48565b8151811061092a5761092a610e1a565b60200101906001600160f81b031916908160001a905350600484901c9350610954600f85166109a1565b83610960836028610e48565b8151811061097057610970610e1a565b60200101906001600160f81b031916908160001a9053505060049290921c918061099981610e5f565b9150506108ea565b6000600a8210156109c0576109b7603083610e30565b60f81b92915050565b6109b7605783610e30565b60006001600160a01b0382165b92915050565b6109e7816109cb565b82525050565b602081016109d882846109de565b60006001600160a01b0382166109d8565b60006109d8826109fb565b60006109d882610a0c565b6109e781610a17565b602081016109d88284610a22565b610a42816109cb565b8114610a4d57600080fd5b50565b80356109d881610a39565b600060208284031215610a7057610a70600080fd5b6000610a7c8484610a50565b949350505050565b806109e7565b805160208301906104358482610a84565b602081016109d88284610a8a565b602081016109d88284610a84565b63ffffffff81166109e7565b602081016109d88284610ab7565b80610a42565b80516109d881610ad1565b600060208284031215610af757610af7600080fd5b6000610a7c8484610ad7565b801515610a42565b80516109d881610b03565b600060208284031215610b2b57610b2b600080fd5b6000610a7c8484610b0b565b60005b83811015610b52578181015183820152602001610b3a565b838111156104355750506000910152565b6000610b6d825190565b610b7b818560208601610b37565b9290920192915050565b6001600160f01b031981166109e7565b6000610ba18286610b63565b9150610bad8285610b85565b600282019150610bbd8284610b63565b95945050505050565b6000610bd0825190565b808452602084019350610be7818560208601610b37565b601f01601f19169290920192915050565b60208082528101610c098184610bc6565b9392505050565b6001600160f81b031981166109e7565b6000610c2c8289610b63565b9150610c388288610b85565b600282019150610c488287610b63565b9150610c548286610b85565b600282019150610c648285610b63565b9150610c708284610c10565b506001019695505050505050565b60006109d8826109cb565b610a4281610c7e565b80516109d881610c89565b600060208284031215610cb257610cb2600080fd5b6000610a7c8484610c92565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610cfa57610cfa610cbe565b6040525050565b6000610d0c60405190565b9050610d188282610cd4565b919050565b600060208284031215610d3257610d32600080fd5b610d3c6020610d01565b90506000610d4a8484610ad7565b82525092915050565b600060208284031215610d6857610d68600080fd5b6000610a7c8484610d1d565b60408101610d8282856109de565b610c096020830184610ab7565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610dbf57610dbf610d8f565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610de957610de9610dc4565b500490565b6000610dfa8284610a84565b50602001919050565b600081610e1257610e12610d8f565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610e4357610e43610d8f565b500190565b600082821015610e5a57610e5a610d8f565b500390565b6000600019821415610e7357610e73610d8f565b506001019056fea26469706673582212206805b25feeea7c2279ae7f5b1c0cf877cd01723f75ff3a83d1d611306dc6c7d164736f6c63430008090033";

type PendlePtPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PendlePtPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PendlePtPriceOracle__factory extends ContractFactory {
  constructor(...args: PendlePtPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dptToken: string,
    _pendleRegistry: string,
    _underlyingToken: string,
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<PendlePtPriceOracle> {
    return super.deploy(
      _dptToken,
      _pendleRegistry,
      _underlyingToken,
      _dolomiteMargin,
      overrides || {}
    ) as Promise<PendlePtPriceOracle>;
  }
  override getDeployTransaction(
    _dptToken: string,
    _pendleRegistry: string,
    _underlyingToken: string,
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dptToken,
      _pendleRegistry,
      _underlyingToken,
      _dolomiteMargin,
      overrides || {}
    );
  }
  override attach(address: string): PendlePtPriceOracle {
    return super.attach(address) as PendlePtPriceOracle;
  }
  override connect(signer: Signer): PendlePtPriceOracle__factory {
    return super.connect(signer) as PendlePtPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PendlePtPriceOracleInterface {
    return new utils.Interface(_abi) as PendlePtPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PendlePtPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PendlePtPriceOracle;
  }
}
