/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BaseRegistry,
  BaseRegistryInterface,
} from "../../../../contracts/external/general/BaseRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610974806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315c14a4a14610046578063bd12584f14610064578063ffd1271b1461006c575b600080fd5b61004e610081565b60405161005b919061066b565b60405180910390f35b61004e6100ba565b61007f61007a3660046106ac565b6100ea565b005b60006100b56100b160017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa176106eb565b5490565b905090565b60006100b56100b160017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a6106eb565b336101b76100f6610081565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012e57600080fd5b505afa158015610142573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610166919061070d565b6001600160a01b0316826001600160a01b0316147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d69746500846101c4565b6101c08261023f565b5050565b83610239576101d283610329565b6101d160f51b6101e184610329565b61080f60f21b6101f0856103c4565b60405161020a959493929190601f60f91b9060200161079c565b60408051601f198184030181529082905262461bcd60e51b82526102309160040161082c565b60405180910390fd5b50505050565b6102846001600160a01b03821615156b42617365526567697374727960a01b7f496e76616c696420646f6c6f6d6974655265676973747279000000000000000061050a565b60006102a782632f32699960e01b6040518060200160405280600081525061053e565b9050808060200190518101906102bd919061070d565b506102f16102ec60017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a6106eb565b839055565b6040516001600160a01b038316907fd4968e6ff4b2df084b2b71aa90bc2137eee816091d7f1c17f0b66a602f9dbaeb90600090a25050565b606060008260405160200161033e919061084a565b60408051601f19818403018152919052905060205b80156103a957806103638161085f565b91505081818151811061037857610378610876565b01602001516001600160f81b031916156103a457600061039982600161088c565b835250909392505050565b610353565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b8160008151811061040a5761040a610876565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061043957610439610876565b60200101906001600160f81b031916908160001a90535060005b60148110156103bc5760006104698260026108a4565b9050610477600f8516610609565b836104838360296106eb565b8151811061049357610493610876565b60200101906001600160f81b031916908160001a905350600484901c93506104bd600f8516610609565b836104c98360286106eb565b815181106104d9576104d9610876565b60200101906001600160f81b031916908160001a9053505060049290921c9180610502816108c3565b915050610453565b826105395761051882610329565b6101d160f51b61052783610329565b60405160200161020a939291906108de565b505050565b6060600080856001600160a01b03168585604051602001610560929190610916565b60408051601f198184030181529082905261057a91610932565b600060405180830381855afa9150503d80600081146105b5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ba565b606091505b50915091506106008280156105d0575060008251115b6c2b30b634b230ba34b7b72634b160991b7410d85b1b081d1bc81d185c99d95d0819985a5b1959605a1b896101c4565b95945050505050565b6000600a8210156106285761061f60308361088c565b60f81b92915050565b61061f60578361088c565b60006001600160a01b0382165b92915050565b600061064082610633565b600061064082610646565b61066581610651565b82525050565b60208101610640828461065c565b60006001600160a01b038216610640565b61069381610679565b811461069e57600080fd5b50565b80356106408161068a565b6000602082840312156106c1576106c1600080fd5b60006106cd84846106a1565b949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106fd576106fd6106d5565b500390565b80516106408161068a565b60006020828403121561072257610722600080fd5b60006106cd8484610702565b60005b83811015610749578181015183820152602001610731565b838111156102395750506000910152565b6000610764825190565b61077281856020860161072e565b9290920192915050565b6001600160f01b03198116610665565b6001600160f81b03198116610665565b60006107a8828961075a565b91506107b4828861077c565b6002820191506107c4828761075a565b91506107d0828661077c565b6002820191506107e0828561075a565b91506107ec828461078c565b506001019695505050505050565b6000610804825190565b80845260208401935061081b81856020860161072e565b601f01601f19169290920192915050565b6020808252810161083d81846107fa565b9392505050565b80610665565b60006108568284610844565b50602001919050565b60008161086e5761086e6106d5565b506000190190565b634e487b7160e01b600052603260045260246000fd5b6000821982111561089f5761089f6106d5565b500190565b60008160001904831182151516156108be576108be6106d5565b500290565b60006000198214156108d7576108d76106d5565b5060010190565b60006108ea828661075a565b91506108f6828561077c565b600282019150610600828461075a565b6001600160e01b03198116610665565b60006109228285610906565b6004820191506106cd828461075a565b600061083d828461075a56fea2646970667358221220dd95a88c7e78622d35c471e471e792cc59fb42bad3aaf41e3a5d667ffec2715864736f6c63430008090033";

type BaseRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseRegistry__factory extends ContractFactory {
  constructor(...args: BaseRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BaseRegistry> {
    return super.deploy(overrides || {}) as Promise<BaseRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaseRegistry {
    return super.attach(address) as BaseRegistry;
  }
  override connect(signer: Signer): BaseRegistry__factory {
    return super.connect(signer) as BaseRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseRegistryInterface {
    return new utils.Interface(_abi) as BaseRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseRegistry {
    return new Contract(address, _abi, signerOrProvider) as BaseRegistry;
  }
}
