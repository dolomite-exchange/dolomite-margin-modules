/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestIsolationModeWrapperTraderV1,
  TestIsolationModeWrapperTraderV1Interface,
} from "../../../contracts/test/TestIsolationModeWrapperTraderV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_FACTORY",
    outputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_solidAccountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outputMarket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_inputMarket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
    ],
    name: "createActionsForWrapping",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeOriginator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_orderData",
        type: "bytes",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_desiredInputAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getExchangeCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200201a3803806200201a833981016040819052620000349162000086565b6001600160a01b039081166080521660a052620000c9565b60006001600160a01b0382165b92915050565b6200006a816200004c565b81146200007657600080fd5b50565b805162000059816200005f565b600080604083850312156200009e576200009e600080fd5b6000620000ac858562000079565b9250506020620000bf8582860162000079565b9150509250929050565b60805160a051611ec46200015660003960008181606c015281816101a20152818161024e015281816103840152818161075d01528181610a9101528181610afe0152610bb001526000818160a60152818161013e015281816103a6015281816104b301528181610564015281816106ff0152818161072e0152818161085b015261088a0152611ec46000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063103f29071461006757806315c14a4a146100a45780633a8fdd7d146100ca5780637d98ebac146100ea578063b189111a146100fd578063c14e3a4714610104575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b60405161009b919061137a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100dd6100d83660046114bf565b610124565b60405161009b9190611544565b6100dd6100f83660046115a4565b61012e565b60016100dd565b61011761011236600461164f565b610375565b60405161009b919061194a565b815b949350505050565b60003361019d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f4f6e6c7920446f6c6f6d6974652063616e2063616c6c2066756e6374696f6e008461064b565b6102027f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886001600160a01b031614600080516020611e6f8339815191527324b73b30b634b21037baba383aba103a37b5b2b760611b8a61064b565b61023560008611600080516020611e6f83398151915273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b6106c6565b60006102438486018661195b565b9050600061031c8b8b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190611987565b858c8c8c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106fa92505050565b905061035c82821015600080516020611e6f8339815191527f496e73756666696369656e74206f757470757420616d6f756e740000000000008486610a1c565b6103678b8b83610a7a565b9a9950505050505050505050565b60606104786001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663062bd3e9886040518263ffffffff1660e01b81526004016103f09190611544565b60206040518083038186803b15801561040857600080fd5b505afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104409190611987565b6001600160a01b031614600080516020611e6f83398151915274125b9d985b1a59081bdd5d1c1d5d081b585c9ad95d605a1b88610bd7565b604080516001808252818301909252600091816020015b6104976112cc565b81526020019060019003908161048f57905050905060006105ff7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663062bd3e9886040518263ffffffff1660e01b81526004016104fd9190611544565b60206040518083038186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d9190611987565b60405163062bd3e960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063062bd3e990610599908c90600401611544565b60206040518083038186803b1580156105b157600080fd5b505afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611987565b8660405180602001604052806000815250610124565b905061061f8b878930888660405180602001604052806000815250610c03565b82600081518110610632576106326119a8565b6020908102919091010152509998505050505050505050565b836106c05761065983610d09565b6101d160f51b61066884610d09565b61080f60f21b61067785610da4565b604051610691959493929190601f60f91b90602001611a00565b60408051601f198184030181529082905262461bcd60e51b82526106b791600401611a5e565b60405180910390fd5b50505050565b826106f5576106d482610d09565b6101d160f51b6106e383610d09565b60405160200161069193929190611a6f565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638928378e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fae3be17f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016107989190611a97565b60206040518083038186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190611ab0565b6040518263ffffffff1660e01b81526004016108049190611544565b60206040518083038186803b15801561081c57600080fd5b505afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190611b07565b51905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638928378e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fae3be1896040518263ffffffff1660e01b81526004016108d49190611a97565b60206040518083038186803b1580156108ec57600080fd5b505afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611ab0565b6040518263ffffffff1660e01b81526004016109409190611544565b60206040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190611b07565b5190506000826109a08388611b3e565b6109aa9190611b73565b6040516310f29c1d60e11b81529091506001600160a01b038a16906321e5383a906109db9030908590600401611b87565b600060405180830381600087803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b50929d9c50505050505050505050505050565b84610a7357610a2a84610d09565b6101d160f51b610a3985610d09565b61080f60f21b610a4886610eea565b61016160f51b610a5787610eea565b6040516106919796959493929190601f60f91b90602001611ba2565b5050505050565b6040516316dd241560e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635b74905490610ac89086908590600401611b87565b600060405180830381600087803b158015610ae257600080fd5b505af1158015610af6573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611987565b9050610ba36001600160a01b0382168584610ff6565b6106c06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484610ff6565b836106c057610be583610d09565b6101d160f51b610bf484610d09565b61080f60f21b61067785610eea565b610c0b6112cc565b610c37604080516080810190915260008082526020820190815260200160008152602001600081525090565b600019851415610c6e5760408051608081019091526000808252602082019081526020016001815260200160008152509050610c95565b60408051608081019091526000808252602082019081526020016000815260200186905290505b60408051610100810190915280600481526020018a8152602001828152602001898152602001888152602001876001600160a01b03168152602001600081526020018585604051602001610cea929190611c1e565b60408051601f1981840301815291905290529998505050505050505050565b6060600082604051602001610d1e9190611c3e565b60408051601f19818403018152919052905060205b8015610d895780610d4381611c53565b915050818181518110610d5857610d586119a8565b01602001516001600160f81b03191615610d84576000610d79826001611c6a565b835250909392505050565b610d33565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b81600081518110610dea57610dea6119a8565b60200101906001600160f81b031916908160001a905350607860f81b81600181518110610e1957610e196119a8565b60200101906001600160f81b031916908160001a90535060005b6014811015610d9c576000610e49826002611b3e565b9050610e57600f85166110f0565b83610e63836029611c82565b81518110610e7357610e736119a8565b60200101906001600160f81b031916908160001a905350600484901c9350610e9d600f85166110f0565b83610ea9836028611c82565b81518110610eb957610eb96119a8565b60200101906001600160f81b031916908160001a9053505060049290921c9180610ee281611c99565b915050610e33565b606081610f0e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f385780610f2281611c99565b9150610f319050600a83611b73565b9150610f12565b60008167ffffffffffffffff811115610f5357610f536113cc565b6040519080825280601f01601f191660200182016040528015610f7d576020820181803683370190505b508593509050815b8015610fed5780610f9581611c53565b9150610fa49050600a85611cb4565b610faf906030611c6a565b60f81b828281518110610fc457610fc46119a8565b60200101906001600160f81b031916908160001a905350610fe6600a85611b73565b9350610f85565b50949350505050565b80158061107e5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061102c9030908690600401611cc8565b60206040518083038186803b15801561104457600080fd5b505afa158015611058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107c9190611ab0565b155b61109a5760405162461bcd60e51b81526004016106b790611d39565b6106f58363095ea7b360e01b84846040516024016110b9929190611b87565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261111a565b6000600a82101561110f57611106603083611c6a565b60f81b92915050565b611106605783611c6a565b600061116f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111ac9092919063ffffffff16565b90508051600014806111905750808060200190518101906111909190611d5c565b6106f55760405162461bcd60e51b81526004016106b790611dc4565b60606111bb84846000856111c5565b90505b9392505050565b6060824710156111e75760405162461bcd60e51b81526004016106b790611e17565b600080866001600160a01b031685876040516112039190611e27565b60006040518083038185875af1925050503d8060008114611240576040519150601f19603f3d011682016040523d82523d6000602084013e611245565b606091505b509150915061125687838387611261565b979650505050505050565b6060831561129d578251611296576001600160a01b0385163b6112965760405162461bcd60e51b81526004016106b790611e33565b5081610126565b61012683838151156112b25781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611a5e565b604080516101008101825260008082526020820152908101611310604080516080810190915260008082526020820190815260200160008152602001600081525090565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b60006001600160a01b0382165b92915050565b600061134f82611342565b600061134f82611355565b61137481611360565b82525050565b6020810161134f828461136b565b60006001600160a01b03821661134f565b6113a281611388565b81146113ad57600080fd5b50565b803561134f81611399565b806113a2565b803561134f816113bb565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715611408576114086113cc565b6040525050565b600061141a60405190565b905061142682826113e2565b919050565b600067ffffffffffffffff821115611445576114456113cc565b601f19601f83011660200192915050565b82818337506000910152565b60006114756114708461142b565b61140f565b90508281526020810184848401111561149057611490600080fd5b610d9c848285611456565b600082601f8301126114af576114af600080fd5b8135610126848260208601611462565b600080600080608085870312156114d8576114d8600080fd5b60006114e487876113b0565b94505060206114f5878288016113b0565b9350506040611506878288016113c1565b925050606085013567ffffffffffffffff81111561152657611526600080fd5b6115328782880161149b565b91505092959194509250565b80611374565b6020810161134f828461153e565b60008083601f84011261156757611567600080fd5b50813567ffffffffffffffff81111561158257611582600080fd5b60208301915083600182028301111561159d5761159d600080fd5b9250929050565b600080600080600080600060c0888a0312156115c2576115c2600080fd5b60006115ce8a8a6113b0565b97505060206115df8a828b016113b0565b96505060406115f08a828b016113b0565b95505060606116018a828b016113b0565b94505060806116128a828b016113c1565b93505060a088013567ffffffffffffffff81111561163257611632600080fd5b61163e8a828b01611552565b925092505092959891949750929550565b600080600080600080600080610100898b03121561166f5761166f600080fd5b600061167b8b8b6113c1565b985050602061168c8b828c016113c1565b975050604061169d8b828c016113b0565b96505060606116ae8b828c016113b0565b95505060806116bf8b828c016113c1565b94505060a06116d08b828c016113c1565b93505060c06116e18b828c016113c1565b92505060e06116f28b828c016113c1565b9150509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b600981106113ad576113ad611702565b8061142681611718565b600061134f82611728565b61137481611732565b801515611374565b600281106113ad576113ad611702565b806114268161174e565b600061134f8261175e565b61137481611768565b8051608083019061178d8482611746565b5060208201516117a06020850182611773565b5060408201516117b36040850182611773565b5060608201516106c0606085018261153e565b61137481611388565b60005b838110156117ea5781810151838201526020016117d2565b838111156106c05750506000910152565b6000611805825190565b80845260208401935061181c8185602086016117cf565b601f01601f19169290920192915050565b8051600090610160840190611842858261173d565b506020830151611855602086018261153e565b506040830151611868604086018261177c565b50606083015161187b60c086018261153e565b50608083015161188e60e086018261153e565b5060a08301516118a26101008601826117c6565b5060c08301516118b661012086018261153e565b5060e08301518482036101408601526118cf82826117fb565b95945050505050565b60006111be838361182d565b60006118ee825190565b808452602084019350836020820285016119088560200190565b8060005b8581101561193d578484038952815161192585826118d8565b94506020830160209a909a019992505060010161190c565b5091979650505050505050565b602080825281016111be81846118e4565b60006020828403121561197057611970600080fd5b600061012684846113c1565b805161134f81611399565b60006020828403121561199c5761199c600080fd5b6000610126848461197c565b634e487b7160e01b600052603260045260246000fd5b60006119c8825190565b6119d68185602086016117cf565b9290920192915050565b6001600160f01b03198116611374565b6001600160f81b03198116611374565b6000611a0c82896119be565b9150611a1882886119e0565b600282019150611a2882876119be565b9150611a3482866119e0565b600282019150611a4482856119be565b9150611a5082846119f0565b506001019695505050505050565b602080825281016111be81846117fb565b6000611a7b82866119be565b9150611a8782856119e0565b6002820191506118cf82846119be565b6020810161134f82846117c6565b805161134f816113bb565b600060208284031215611ac557611ac5600080fd5b60006101268484611aa5565b600060208284031215611ae657611ae6600080fd5b611af0602061140f565b90506000611afe8484611aa5565b82525092915050565b600060208284031215611b1c57611b1c600080fd5b60006101268484611ad1565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611b5857611b58611b28565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611b8257611b82611b5d565b500490565b60408101611b9582856117c6565b6111be602083018461153e565b6000611bae828b6119be565b9150611bba828a6119e0565b600282019150611bca82896119be565b9150611bd682886119e0565b600282019150611be682876119be565b9150611bf282866119e0565b600282019150611c0282856119be565b9150611c0e82846119f0565b5060010198975050505050505050565b60408101611c2c828561153e565b81810360208301526111bb81846117fb565b6000611c4a828461153e565b50602001919050565b600081611c6257611c62611b28565b506000190190565b60008219821115611c7d57611c7d611b28565b500190565b600082821015611c9457611c94611b28565b500390565b6000600019821415611cad57611cad611b28565b5060010190565b600082611cc357611cc3611b5d565b500690565b60408101611cd682856117c6565b6111be60208301846117c6565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015291505b5060400190565b6020808252810161134f81611ce3565b8015156113a2565b805161134f81611d49565b600060208284031215611d7157611d71600080fd5b60006101268484611d51565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611d32565b6020808252810161134f81611d7d565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611d32565b6020808252810161134f81611dd4565b60006111be82846119be565b6020808252810161134f81601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060208201526040019056fe49736f6c6174696f6e4d6f646557726170706572547261646572563100000000a2646970667358221220a7ea337e7021d76e1d8eb5acf97156679d1a293e5b3e1dd81e3657d16a28b96a64736f6c63430008090033";

type TestIsolationModeWrapperTraderV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestIsolationModeWrapperTraderV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestIsolationModeWrapperTraderV1__factory extends ContractFactory {
  constructor(...args: TestIsolationModeWrapperTraderV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vaultFactory: string,
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestIsolationModeWrapperTraderV1> {
    return super.deploy(
      _vaultFactory,
      _dolomiteMargin,
      overrides || {}
    ) as Promise<TestIsolationModeWrapperTraderV1>;
  }
  override getDeployTransaction(
    _vaultFactory: string,
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vaultFactory,
      _dolomiteMargin,
      overrides || {}
    );
  }
  override attach(address: string): TestIsolationModeWrapperTraderV1 {
    return super.attach(address) as TestIsolationModeWrapperTraderV1;
  }
  override connect(signer: Signer): TestIsolationModeWrapperTraderV1__factory {
    return super.connect(signer) as TestIsolationModeWrapperTraderV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestIsolationModeWrapperTraderV1Interface {
    return new utils.Interface(
      _abi
    ) as TestIsolationModeWrapperTraderV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestIsolationModeWrapperTraderV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestIsolationModeWrapperTraderV1;
  }
}
