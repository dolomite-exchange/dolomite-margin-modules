/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestGmxReader,
  TestGmxReaderInterface,
} from "../../../contracts/test/TestGmxReader";

const _abi = [
  {
    inputs: [],
    name: "ActionAlreadySignalled",
    type: "error",
  },
  {
    inputs: [],
    name: "ActionNotSignalled",
    type: "error",
  },
  {
    inputs: [],
    name: "AdlNotEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "AdlNotRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "values",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "ArrayOutOfBoundsBytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "ArrayOutOfBoundsUint256",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevMinOracleBlockNumber",
        type: "uint256",
      },
    ],
    name: "BlockNumbersNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "adjustedClaimableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "CollateralAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "compactedValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "CompactedArrayOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CouldNotSendNativeToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DepositNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "DuplicatedIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DuplicatedMarketInSwapPath",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyAddressInMarketTokenBalanceValidation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedBlockNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDepositAmounts",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDepositAmountsAfterSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyHoldingAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarketTokenSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPriceFeed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPriceFeedMultiplier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPrimaryPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyRealtimeFeedId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyRealtimeFeedMultiplier",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signerIndex",
        type: "uint256",
      },
    ],
    name: "EmptySigner",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySizeDeltaInTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyTokenTranferGasLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyWithdrawal",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyWithdrawalAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "EndOfOracleSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
    ],
    name: "HasRealtimeFeedId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "collateralDeltaAmount",
        type: "int256",
      },
    ],
    name: "InsufficientCollateralAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "remainingCollateralUsd",
        type: "int256",
      },
    ],
    name: "InsufficientCollateralUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minExecutionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "estimatedGasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAdditionalGasForExecution",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minHandleErrorGas",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionGasForErrorHandling",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remainingCostUsd",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "step",
        type: "string",
      },
    ],
    name: "InsufficientFundsToPayForCosts",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minHandleExecutionErrorGas",
        type: "uint256",
      },
    ],
    name: "InsufficientHandleExecutionErrorGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "InsufficientMarketTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOutputAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientOutputAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientPoolAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reservedUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxReservedUsd",
        type: "uint256",
      },
    ],
    name: "InsufficientReserve",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reservedUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxReservedUsd",
        type: "uint256",
      },
    ],
    name: "InsufficientReserveForOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOutputAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientSwapOutputAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wntAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
    ],
    name: "InsufficientWntAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wntAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
    ],
    name: "InsufficientWntAmountForExecutionFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
    ],
    name: "InvalidAdl",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "InvalidBaseKey",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBlockNumber",
        type: "uint256",
      },
    ],
    name: "InvalidBlockNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "largestMinBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "smallestMaxBlockNumber",
        type: "uint256",
      },
    ],
    name: "InvalidBlockRangeSet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimAffiliateRewardsInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeKeysLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimCollateralInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimFeesInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimFundingFeesInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimUiFeesInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidCollateralTokenForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
    ],
    name: "InvalidDecreaseOrderSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "decreasePositionSwapType",
        type: "uint256",
      },
    ],
    name: "InvalidDecreasePositionSwapType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidFeeFactor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "InvalidFeeReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "InvalidFeedPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalGlpAmountToRedeem",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGlpAmount",
        type: "uint256",
      },
    ],
    name: "InvalidGlpAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "InvalidKeeperForFrozenOrder",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "migrationLongToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketLongToken",
        type: "address",
      },
    ],
    name: "InvalidLongTokenForMigration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedMinBalance",
        type: "uint256",
      },
    ],
    name: "InvalidMarketTokenBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimableFundingFeeAmount",
        type: "uint256",
      },
    ],
    name: "InvalidMarketTokenBalanceForClaimableFunding",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "InvalidMarketTokenBalanceForCollateralAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
    ],
    name: "InvalidMedianMinMaxPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minMarketTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedMinMarketTokens",
        type: "uint256",
      },
    ],
    name: "InvalidMinMarketTokensForFirstDeposit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOracleBlockNumber",
        type: "uint256",
      },
    ],
    name: "InvalidMinMaxBlockNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "InvalidMinMaxForPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidOraclePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "InvalidOracleSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryPriceMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPriceMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "triggerPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "orderType",
        type: "uint256",
      },
    ],
    name: "InvalidOrderPrices",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedTokenOut",
        type: "address",
      },
    ],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "InvalidPoolValueForDeposit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "InvalidPoolValueForWithdrawal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sizeInTokens",
        type: "uint256",
      },
    ],
    name: "InvalidPositionSizeValues",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidPrimaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int192",
        name: "bid",
        type: "int192",
      },
      {
        internalType: "int192",
        name: "ask",
        type: "int192",
      },
    ],
    name: "InvalidRealtimeBidAsk",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "expectedBlockHash",
        type: "bytes32",
      },
    ],
    name: "InvalidRealtimeBlockHash",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "expectedFeedId",
        type: "bytes32",
      },
    ],
    name: "InvalidRealtimeFeedId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
    ],
    name: "InvalidRealtimeFeedLengths",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int192",
        name: "bid",
        type: "int192",
      },
      {
        internalType: "int192",
        name: "ask",
        type: "int192",
      },
    ],
    name: "InvalidRealtimePrices",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedReceiver",
        type: "address",
      },
    ],
    name: "InvalidReceiverForFirstDeposit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedReceiver",
        type: "address",
      },
    ],
    name: "InvalidReceiverForSubaccountOrder",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "migrationShortToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketShortToken",
        type: "address",
      },
    ],
    name: "InvalidShortTokenForMigration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoveredSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
    ],
    name: "InvalidSignerMinMaxPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
    ],
    name: "InvalidSizeDeltaForAdl",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidSwapMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedOutputToken",
        type: "address",
      },
    ],
    name: "InvalidSwapOutputToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timelockDelay",
        type: "uint256",
      },
    ],
    name: "InvalidTimelockDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidTokenIn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uiFeeFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxUiFeeFactor",
        type: "uint256",
      },
    ],
    name: "InvalidUiFeeFactor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "int256",
        name: "remainingCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsdForLeverage",
        type: "int256",
      },
    ],
    name: "LiquidatablePosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "existingMarketAddress",
        type: "address",
      },
    ],
    name: "MarketAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "MarketNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "MaskIndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callbackGasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCallbackGasLimit",
        type: "uint256",
      },
    ],
    name: "MaxCallbackGasLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "openInterest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOpenInterest",
        type: "uint256",
      },
    ],
    name: "MaxOpenInterestExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleSigners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOracleSigners",
        type: "uint256",
      },
    ],
    name: "MaxOracleSigners",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPoolAmount",
        type: "uint256",
      },
    ],
    name: "MaxPoolAmountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPoolAmountForDeposit",
        type: "uint256",
      },
    ],
    name: "MaxPoolAmountForDepositExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "MaxPriceAgeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevPrice",
        type: "uint256",
      },
    ],
    name: "MaxPricesNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRefPriceDeviationFactor",
        type: "uint256",
      },
    ],
    name: "MaxRefPriceDeviationExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signerIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSignerIndex",
        type: "uint256",
      },
    ],
    name: "MaxSignerIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "subaccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCount",
        type: "uint256",
      },
    ],
    name: "MaxSubaccountActionCountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapPathLengh",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSwapPathLength",
        type: "uint256",
      },
    ],
    name: "MaxSwapPathLengthExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timelockDelay",
        type: "uint256",
      },
    ],
    name: "MaxTimelockDelayExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "MinLongTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "MinMarketTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleSigners",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOracleSigners",
        type: "uint256",
      },
    ],
    name: "MinOracleSigners",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPositionSizeUsd",
        type: "uint256",
      },
    ],
    name: "MinPositionSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevPrice",
        type: "uint256",
      },
    ],
    name: "MinPricesNotSorted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "MinShortTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "executionPrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "NegativeExecutionPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensWithPricesLength",
        type: "uint256",
      },
    ],
    name: "NonEmptyTokensWithPrices",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "OpenInterestCannotBeUpdatedForSwapOnlyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "minOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "maxOracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumberNotWithinRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "oracleBlockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "expectedBlockNumber",
        type: "uint256",
      },
    ],
    name: "OracleBlockNumbersAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderAlreadyFrozen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "OrderNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
    ],
    name: "OrderNotFulfillableAtAcceptablePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderType",
        type: "uint256",
      },
    ],
    name: "OrderNotUpdatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderType",
        type: "uint256",
      },
    ],
    name: "OrderTypeCannotBeCreated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactor",
        type: "uint256",
      },
    ],
    name: "PnlFactorExceededForLongs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactor",
        type: "uint256",
      },
    ],
    name: "PnlFactorExceededForShorts",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "minPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "PnlOvercorrected",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "PositionNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "int256",
        name: "remainingCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsdForLeverage",
        type: "int256",
      },
    ],
    name: "PositionShouldNotBeLiquidated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
    ],
    name: "PriceAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "heartbeatDuration",
        type: "uint256",
      },
    ],
    name: "PriceFeedNotUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "PriceImpactLargerThanOrderSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "RealtimeMaxPriceAgeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationAge",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "requestType",
        type: "string",
      },
    ],
    name: "RequestNotYetCancellable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "SelfTransferNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signalTime",
        type: "uint256",
      },
    ],
    name: "SignalTimeNotYetPassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "subaccount",
        type: "address",
      },
    ],
    name: "SubaccountNotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountAfterFees",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "negativeImpactAmount",
        type: "int256",
      },
    ],
    name: "SwapPriceImpactExceedsAmountIn",
    type: "error",
  },
  {
    inputs: [],
    name: "ThereMustBeAtLeastOneRoleAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ThereMustBeAtLeastOneTimelockMultiSig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetBorrowingFactorEmptyPoolUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetCachedTokenPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetFundingFactorEmptyOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetOppositeToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "estimatedRemainingCollateralUsd",
        type: "int256",
      },
    ],
    name: "UnableToWithdrawCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionBorrowingFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeBorrowingFactor",
        type: "uint256",
      },
    ],
    name: "UnexpectedBorrowingFactor",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "UnexpectedPoolValue",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedPositionState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnexpectedTokenForVirtualInventory",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleBlockNumberType",
        type: "uint256",
      },
    ],
    name: "UnsupportedOracleBlockNumberType",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedOrderType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "longOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsLongOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "poolUsd",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsPoolValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "shortOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsShortOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "WithdrawalNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GmxDeposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct GmxDeposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GmxDeposit.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct GmxDeposit.DepositProps",
        name: "props",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct GmxMarket.MarketProps",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct GmxPrice.PriceProps",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct GmxPrice.PriceProps",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct GmxPrice.PriceProps",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "getMarketTokenPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "poolValue",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "longPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shortPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "netPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowingFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeePoolFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "impactPoolAmount",
            type: "uint256",
          },
        ],
        internalType: "struct GmxMarketPoolValueInfo.PoolValueInfoProps",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct GmxPrice.PriceProps",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct GmxPrice.PriceProps",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct GmxPrice.PriceProps",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct GmxMarket.MarketPrices",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "getPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct GmxPrice.PriceProps",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct GmxPrice.PriceProps",
        name: "",
        type: "tuple",
      },
    ],
    name: "getSwapPriceImpact",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxDataStore",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GmxWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct GmxWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GmxWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct GmxWithdrawal.WithdrawalProps",
        name: "props",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "longPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_marketPrice",
        type: "int256",
      },
    ],
    name: "setMarketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_shortPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_longPnlToPoolFactor",
        type: "int256",
      },
    ],
    name: "setPnlToPoolFactors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bea806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635d5c6efe116100665780635d5c6efe14610127578063971de27d14610152578063be07973814610165578063c495910f14610178578063ceeea3bf1461018157600080fd5b8063095ce6c5146100a35780631485d297146100cd57806320e376b2146100ed5780634147e0561461010357806345a153881461011e575b600080fd5b6100b66100b1366004610526565b6101a1565b6040516100c49291906106ad565b60405180910390f35b6100e06100db3660046106d0565b610270565b6040516100c49190610909565b6100f660005481565b6040516100c4919061091a565b61011c610111366004610928565b600091909155600155565b005b6100f660025481565b61014461013536600461094a565b60008097509795505050505050565b6040516100c49291906109db565b6100f6610160366004610a54565b61027e565b61011c610173366004610acf565b600255565b6100f660015481565b61019461018f3660046106d0565b61029b565b6040516100c49190610ba3565b600061020060405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051806101600160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815250905060025481925092505097509795505050505050565b6102786102a3565b92915050565b60008261028d57600054610291565b6001545b9695505050505050565b61027861034d565b604080516101808101909152600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840192909252610140830181905261016083015281905b81526020016103356040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b604080516101408101909152600060608083018281526080840183905260a0840183905260c0840183905260e0840192909252610100830181905261012083015281906102f7565b60006001600160a01b038216610278565b600061027882610395565b6103ba816103a6565b81146103c557600080fd5b50565b8035610278816103b1565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561040f5761040f6103d3565b6040525050565b600061042160405190565b905061042d82826103e9565b919050565b6103ba81610395565b803561027881610432565b60006080828403121561045b5761045b600080fd5b6104656080610416565b90506000610473848461043b565b82525060206104848484830161043b565b60208301525060406104988482850161043b565b60408301525060606104ac8482850161043b565b60608301525092915050565b806103ba565b8035610278816104b8565b6000604082840312156104de576104de600080fd5b6104e86040610416565b905060006104f684846104be565b8252506020610507848483016104be565b60208301525092915050565b8015156103ba565b803561027881610513565b60008060008060008060006101a0888a03121561054557610545600080fd5b60006105518a8a6103c8565b97505060206105628a828b01610446565b96505060a06105738a828b016104c9565b95505060e06105848a828b016104c9565b9450506101206105968a828b016104c9565b9350506101606105a88a828b016104be565b9250506101806105ba8a828b0161051b565b91505092959891949750929550565b805b82525050565b80516101608301906105e384826105c9565b5060208201516105f660208501826105c9565b50604082015161060960408501826105c9565b50606082015161061c60608501826105c9565b50608082015161062f60808501826105c9565b5060a082015161064260a08501826105c9565b5060c082015161065560c08501826105c9565b5060e082015161066860e08501826105c9565b5061010082015161067d6101008501826105c9565b506101208201516106926101208501826105c9565b506101408201516106a76101408501826105c9565b50505050565b61018081016106bc82856105c9565b6106c960208301846105d1565b9392505050565b600080604083850312156106e6576106e6600080fd5b60006106f285856103c8565b9250506020610703858286016104be565b9150509250929050565b6105cb81610395565b6000610722838361070d565b505060200190565b6000610734825190565b80845260209384019383018060005b838110156107685781516107578882610716565b975060208301925050600101610743565b509495945050505050565b8051600090610120840190610788858261070d565b50602083015161079b602086018261070d565b5060408301516107ae604086018261070d565b5060608301516107c1606086018261070d565b5060808301516107d4608086018261070d565b5060a08301516107e760a086018261070d565b5060c08301516107fa60c086018261070d565b5060e083015184820360e0860152610812828261072a565b91505061010083015184820361010086015261082e828261072a565b95945050505050565b805160c083019061084884826105c9565b50602082015161085b60208501826105c9565b50604082015161086e60408501826105c9565b50606082015161088160608501826105c9565b50608082015161089460808501826105c9565b5060a08201516106a760a08501826105c9565b8015156105cb565b805160208301906106a784826108a7565b8051610100808452600091908401906108d98282610773565b91505060208301516108ee6020860182610837565b50604083015161090160e08601826108af565b509392505050565b602080825281016106c981846108c0565b6020810161027882846105c9565b6000806040838503121561093e5761093e600080fd5b60006106f285856104be565b6000806000806000806000610120888a03121561096957610969600080fd5b60006109758a8a6103c8565b97505060206109868a828b0161043b565b96505060406109978a828b0161043b565b95505060606109a88a828b0161043b565b94505060806109b98a828b016104be565b93505060a06109ca8a828b016104c9565b92505060e06105ba8a828b016104c9565b604081016109e982856105c9565b6106c960208301846105c9565b600060c08284031215610a0b57610a0b600080fd5b610a156060610416565b90506000610a2384846104c9565b8252506040610a34848483016104c9565b6020830152506080610a48848285016104c9565b60408301525092915050565b60008060008060006101408688031215610a7057610a70600080fd5b6000610a7c88886103c8565b9550506020610a8d8882890161043b565b9450506040610a9e888289016109f6565b935050610100610ab08882890161051b565b925050610120610ac28882890161051b565b9150509295509295909350565b600060208284031215610ae457610ae4600080fd5b6000610af084846104be565b949350505050565b805160009060e0840190610b0c858261070d565b506020830151610b1f602086018261070d565b506040830151610b32604086018261070d565b506060830151610b45606086018261070d565b506080830151610b58608086018261070d565b5060a083015184820360a0860152610b70828261072a565b91505060c083015184820360c086015261082e828261072a565b8051610100808452600091908401906108d98282610af8565b602080825281016106c98184610b8a56fea2646970667358221220307f78a7127aa1c112b11da9d20bdbf3da6d33e75875ff6c74c4e0fa1af0cff564736f6c63430008090033";

type TestGmxReaderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestGmxReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestGmxReader__factory extends ContractFactory {
  constructor(...args: TestGmxReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestGmxReader> {
    return super.deploy(overrides || {}) as Promise<TestGmxReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestGmxReader {
    return super.attach(address) as TestGmxReader;
  }
  override connect(signer: Signer): TestGmxReader__factory {
    return super.connect(signer) as TestGmxReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestGmxReaderInterface {
    return new utils.Interface(_abi) as TestGmxReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestGmxReader {
    return new Contract(address, _abi, signerOrProvider) as TestGmxReader;
  }
}
