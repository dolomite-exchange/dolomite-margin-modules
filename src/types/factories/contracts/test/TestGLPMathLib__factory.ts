/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestGLPMathLib,
  TestGLPMathLibInterface,
} from "../../../contracts/test/TestGLPMathLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gmxRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBasisPoints",
        type: "uint256",
      },
    ],
    name: "GLPMathLibApplyFeesToAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "GLPMathLibBasisPointsDivisor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdgAmount",
        type: "uint256",
      },
    ],
    name: "GLPMathLibGetGlpMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "glpAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_usdgAmount",
        type: "uint256",
      },
    ],
    name: "GLPMathLibGetGlpRedemptionAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
    ],
    name: "GLPMathLibGetUsdgAmountForBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "usdgAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_glpAmount",
        type: "uint256",
      },
    ],
    name: "GLPMathLibGetUsdgAmountForSell",
    outputs: [
      {
        internalType: "uint256",
        name: "usdgAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GLPMathLibPricePrecision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "GMX_REGISTRY",
    outputs: [
      {
        internalType: "contract IGmxRegistryV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620013343803806200133483398101604081905261003191610077565b6001600160a01b03166080526100a0565b60006001600160a01b0382165b92915050565b61005e81610042565b811461006957600080fd5b50565b805161004f81610055565b60006020828403121561008c5761008c600080fd5b6000610098848461006c565b949350505050565b60805161125d620000d76000396000818160fc015281816101580152818161018a015281816101c90152610266015261125d6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a8256b331161005b578063a8256b33146100ef578063ba1fc25e146100f7578063bcd06ea61461012b578063ef7989381461013e57600080fd5b80630b0e13031461008d57806347ff0ed6146100b65780635e810b3b146100c95780637a0845b1146100dc575b600080fd5b6100a061009b366004610e3f565b610151565b6040516100ad9190610e70565b60405180910390f35b6100a06100c4366004610e3f565b610183565b6100a06100d7366004610e7e565b6101af565b6100a06100ea366004610ee0565b6101c2565b6127106100a0565b61011e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100ad9190610f21565b6100a0610139366004610ee0565b61025f565b6c0c9f2c9cd04674edea400000006100a0565b600061017d7f0000000000000000000000000000000000000000000000000000000000000000836102fc565b92915050565b600061017d7f000000000000000000000000000000000000000000000000000000000000000083610501565b60006101bb838361070a565b9392505050565b60006101bb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3b3453e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022057600080fd5b505afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610f43565b848461072d565b60006101bb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3b3453e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102bd57600080fd5b505afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190610f43565b8484610b2a565b600080836001600160a01b031663fa6db1bc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033857600080fd5b505afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103709190610f43565b6001600160a01b03166368a0a3e060006040518263ffffffff1660e01b815260040161039c9190610f6c565b60206040518083038186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610f85565b90506000846001600160a01b03166378a207ee6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190610f43565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049957600080fd5b505afa1580156104ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190610f85565b9050600081116104e3576104e3610fa6565b806104ee8386610fd2565b6104f89190611007565b95945050505050565b600080836001600160a01b031663fa6db1bc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053d57600080fd5b505afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190610f43565b6001600160a01b03166368a0a3e060016040518263ffffffff1660e01b81526004016105a19190610f6c565b60206040518083038186803b1580156105b957600080fd5b505afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190610f85565b90506000846001600160a01b03166378a207ee6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062e57600080fd5b505afa158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190610f43565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069e57600080fd5b505afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610f85565b90508115806106e3575080155b61070157816106f28286610fd2565b6106fc9190611007565b6104f8565b50919392505050565b6000612710610719838261101b565b6107239085610fd2565b6101bb9190611007565b600061076a600083116923a62826b0ba342634b160b11b7f496e70757420616d6f756e74206d757374206265206774207468616e20300000610d2a565b6040516340d3096b60e11b81526000906001600160a01b038616906381a612d69061079990879060040161103b565b60206040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610f85565b90506000856001600160a01b031663f5b91b7b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561082657600080fd5b505afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e9190611054565b905060006001600160a01b03871663421528736c0c9f2c9cd04674edea400000006108898689610fd2565b6108939190611007565b88856040518463ffffffff1660e01b81526004016108b393929190611075565b60206040518083038186803b1580156108cb57600080fd5b505afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190610f85565b90506000876001600160a01b031663c7e074c388848b6001600160a01b0316634d47b3046040518163ffffffff1660e01b815260040160206040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190610f85565b8c6001600160a01b0316637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109c257600080fd5b505afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610f85565b60016040518663ffffffff1660e01b8152600401610a1c95949392919061109d565b60206040518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190610f85565b90506000610a7a878361070a565b90506001600160a01b03891663421528736c0c9f2c9cd04674edea40000000610aa38885610fd2565b610aad9190611007565b8a876040518463ffffffff1660e01b8152600401610acd93929190611075565b60206040518083038186803b158015610ae557600080fd5b505afa158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1d9190610f85565b9998505050505050505050565b600080846001600160a01b0316632c668ec185856040518363ffffffff1660e01b8152600401610b5b9291906110df565b60206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190610f85565b90506000856001600160a01b031663c7e074c38686896001600160a01b0316634d47b3046040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf957600080fd5b505afa158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c319190610f85565b8a6001600160a01b0316637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190610f85565b60006040518663ffffffff1660e01b8152600401610cc495949392919061109d565b60206040518083038186803b158015610cdc57600080fd5b505afa158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190610f85565b9050610d20828261070a565b9695505050505050565b82610d8857610d3882610d8d565b6101d160f51b610d4783610d8d565b604051602001610d599392919061115c565b60408051601f198184030181529082905262461bcd60e51b8252610d7f916004016111b6565b60405180910390fd5b505050565b6060600082604051602001610da291906111cd565b60408051601f19818403018152919052905060205b8015610e0d5780610dc7816111e2565b915050818181518110610ddc57610ddc6111f9565b01602001516001600160f81b03191615610e08576000610dfd82600161120f565b835250909392505050565b610db7565b505060408051600081526020810190915292915050565b805b8114610e3157600080fd5b50565b803561017d81610e24565b600060208284031215610e5457610e54600080fd5b6000610e608484610e34565b949350505050565b805b82525050565b6020810161017d8284610e68565b60008060408385031215610e9457610e94600080fd5b6000610ea08585610e34565b9250506020610eb185828601610e34565b9150509250929050565b60006001600160a01b03821661017d565b610e2681610ebb565b803561017d81610ecc565b60008060408385031215610ef657610ef6600080fd5b6000610ea08585610ed5565b600061017d82610ebb565b600061017d82610f02565b610e6a81610f0d565b6020810161017d8284610f18565b610e2681610f02565b805161017d81610f2f565b600060208284031215610f5857610f58600080fd5b6000610e608484610f38565b801515610e6a565b6020810161017d8284610f64565b805161017d81610e24565b600060208284031215610f9a57610f9a600080fd5b6000610e608484610f7a565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610fec57610fec610fbc565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261101657611016610ff1565b500490565b60008282101561102d5761102d610fbc565b500390565b610e6a81610ebb565b6020810161017d8284611032565b805161017d81610ecc565b60006020828403121561106957611069600080fd5b6000610e608484611049565b606081016110838286610e68565b6110906020830185611032565b610e606040830184611032565b60a081016110ab8288611032565b6110b86020830187610e68565b6110c56040830186610e68565b6110d26060830185610e68565b610d206080830184610f64565b604081016110ed8285611032565b6101bb6020830184610e68565b60005b838110156111155781810151838201526020016110fd565b83811115611124576000848401525b50505050565b6000611134825190565b6111428185602086016110fa565b9290920192915050565b6001600160f01b03198116610e6a565b6000611168828661112a565b9150611174828561114c565b6002820191506104f8828461112a565b600061118e825190565b8084526020840193506111a58185602086016110fa565b601f01601f19169290920192915050565b602080825281016101bb8184611184565b80610e6a565b60006111d982846111c7565b50602001919050565b6000816111f1576111f1610fbc565b506000190190565b634e487b7160e01b600052603260045260246000fd5b6000821982111561122257611222610fbc565b50019056fea264697066735822122047f34d1e51b8775f865dcb495818f07a9ef2d7ae76011720ce0d3d89ed71661364736f6c63430008090033";

type TestGLPMathLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestGLPMathLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestGLPMathLib__factory extends ContractFactory {
  constructor(...args: TestGLPMathLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gmxRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestGLPMathLib> {
    return super.deploy(
      _gmxRegistry,
      overrides || {}
    ) as Promise<TestGLPMathLib>;
  }
  override getDeployTransaction(
    _gmxRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_gmxRegistry, overrides || {});
  }
  override attach(address: string): TestGLPMathLib {
    return super.attach(address) as TestGLPMathLib;
  }
  override connect(signer: Signer): TestGLPMathLib__factory {
    return super.connect(signer) as TestGLPMathLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestGLPMathLibInterface {
    return new utils.Interface(_abi) as TestGLPMathLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestGLPMathLib {
    return new Contract(address, _abi, signerOrProvider) as TestGLPMathLib;
  }
}
