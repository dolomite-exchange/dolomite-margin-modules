/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBaseRegistry,
  TestBaseRegistryInterface,
} from "../../../contracts/test/TestBaseRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "DolomiteRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dolomiteRegistry",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    name: "ownerSetDolomiteRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610acf806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315c14a4a14610051578063bd12584f1461006f578063c4d66de814610077578063ffd1271b1461008c575b600080fd5b61005961009f565b6040516100669190610752565b60405180910390f35b6100596100d8565b61008a610085366004610793565b610108565b005b61008a61009a366004610793565b6101e2565b60006100d36100cf60017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa176107d2565b5490565b905090565b60006100d36100cf60017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a6107d2565b600054610100900460ff16158080156101285750600054600160ff909116105b806101425750303b158015610142575060005460ff166001145b6101675760405162461bcd60e51b815260040161015e906107e9565b60405180910390fd5b6000805460ff19166001179055801561018a576000805461ff0019166101001790555b610193826102b4565b80156101de576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906101d59060019061084f565b60405180910390a15b5050565b336102af6101ee61009f565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022657600080fd5b505afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610868565b6001600160a01b0316826001600160a01b0316147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d697465008461039e565b6101de825b6102f96001600160a01b03821615156b42617365526567697374727960a01b7f496e76616c696420646f6c6f6d69746552656769737472790000000000000000610410565b600061031c82632f32699960e01b60405180602001604052806000815250610444565b9050808060200190518101906103329190610868565b5061036661036160017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a6107d2565b839055565b6040516001600160a01b038316907fd4968e6ff4b2df084b2b71aa90bc2137eee816091d7f1c17f0b66a602f9dbaeb90600090a25050565b8361040a576103ac8361050f565b6101d160f51b6103bb8461050f565b61080f60f21b6103ca856105aa565b6040516103e4959493929190601f60f91b906020016108f7565b60408051601f198184030181529082905262461bcd60e51b825261015e91600401610987565b50505050565b8261043f5761041e8261050f565b6101d160f51b61042d8361050f565b6040516020016103e49392919061099f565b505050565b6060600080856001600160a01b031685856040516020016104669291906109d7565b60408051601f1981840301815290829052610480916109f3565b600060405180830381855afa9150503d80600081146104bb576040519150601f19603f3d011682016040523d82523d6000602084013e6104c0565b606091505b50915091506105068280156104d6575060008251115b6c2b30b634b230ba34b7b72634b160991b7410d85b1b081d1bc81d185c99d95d0819985a5b1959605a1b8961039e565b95945050505050565b60606000826040516020016105249190610a05565b60408051601f19818403018152919052905060205b801561058f578061054981610a1a565b91505081818151811061055e5761055e610a31565b01602001516001600160f81b0319161561058a57600061057f826001610a47565b835250909392505050565b610539565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b816000815181106105f0576105f0610a31565b60200101906001600160f81b031916908160001a905350607860f81b8160018151811061061f5761061f610a31565b60200101906001600160f81b031916908160001a90535060005b60148110156105a257600061064f826002610a5f565b905061065d600f85166106f0565b836106698360296107d2565b8151811061067957610679610a31565b60200101906001600160f81b031916908160001a905350600484901c93506106a3600f85166106f0565b836106af8360286107d2565b815181106106bf576106bf610a31565b60200101906001600160f81b031916908160001a9053505060049290921c91806106e881610a7e565b915050610639565b6000600a82101561070f57610706603083610a47565b60f81b92915050565b610706605783610a47565b60006001600160a01b0382165b92915050565b60006107278261071a565b60006107278261072d565b61074c81610738565b82525050565b602081016107278284610743565b60006001600160a01b038216610727565b61077a81610760565b811461078557600080fd5b50565b803561072781610771565b6000602082840312156107a8576107a8600080fd5b60006107b48484610788565b949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107e4576107e46107bc565b500390565b6020808252810161072781602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b600060ff8216610727565b61074c8161083b565b602081016107278284610846565b805161072781610771565b60006020828403121561087d5761087d600080fd5b60006107b4848461085d565b60005b838110156108a457818101518382015260200161088c565b8381111561040a5750506000910152565b60006108bf825190565b6108cd818560208601610889565b9290920192915050565b6001600160f01b0319811661074c565b6001600160f81b0319811661074c565b600061090382896108b5565b915061090f82886108d7565b60028201915061091f82876108b5565b915061092b82866108d7565b60028201915061093b82856108b5565b915061094782846108e7565b506001019695505050505050565b600061095f825190565b808452602084019350610976818560208601610889565b601f01601f19169290920192915050565b602080825281016109988184610955565b9392505050565b60006109ab82866108b5565b91506109b782856108d7565b60028201915061050682846108b5565b6001600160e01b0319811661074c565b60006109e382856109c7565b6004820191506107b482846108b5565b600061099882846108b5565b8061074c565b6000610a1182846109ff565b50602001919050565b600081610a2957610a296107bc565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610a5a57610a5a6107bc565b500190565b6000816000190483118215151615610a7957610a796107bc565b500290565b6000600019821415610a9257610a926107bc565b506001019056fea2646970667358221220a5e2c25dfed5b13b151c187f93cec4577719488229a1e6ef99336f3775b041a264736f6c63430008090033";

type TestBaseRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBaseRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBaseRegistry__factory extends ContractFactory {
  constructor(...args: TestBaseRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestBaseRegistry> {
    return super.deploy(overrides || {}) as Promise<TestBaseRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestBaseRegistry {
    return super.attach(address) as TestBaseRegistry;
  }
  override connect(signer: Signer): TestBaseRegistry__factory {
    return super.connect(signer) as TestBaseRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBaseRegistryInterface {
    return new utils.Interface(_abi) as TestBaseRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBaseRegistry {
    return new Contract(address, _abi, signerOrProvider) as TestBaseRegistry;
  }
}
