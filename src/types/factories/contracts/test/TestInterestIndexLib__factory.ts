/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestInterestIndexLib,
  TestInterestIndexLibInterface,
} from "../../../contracts/test/TestInterestIndexLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "_amountPar",
        type: "tuple",
      },
    ],
    name: "parToWei",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct IDolomiteStructs.Wei",
        name: "_amountWei",
        type: "tuple",
      },
    ],
    name: "weiToPar",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "sign",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct IDolomiteStructs.Par",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cc5380380610cc583398101604081905261002f91610075565b6001600160a01b031660805261009e565b60006001600160a01b0382165b92915050565b61005c81610040565b811461006757600080fd5b50565b805161004d81610053565b60006020828403121561008a5761008a600080fd5b6000610096848461006a565b949350505050565b608051610c006100c560003960008181604b0152818160dc01526101320152610c006000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315c14a4a146100465780637703081414610083578063be447884146100a3575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405161007a91906106bd565b60405180910390f35b610096610091366004610701565b6100c3565b60405161007a9190610770565b6100b66100b1366004610701565b610119565b60405161007a91906107b1565b60408051808201909152600080825260208201526101107f00000000000000000000000000000000000000000000000000000000000000008461010b36869003860186610895565b610166565b90505b92915050565b60408051808201909152600080825260208201526101107f000000000000000000000000000000000000000000000000000000000000000084610161368690038601866108f4565b6102c2565b6040805180820190915260008082526020820152604051632b75425960e11b81526000906001600160a01b038616906356ea84b2906101a9908790600401610915565b60606040518083038186803b1580156101c157600080fd5b505afa1580156101d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f991906109b2565b83519091501561025957604051806040016040528060011515815260200161024e83602001516001600160601b0316670de0b6b3a764000087602001516001600160801b03166103da9092919063ffffffff16565b8152509150506102bb565b60405180604001604052806000151581526020016102ac6102a784600001516001600160601b0316670de0b6b3a764000088602001516001600160801b03166103da9092919063ffffffff16565b610426565b6001600160801b031690529150505b9392505050565b6040805180820190915260008082526020820152604051632b75425960e11b81526000906001600160a01b038616906356ea84b290610305908790600401610915565b60606040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906109b2565b8351909150156103a45760405180604001604052806001151581526020016102ac6102a7670de0b6b3a764000085602001516001600160601b031688602001516103da9092919063ffffffff16565b60408051808201909152600081528151602085810151908301916102ac916102a791670de0b6b3a7640000906001600160601b03165b60008315806103e7575082155b156103f4575060006102bb565b816104006002826109ff565b61040a8587610a13565b6104149190610a32565b61041e91906109ff565b949350505050565b6000816101136001600160801b038216821471088ded8dedad2e8ca9ac2e4ced2dc9ac2e8d60731b750aadce6c2ccca40c6c2e6e840e8de40ead2dce86264760531b84836104de57610477836104e4565b6101d160f51b610486846104e4565b61080f60f21b6104958561057b565b6040516104af959493929190601f60f91b90602001610ab8565b60408051601f198184030181529082905262461bcd60e51b82526104d591600401610b48565b60405180910390fd5b50505050565b60606000826040516020016104f99190610b59565b60408051601f19818403018152919052905060205b8015610564578061051e81610b6e565b91505081818151811061053357610533610b85565b01602001516001600160f81b0319161561055f576000610554826001610a32565b835250909392505050565b61050e565b505060408051600081526020810190915292915050565b60608161059f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156105c957806105b381610b9b565b91506105c29050600a836109ff565b91506105a3565b60008167ffffffffffffffff8111156105e4576105e46107bf565b6040519080825280601f01601f19166020018201604052801561060e576020820181803683370190505b508593509050815b801561067e578061062681610b6e565b91506106359050600a85610bb6565b610640906030610a32565b60f81b82828151811061065557610655610b85565b60200101906001600160f81b031916908160001a905350610677600a856109ff565b9350610616565b50949350505050565b60006001600160a01b038216610113565b600061011382610687565b600061011382610698565b6106b7816106a3565b82525050565b6020810161011382846106ae565b805b81146106d857600080fd5b50565b8035610113816106cb565b6000604082840312156106fb576106fb600080fd5b50919050565b6000806060838503121561071757610717600080fd5b600061072385856106db565b9250506020610734858286016106e6565b9150509250929050565b8015156106b7565b806106b7565b8051604083019061075d848261073e565b5060208201516104de6020850182610746565b60408101610113828461074c565b6001600160801b0381166106b7565b8051604083019061079e848261073e565b5060208201516104de602085018261077e565b60408101610113828461078d565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156107fb576107fb6107bf565b6040525050565b600061080d60405190565b905061081982826107d5565b919050565b8015156106cd565b80356101138161081e565b6001600160801b0381166106cd565b803561011381610831565b60006040828403121561086057610860600080fd5b61086a6040610802565b905060006108788484610826565b825250602061088984848301610840565b60208301525092915050565b6000604082840312156108aa576108aa600080fd5b600061041e848461084b565b6000604082840312156108cb576108cb600080fd5b6108d56040610802565b905060006108e38484610826565b8252506020610889848483016106db565b60006040828403121561090957610909600080fd5b600061041e84846108b6565b602081016101138284610746565b6001600160601b0381166106cd565b805161011381610923565b63ffffffff81166106cd565b80516101138161093d565b60006060828403121561096957610969600080fd5b6109736060610802565b905060006109818484610932565b825250602061099284848301610932565b60208301525060406109a684828501610949565b60408301525092915050565b6000606082840312156109c7576109c7600080fd5b600061041e8484610954565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610a0e57610a0e6109d3565b500490565b6000816000190483118215151615610a2d57610a2d6109e9565b500290565b60008219821115610a4557610a456109e9565b500190565b60005b83811015610a65578181015183820152602001610a4d565b838111156104de5750506000910152565b6000610a80825190565b610a8e818560208601610a4a565b9290920192915050565b6001600160f01b031981166106b7565b6001600160f81b031981166106b7565b6000610ac48289610a76565b9150610ad08288610a98565b600282019150610ae08287610a76565b9150610aec8286610a98565b600282019150610afc8285610a76565b9150610b088284610aa8565b506001019695505050505050565b6000610b20825190565b808452602084019350610b37818560208601610a4a565b601f01601f19169290920192915050565b602080825281016101108184610b16565b6000610b658284610746565b50602001919050565b600081610b7d57610b7d6109e9565b506000190190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610baf57610baf6109e9565b5060010190565b600082610bc557610bc56109d3565b50069056fea264697066735822122001f909fb782fcf1c4ba5b2d0c1ace05c98e22d3db4de9a95400055419c9493cf64736f6c63430008090033";

type TestInterestIndexLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestInterestIndexLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestInterestIndexLib__factory extends ContractFactory {
  constructor(...args: TestInterestIndexLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestInterestIndexLib> {
    return super.deploy(
      _dolomiteMargin,
      overrides || {}
    ) as Promise<TestInterestIndexLib>;
  }
  override getDeployTransaction(
    _dolomiteMargin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_dolomiteMargin, overrides || {});
  }
  override attach(address: string): TestInterestIndexLib {
    return super.attach(address) as TestInterestIndexLib;
  }
  override connect(signer: Signer): TestInterestIndexLib__factory {
    return super.connect(signer) as TestInterestIndexLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInterestIndexLibInterface {
    return new utils.Interface(_abi) as TestInterestIndexLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestInterestIndexLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestInterestIndexLib;
  }
}
