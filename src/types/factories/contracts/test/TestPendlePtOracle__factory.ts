/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPendlePtOracle,
  TestPendlePtOracleInterface,
} from "../../../contracts/test/TestPendlePtOracle";

const _abi = [
  {
    inputs: [],
    name: "cardinalityRequired",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "getOracleState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "getPtToAssetRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseCardinalityRequired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oldestObservationSatisfied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_increaseCardinalityRequired",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "_cardinalityRequired",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "_oldestObservationSatisfied",
        type: "bool",
      },
    ],
    name: "setOracleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631371af9614610067578063769019c91461008a578063873e9600146100aa578063a7af7a10146100e9578063abca0eab1461013a578063f6a3b8761461015a575b600080fd5b6000546100749060ff1681565b604051610081919061019b565b60405180910390f35b60005461009d90610100900461ffff1681565b60405161008191906101b9565b6100da6100b8366004610211565b505060005460ff80821692610100830461ffff16926301000000900490911690565b6040516100819392919061024e565b6101386100f73660046102a6565b6000805462ffffff191693151562ffff0019169390931761010061ffff93909316929092029190911763ff0000001916630100000091151591909102179055565b005b61014d610148366004610211565b61016e565b60405161008191906102fc565b600054610074906301000000900460ff1681565b600060405162461bcd60e51b81526004016101889061030a565b60405180910390fd5b8015155b82525050565b602081016101a98284610191565b92915050565b61ffff8116610195565b602081016101a982846101af565b60006001600160a01b0382166101a9565b6101e1816101c7565b81146101ec57600080fd5b50565b80356101a9816101d8565b63ffffffff81166101e1565b80356101a9816101fa565b6000806040838503121561022757610227600080fd5b600061023385856101ef565b925050602061024485828601610206565b9150509250929050565b6060810161025c8286610191565b61026960208301856101af565b6102766040830184610191565b949350505050565b8015156101e1565b80356101a98161027e565b61ffff81166101e1565b80356101a981610291565b6000806000606084860312156102be576102be600080fd5b60006102ca8686610286565b93505060206102db8682870161029b565b92505060406102ec86828701610286565b9150509250925092565b80610195565b602081016101a982846102f6565b602080825281016101a981600f81526e139bdd081a5b5c1b195b595b9d1959608a1b60208201526040019056fea264697066735822122034930f4e68f3bb57ba915bacead8ff1ddc0fc90c525238a14eeade09e1de24a764736f6c63430008090033";

type TestPendlePtOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPendlePtOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPendlePtOracle__factory extends ContractFactory {
  constructor(...args: TestPendlePtOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestPendlePtOracle> {
    return super.deploy(overrides || {}) as Promise<TestPendlePtOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestPendlePtOracle {
    return super.attach(address) as TestPendlePtOracle;
  }
  override connect(signer: Signer): TestPendlePtOracle__factory {
    return super.connect(signer) as TestPendlePtOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPendlePtOracleInterface {
    return new utils.Interface(_abi) as TestPendlePtOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPendlePtOracle {
    return new Contract(address, _abi, signerOrProvider) as TestPendlePtOracle;
  }
}
