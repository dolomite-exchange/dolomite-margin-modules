/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestIsolationModeWrapperTraderV2,
  TestIsolationModeWrapperTraderV2Interface,
} from "../../../contracts/test/TestIsolationModeWrapperTraderV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteMargin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dolomiteRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOLOMITE_MARGIN",
    outputs: [
      {
        internalType: "contract IDolomiteMargin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOLOMITE_REGISTRY",
    outputs: [
      {
        internalType: "contract IDolomiteRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INPUT_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_FACTORY",
    outputs: [
      {
        internalType: "contract IIsolationModeVaultFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "primaryAccountId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "primaryAccountOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "primaryAccountNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAccountOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outputMarket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputMarket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "orderData",
            type: "bytes",
          },
        ],
        internalType:
          "struct IIsolationModeWrapperTraderV2.CreateActionsForWrappingParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "createActionsForWrapping",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDolomiteStructs.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "accountId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "sign",
                type: "bool",
              },
              {
                internalType: "enum IDolomiteStructs.AssetDenomination",
                name: "denomination",
                type: "uint8",
              },
              {
                internalType: "enum IDolomiteStructs.AssetReference",
                name: "ref",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct IDolomiteStructs.AssetAmount",
            name: "amount",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "primaryMarketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondaryMarketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "otherAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "otherAccountId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IDolomiteStructs.ActionArgs[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeOriginator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_orderData",
        type: "bytes",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_desiredInputAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_orderData",
        type: "bytes",
      },
    ],
    name: "getExchangeCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
    ],
    name: "isValidInputToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200224d3803806200224d833981016040819052620000359162000093565b6001600160a01b0391821660805291811660a05290811660c0521660e05262000101565b60006001600160a01b0382165b92915050565b620000778162000059565b81146200008357600080fd5b50565b805162000066816200006c565b60008060008060808587031215620000ae57620000ae600080fd5b6000620000bc878762000086565b9450506020620000cf8782880162000086565b9350506040620000e28782880162000086565b9250506060620000f58782880162000086565b91505092959194509250565b60805160a05160c05160e0516120ab620001a2600039600081816101ac01526108b80152600061018501526000818160a8015281816101dd01528181610240015281816103cd0152818161060a01528181610715015281816107c401528181610af801528181610c2701528181610c940152610d4601526000818160e2015281816102f1015281816103ef01528181610595015261107401526120ab6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639f4a1297116100665780639f4a129714610159578063b189111a14610179578063c6d20c8514610180578063f3835afb146101a7578063fc0c546a146101db57600080fd5b8063103f2907146100a357806315c14a4a146100e05780633a8fdd7d146101065780634e2e5580146101265780637d98ebac14610146575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100d791906114f8565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006100ca565b61011961011436600461163d565b610201565b6040516100d791906116c2565b6101396101343660046116ec565b6102e7565b6040516100d7919061196f565b6101196101543660046119d2565b610585565b61016c610167366004611a7d565b6108b6565b6040516100d79190611a9e565b6001610119565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6101ce7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100d79190611aac565b7f00000000000000000000000000000000000000000000000000000000000000006101ce565b600061023b61020f866108b6565b6000805160206120568339815191527224b73b30b634b21034b7383aba103a37b5b2b760691b886108e8565b6102a07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146000805160206120568339815191527324b73b30b634b21037baba383aba103a37b5b2b760611b876108e8565b6102dc600084116000805160206120568339815191527f496e76616c6964206465736972656420696e70757420616d6f756e7400000000610963565b50815b949350505050565b60606103c061038f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663062bd3e98560e001356040518263ffffffff1660e01b815260040161033f91906116c2565b60206040518083038186803b15801561035757600080fd5b505afa15801561036b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101679190611ac5565b60008051602061205683398151915273125b9d985b1a59081a5b9c1d5d081b585c9ad95d60621b8560e00135610997565b6104c96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663062bd3e98560c001356040518263ffffffff1660e01b815260040161043d91906116c2565b60206040518083038186803b15801561045557600080fd5b505afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190611ac5565b6001600160a01b03161460008051602061205683398151915274125b9d985b1a59081bdd5d1c1d5d081b585c9ad95d605a1b8560c00135610997565b604080516001808252818301909252600091816020015b6104e861144a565b8152602001906001900390816104e0579050509050610561833560e085013560c0860135306101208801356101008901356105276101408b018b611ae6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109c392505050565b8160008151811061057457610574611b45565b602090810291909101015292915050565b6000336105f46001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682147127b7363ca237b637b6b4ba32a6b0b933b4b760711b7f4f6e6c7920446f6c6f6d6974652063616e2063616c6c2066756e6374696f6e00846108e8565b604051635e041b9960e11b81526106d8906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bc08373290610647908e90600401611aac565b60206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611ac5565b6001600160a01b031614156000805160206120568339815191527f496e76616c6964207472616465206f726967696e61746f7200000000000000008c6108e8565b6107106106e4876108b6565b6000805160206120568339815191527224b73b30b634b21034b7383aba103a37b5b2b760691b896108e8565b6107757f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886001600160a01b0316146000805160206120568339815191527324b73b30b634b21037baba383aba103a37b5b2b760611b8a6108e8565b6107a86000861160008051602061205683398151915273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b610963565b6000806107b785870187611b5b565b91509150600061085c8c8c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190611ac5565b868d8d88610ac9565b905061089c838210156000805160206120568339815191527f496e73756666696369656e74206f757470757420616d6f756e740000000000008487610bb2565b6108a78c8c83610c10565b9b9a5050505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b8361095d576108f683610d6d565b6101d160f51b61090584610d6d565b61080f60f21b61091485610e08565b60405161092e959493929190601f60f91b90602001611bf5565b60408051601f198184030181529082905262461bcd60e51b825261095491600401611c53565b60405180910390fd5b50505050565b826109925761097182610d6d565b6101d160f51b61098083610d6d565b60405160200161092e93929190611c64565b505050565b8361095d576109a583610d6d565b6101d160f51b6109b484610d6d565b61080f60f21b61091485610f4e565b6109cb61144a565b6109f7604080516080810190915260008082526020820190815260200160008152602001600081525090565b600019851415610a2e5760408051608081019091526000808252602082019081526020016001815260200160008152509050610a55565b60408051608081019091526000808252602082019081526020016000815260200186905290505b60408051610100810190915280600481526020018a8152602001828152602001898152602001888152602001876001600160a01b03168152602001600081526020018585604051602001610aaa929190611c8c565b60408051601f1981840301815291905290529998505050505050505050565b600080600083511115610af15782806020019051810190610aea9190611cb7565b9050610b45565b6000610b1c7f000000000000000000000000000000000000000000000000000000000000000061105a565b90506000610b298761105a565b905081610b368288611cee565b610b409190611d23565b925050505b6040516310f29c1d60e11b81526001600160a01b038816906321e5383a90610b739030908590600401611d37565b600060405180830381600087803b158015610b8d57600080fd5b505af1158015610ba1573d6000803e3d6000fd5b50929b9a5050505050505050505050565b84610c0957610bc084610d6d565b6101d160f51b610bcf85610d6d565b61080f60f21b610bde86610f4e565b61016160f51b610bed87610f4e565b60405161092e9796959493929190601f60f91b90602001611d52565b5050505050565b6040516316dd241560e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635b74905490610c5e9086908590600401611d37565b600060405180830381600087803b158015610c7857600080fd5b505af1158015610c8c573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b158015610ceb57600080fd5b505afa158015610cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d239190611ac5565b9050610d396001600160a01b0382168584611174565b61095d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484611174565b6060600082604051602001610d829190611dce565b60408051601f19818403018152919052905060205b8015610ded5780610da781611de3565b915050818181518110610dbc57610dbc611b45565b01602001516001600160f81b03191615610de8576000610ddd826001611dfa565b835250909392505050565b610d97565b5060408051600080825260208201909252905b509392505050565b60408051602a80825260608281019093526001600160a01b03841691600091602082018180368337019050509050603060f81b81600081518110610e4e57610e4e611b45565b60200101906001600160f81b031916908160001a905350607860f81b81600181518110610e7d57610e7d611b45565b60200101906001600160f81b031916908160001a90535060005b6014811015610e00576000610ead826002611cee565b9050610ebb600f851661126e565b83610ec7836029611e12565b81518110610ed757610ed7611b45565b60200101906001600160f81b031916908160001a905350600484901c9350610f01600f851661126e565b83610f0d836028611e12565b81518110610f1d57610f1d611b45565b60200101906001600160f81b031916908160001a9053505060049290921c9180610f4681611e29565b915050610e97565b606081610f725750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f9c5780610f8681611e29565b9150610f959050600a83611d23565b9150610f76565b60008167ffffffffffffffff811115610fb757610fb761154a565b6040519080825280601f01601f191660200182016040528015610fe1576020820181803683370190505b508593509050815b80156110515780610ff981611de3565b91506110089050600a85611e44565b611013906030611dfa565b60f81b82828151811061102857611028611b45565b60200101906001600160f81b031916908160001a90535061104a600a85611d23565b9350610fe9565b50949350505050565b604051638fae3be160e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638928378e908290638fae3be1906110b1908790600401611aac565b60206040518083038186803b1580156110c957600080fd5b505afa1580156110dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111019190611cb7565b6040518263ffffffff1660e01b815260040161111d91906116c2565b60206040518083038186803b15801561113557600080fd5b505afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d9190611e8e565b5192915050565b8015806111fc5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906111aa9030908690600401611eaf565b60206040518083038186803b1580156111c257600080fd5b505afa1580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa9190611cb7565b155b6112185760405162461bcd60e51b815260040161095490611f20565b6109928363095ea7b360e01b8484604051602401611237929190611d37565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611298565b6000600a82101561128d57611284603083611dfa565b60f81b92915050565b611284605783611dfa565b60006112ed826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661132a9092919063ffffffff16565b905080516000148061130e57508080602001905181019061130e9190611f43565b6109925760405162461bcd60e51b815260040161095490611fab565b60606113398484600085611343565b90505b9392505050565b6060824710156113655760405162461bcd60e51b815260040161095490611ffe565b600080866001600160a01b03168587604051611381919061200e565b60006040518083038185875af1925050503d80600081146113be576040519150601f19603f3d011682016040523d82523d6000602084013e6113c3565b606091505b50915091506113d4878383876113df565b979650505050505050565b6060831561141b578251611414576001600160a01b0385163b6114145760405162461bcd60e51b81526004016109549061201a565b50816102df565b6102df83838151156114305781518083602001fd5b8060405162461bcd60e51b81526004016109549190611c53565b60408051610100810182526000808252602082015290810161148e604080516080810190915260008082526020820190815260200160008152602001600081525090565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b60006001600160a01b0382165b92915050565b60006114cd826114c0565b60006114cd826114d3565b6114f2816114de565b82525050565b602081016114cd82846114e9565b60006001600160a01b0382166114cd565b61152081611506565b811461152b57600080fd5b50565b80356114cd81611517565b80611520565b80356114cd81611539565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156115865761158661154a565b6040525050565b600061159860405190565b90506115a48282611560565b919050565b600067ffffffffffffffff8211156115c3576115c361154a565b601f19601f83011660200192915050565b82818337506000910152565b60006115f36115ee846115a9565b61158d565b90508281526020810184848401111561160e5761160e600080fd5b610e008482856115d4565b600082601f83011261162d5761162d600080fd5b81356102df8482602086016115e0565b6000806000806080858703121561165657611656600080fd5b6000611662878761152e565b94505060206116738782880161152e565b93505060406116848782880161153f565b925050606085013567ffffffffffffffff8111156116a4576116a4600080fd5b6116b087828801611619565b91505092959194509250565b806114f2565b602081016114cd82846116bc565b600061016082840312156116e6576116e6600080fd5b50919050565b60006020828403121561170157611701600080fd5b813567ffffffffffffffff81111561171b5761171b600080fd5b6102df848285016116d0565b634e487b7160e01b600052602160045260246000fd5b6009811061152b5761152b611727565b806115a48161173d565b60006114cd8261174d565b6114f281611757565b8015156114f2565b6002811061152b5761152b611727565b806115a481611773565b60006114cd82611783565b6114f28161178d565b805160808301906117b2848261176b565b5060208201516117c56020850182611798565b5060408201516117d86040850182611798565b50606082015161095d60608501826116bc565b6114f281611506565b60005b8381101561180f5781810151838201526020016117f7565b8381111561095d5750506000910152565b600061182a825190565b8084526020840193506118418185602086016117f4565b601f01601f19169290920192915050565b80516000906101608401906118678582611762565b50602083015161187a60208601826116bc565b50604083015161188d60408601826117a1565b5060608301516118a060c08601826116bc565b5060808301516118b360e08601826116bc565b5060a08301516118c76101008601826117eb565b5060c08301516118db6101208601826116bc565b5060e08301518482036101408601526118f48282611820565b95945050505050565b600061133c8383611852565b6000611913825190565b8084526020840193508360208202850161192d8560200190565b8060005b85811015611962578484038952815161194a85826118fd565b94506020830160209a909a0199925050600101611931565b5091979650505050505050565b6020808252810161133c8184611909565b60008083601f84011261199557611995600080fd5b50813567ffffffffffffffff8111156119b0576119b0600080fd5b6020830191508360018202830111156119cb576119cb600080fd5b9250929050565b600080600080600080600060c0888a0312156119f0576119f0600080fd5b60006119fc8a8a61152e565b9750506020611a0d8a828b0161152e565b9650506040611a1e8a828b0161152e565b9550506060611a2f8a828b0161152e565b9450506080611a408a828b0161153f565b93505060a088013567ffffffffffffffff811115611a6057611a60600080fd5b611a6c8a828b01611980565b925092505092959891949750929550565b600060208284031215611a9257611a92600080fd5b60006102df848461152e565b602081016114cd828461176b565b602081016114cd82846117eb565b80516114cd81611517565b600060208284031215611ada57611ada600080fd5b60006102df8484611aba565b6000808335601e1936859003018112611b0157611b01600080fd5b80840192508235915067ffffffffffffffff821115611b2257611b22600080fd5b602083019250600182023603831315611b3d57611b3d600080fd5b509250929050565b634e487b7160e01b600052603260045260246000fd5b60008060408385031215611b7157611b71600080fd5b6000611b7d858561153f565b925050602083013567ffffffffffffffff811115611b9d57611b9d600080fd5b611ba985828601611619565b9150509250929050565b6000611bbd825190565b611bcb8185602086016117f4565b9290920192915050565b6001600160f01b031981166114f2565b6001600160f81b031981166114f2565b6000611c018289611bb3565b9150611c0d8288611bd5565b600282019150611c1d8287611bb3565b9150611c298286611bd5565b600282019150611c398285611bb3565b9150611c458284611be5565b506001019695505050505050565b6020808252810161133c8184611820565b6000611c708286611bb3565b9150611c7c8285611bd5565b6002820191506118f48284611bb3565b60408101611c9a82856116bc565b81810360208301526113398184611820565b80516114cd81611539565b600060208284031215611ccc57611ccc600080fd5b60006102df8484611cac565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d0857611d08611cd8565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611d3257611d32611d0d565b500490565b60408101611d4582856117eb565b61133c60208301846116bc565b6000611d5e828b611bb3565b9150611d6a828a611bd5565b600282019150611d7a8289611bb3565b9150611d868288611bd5565b600282019150611d968287611bb3565b9150611da28286611bd5565b600282019150611db28285611bb3565b9150611dbe8284611be5565b5060010198975050505050505050565b6000611dda82846116bc565b50602001919050565b600081611df257611df2611cd8565b506000190190565b60008219821115611e0d57611e0d611cd8565b500190565b600082821015611e2457611e24611cd8565b500390565b6000600019821415611e3d57611e3d611cd8565b5060010190565b600082611e5357611e53611d0d565b500690565b600060208284031215611e6d57611e6d600080fd5b611e77602061158d565b90506000611e858484611cac565b82525092915050565b600060208284031215611ea357611ea3600080fd5b60006102df8484611e58565b60408101611ebd82856117eb565b61133c60208301846117eb565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015291505b5060400190565b602080825281016114cd81611eca565b801515611520565b80516114cd81611f30565b600060208284031215611f5857611f58600080fd5b60006102df8484611f38565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611f19565b602080825281016114cd81611f64565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611f19565b602080825281016114cd81611fbb565b600061133c8284611bb3565b602080825281016114cd81601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060208201526040019056fe49736f6c6174696f6e4d6f646557726170706572547261646572563200000000a26469706673582212204ff959e503a47aeda99866f5de73074a0302981bc96833201d3524156633907964736f6c63430008090033";

type TestIsolationModeWrapperTraderV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestIsolationModeWrapperTraderV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestIsolationModeWrapperTraderV2__factory extends ContractFactory {
  constructor(...args: TestIsolationModeWrapperTraderV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _inputToken: string,
    _vaultFactory: string,
    _dolomiteMargin: string,
    _dolomiteRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestIsolationModeWrapperTraderV2> {
    return super.deploy(
      _inputToken,
      _vaultFactory,
      _dolomiteMargin,
      _dolomiteRegistry,
      overrides || {}
    ) as Promise<TestIsolationModeWrapperTraderV2>;
  }
  override getDeployTransaction(
    _inputToken: string,
    _vaultFactory: string,
    _dolomiteMargin: string,
    _dolomiteRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _inputToken,
      _vaultFactory,
      _dolomiteMargin,
      _dolomiteRegistry,
      overrides || {}
    );
  }
  override attach(address: string): TestIsolationModeWrapperTraderV2 {
    return super.attach(address) as TestIsolationModeWrapperTraderV2;
  }
  override connect(signer: Signer): TestIsolationModeWrapperTraderV2__factory {
    return super.connect(signer) as TestIsolationModeWrapperTraderV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestIsolationModeWrapperTraderV2Interface {
    return new utils.Interface(
      _abi
    ) as TestIsolationModeWrapperTraderV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestIsolationModeWrapperTraderV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestIsolationModeWrapperTraderV2;
  }
}
