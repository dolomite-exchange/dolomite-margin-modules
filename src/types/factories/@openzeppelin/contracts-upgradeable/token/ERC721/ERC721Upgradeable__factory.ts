/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Upgradeable,
  ERC721UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e157600080fd5b80636352211e1461016d57806370a082311461018057806395d89b41146101a057600080fd5b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610af1565b6101f4565b6040516100f49190610b1c565b60405180910390f35b610105610246565b6040516100f49190610b88565b610125610120366004610baa565b6102d8565b6040516100f49190610be5565b610145610140366004610c07565b6102ff565b005b610145610155366004610c44565b61038e565b610145610168366004610c44565b6103bf565b61012561017b366004610baa565b6103da565b61019361018e366004610c94565b61040f565b6040516100f49190610cbb565b610105610453565b6101456101b6366004610cdc565b610462565b6101456101c9366004610e02565b610471565b6101056101dc366004610baa565b6104a9565b6100e76101ef366004610e81565b61051d565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b8061024057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461025590610eca565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610eca565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050905090565b60006102e38261054b565b506000908152606960205260409020546001600160a01b031690565b600061030a826103da565b9050806001600160a01b0316836001600160a01b031614156103475760405162461bcd60e51b815260040161033e90610f38565b60405180910390fd5b336001600160a01b03821614806103635750610363813361051d565b61037f5760405162461bcd60e51b815260040161033e90610fa2565b6103898383610582565b505050565b61039833826105f0565b6103b45760405162461bcd60e51b815260040161033e90610ffc565b61038983838361064f565b61038983838360405180602001604052806000815250610471565b6000818152606760205260408120546001600160a01b0316806102405760405162461bcd60e51b815260040161033e90611043565b60006001600160a01b0382166104375760405162461bcd60e51b815260040161033e90611099565b506001600160a01b031660009081526068602052604090205490565b60606066805461025590610eca565b61046d338383610777565b5050565b61047b33836105f0565b6104975760405162461bcd60e51b815260040161033e90610ffc565b6104a38484848461081a565b50505050565b60606104b48261054b565b60006104cb60408051602081019091526000815290565b905060008151116104eb5760405180602001604052806000815250610516565b806104f58461084d565b6040516020016105069291906110cb565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6000818152606760205260409020546001600160a01b031661057f5760405162461bcd60e51b815260040161033e90611043565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906105b7826103da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806105fc836103da565b9050806001600160a01b0316846001600160a01b031614806106235750610623818561051d565b806106475750836001600160a01b031661063c846102d8565b6001600160a01b0316145b949350505050565b826001600160a01b0316610662826103da565b6001600160a01b0316146106885760405162461bcd60e51b815260040161033e90611125565b6001600160a01b0382166106ae5760405162461bcd60e51b815260040161033e90611176565b826001600160a01b03166106c1826103da565b6001600160a01b0316146106e75760405162461bcd60e51b815260040161033e90611125565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156107a95760405162461bcd60e51b815260040161033e906111ba565b6001600160a01b038381166000818152606a602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061080d908590610b1c565b60405180910390a3505050565b61082584848461064f565b610831848484846108ea565b6104a35760405162461bcd60e51b815260040161033e90611219565b6060600061085a836109f7565b600101905060008167ffffffffffffffff81111561087a5761087a610d0f565b6040519080825280601f01601f1916602001820160405280156108a4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846108dd576108e2565b6108ae565b509392505050565b60006001600160a01b0384163b156109ec57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061092e903390899088908890600401611229565b602060405180830381600087803b15801561094857600080fd5b505af1925050508015610978575060408051601f3d908101601f1916820190925261097591810190611278565b60015b6109d2573d8080156109a6576040519150601f19603f3d011682016040523d82523d6000602084013e6109ab565b606091505b5080516109ca5760405162461bcd60e51b815260040161033e90611219565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610647565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610a365772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610a62576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610a8057662386f26fc10000830492506010015b6305f5e1008310610a98576305f5e100830492506008015b6127108310610aac57612710830492506004015b60648310610abe576064830492506002015b600a83106102405760010192915050565b6001600160e01b031981165b811461057f57600080fd5b803561024081610acf565b600060208284031215610b0657610b06600080fd5b60006106478484610ae6565b8015155b82525050565b602081016102408284610b12565b60005b83811015610b45578181015183820152602001610b2d565b838111156104a35750506000910152565b6000610b60825190565b808452602084019350610b77818560208601610b2a565b601f01601f19169290920192915050565b602080825281016105168184610b56565b80610adb565b803561024081610b99565b600060208284031215610bbf57610bbf600080fd5b60006106478484610b9f565b60006001600160a01b038216610240565b610b1681610bcb565b602081016102408284610bdc565b610adb81610bcb565b803561024081610bf3565b60008060408385031215610c1d57610c1d600080fd5b6000610c298585610bfc565b9250506020610c3a85828601610b9f565b9150509250929050565b600080600060608486031215610c5c57610c5c600080fd5b6000610c688686610bfc565b9350506020610c7986828701610bfc565b9250506040610c8a86828701610b9f565b9150509250925092565b600060208284031215610ca957610ca9600080fd5b60006106478484610bfc565b80610b16565b602081016102408284610cb5565b801515610adb565b803561024081610cc9565b60008060408385031215610cf257610cf2600080fd5b6000610cfe8585610bfc565b9250506020610c3a85828601610cd1565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610d4b57610d4b610d0f565b6040525050565b6000610d5d60405190565b9050610d698282610d25565b919050565b600067ffffffffffffffff821115610d8857610d88610d0f565b601f19601f83011660200192915050565b82818337506000910152565b6000610db8610db384610d6e565b610d52565b905082815260208101848484011115610dd357610dd3600080fd5b6108e2848285610d99565b600082601f830112610df257610df2600080fd5b8135610647848260208601610da5565b60008060008060808587031215610e1b57610e1b600080fd5b6000610e278787610bfc565b9450506020610e3887828801610bfc565b9350506040610e4987828801610b9f565b925050606085013567ffffffffffffffff811115610e6957610e69600080fd5b610e7587828801610dde565b91505092959194509250565b60008060408385031215610e9757610e97600080fd5b6000610ea38585610bfc565b9250506020610c3a85828601610bfc565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610ede57607f821691505b60208210811415610ef157610ef1610eb4565b50919050565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015291505b5060400190565b6020808252810161024081610ef7565b603d81526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060208201529150610f31565b6020808252810161024081610f48565b602d81526000602082017f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526c1c881bdc88185c1c1c9bdd9959609a1b60208201529150610f31565b6020808252810161024081610fb2565b601881526000602082017f4552433732313a20696e76616c696420746f6b656e2049440000000000000000815291505b5060200190565b602080825281016102408161100c565b602981526000602082017f4552433732313a2061646472657373207a65726f206973206e6f7420612076618152683634b21037bbb732b960b91b60208201529150610f31565b6020808252810161024081611053565b60006110b3825190565b6110c1818560208601610b2a565b9290920192915050565b60006110d782856110a9565b915061064782846110a9565b602581526000602082017f4552433732313a207472616e736665722066726f6d20696e636f72726563742081526437bbb732b960d91b60208201529150610f31565b60208082528101610240816110e3565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b60208201529150610f31565b6020808252810161024081611135565b601981526000602082017f4552433732313a20617070726f766520746f2063616c6c6572000000000000008152915061103c565b6020808252810161024081611186565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60208201529150610f31565b60208082528101610240816111ca565b608081016112378287610bdc565b6112446020830186610bdc565b6112516040830185610cb5565b81810360608301526112638184610b56565b9695505050505050565b805161024081610acf565b60006020828403121561128d5761128d600080fd5b6000610647848461126d56fea2646970667358221220700b102c117d4c3e6b28475d38318baea8fb79e0a130c753b86c15df2552c86864736f6c63430008090033";

type ERC721UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC721UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Upgradeable {
    return super.attach(address) as ERC721Upgradeable;
  }
  override connect(signer: Signer): ERC721Upgradeable__factory {
    return super.connect(signer) as ERC721Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;
  }
}
