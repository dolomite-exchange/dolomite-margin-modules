/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "MagicGLPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPPriceOracle__factory>;
    getContractFactory(
      name: "MagicGLPUnwrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPUnwrapperTraderV1__factory>;
    getContractFactory(
      name: "MagicGLPUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "MagicGLPWithChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPWithChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "MagicGLPWrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPWrapperTraderV1__factory>;
    getContractFactory(
      name: "MagicGLPWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MagicGLPWrapperTraderV2__factory>;
    getContractFactory(
      name: "ARBIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ARBIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "ARBIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ARBIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "ARBRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ARBRegistry__factory>;
    getContractFactory(
      name: "BaseLiquidatorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseLiquidatorProxy__factory>;
    getContractFactory(
      name: "BaseRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRegistry__factory>;
    getContractFactory(
      name: "DolomiteRegistryImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DolomiteRegistryImplementation__factory>;
    getContractFactory(
      name: "EventEmitterRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventEmitterRegistry__factory>;
    getContractFactory(
      name: "HandlerRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HandlerRegistry__factory>;
    getContractFactory(
      name: "HasLiquidatorRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HasLiquidatorRegistry__factory>;
    getContractFactory(
      name: "MinimalERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalERC20__factory>;
    getContractFactory(
      name: "RegistryProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegistryProxy__factory>;
    getContractFactory(
      name: "GLPIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "GLPIsolationModeTokenVaultV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeTokenVaultV2__factory>;
    getContractFactory(
      name: "GLPIsolationModeUnwrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeUnwrapperTraderV1__factory>;
    getContractFactory(
      name: "GLPIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "GLPIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "GLPIsolationModeWrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeWrapperTraderV1__factory>;
    getContractFactory(
      name: "GLPIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "GLPMathLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPMathLib__factory>;
    getContractFactory(
      name: "GLPPriceOracleV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLPPriceOracleV1__factory>;
    getContractFactory(
      name: "GMXIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GMXIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "GMXIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GMXIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "GmxRegistryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxRegistryV1__factory>;
    getContractFactory(
      name: "GmxV2IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "GmxV2IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "GmxV2IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "GmxV2IsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2IsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "GmxV2Library",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2Library__factory>;
    getContractFactory(
      name: "GmxV2MarketTokenPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2MarketTokenPriceOracle__factory>;
    getContractFactory(
      name: "GmxV2Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxV2Registry__factory>;
    getContractFactory(
      name: "OnlyDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyDolomiteMargin__factory>;
    getContractFactory(
      name: "OnlyDolomiteMarginForUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyDolomiteMarginForUpgradeable__factory>;
    getContractFactory(
      name: "LinearStepFunctionInterestSetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearStepFunctionInterestSetter__factory>;
    getContractFactory(
      name: "IARB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IARB__factory>;
    getContractFactory(
      name: "IARBIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IARBIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IARBIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IARBIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IARBRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IARBRegistry__factory>;
    getContractFactory(
      name: "IAlgebraV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlgebraV3Pool__factory>;
    getContractFactory(
      name: "IChainlinkAccessControlAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAccessControlAggregator__factory>;
    getContractFactory(
      name: "IChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAggregator__factory>;
    getContractFactory(
      name: "IChainlinkAutomation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAutomation__factory>;
    getContractFactory(
      name: "IChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "IChainlinkPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkPriceOracle__factory>;
    getContractFactory(
      name: "IChainlinkPriceOracleOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkPriceOracleOld__factory>;
    getContractFactory(
      name: "IChainlinkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkRegistry__factory>;
    getContractFactory(
      name: "IEsGmxDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEsGmxDistributor__factory>;
    getContractFactory(
      name: "IGLPIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IGLPIsolationModeTokenVaultV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPIsolationModeTokenVaultV2__factory>;
    getContractFactory(
      name: "IGLPIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IGLPIsolationModeVaultFactoryOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPIsolationModeVaultFactoryOld__factory>;
    getContractFactory(
      name: "IGLPManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPManager__factory>;
    getContractFactory(
      name: "IGLPRewardsRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLPRewardsRouterV2__factory>;
    getContractFactory(
      name: "IGmxDataStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxDataStore__factory>;
    getContractFactory(
      name: "IGmxDepositCallbackReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxDepositCallbackReceiver__factory>;
    getContractFactory(
      name: "IGmxDepositHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxDepositHandler__factory>;
    getContractFactory(
      name: "IGmxEventEmitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxEventEmitter__factory>;
    getContractFactory(
      name: "IGmxExchangeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxExchangeRouter__factory>;
    getContractFactory(
      name: "IGMXIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGMXIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IGMXIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGMXIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IGmxMarketToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxMarketToken__factory>;
    getContractFactory(
      name: "IGmxOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxOracle__factory>;
    getContractFactory(
      name: "IGmxReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxReader__factory>;
    getContractFactory(
      name: "IGmxRegistryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRegistryV1__factory>;
    getContractFactory(
      name: "IGmxRewardRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRewardRouterV2__factory>;
    getContractFactory(
      name: "IGmxRewardTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRewardTracker__factory>;
    getContractFactory(
      name: "IGmxRoleStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRoleStore__factory>;
    getContractFactory(
      name: "IGmxRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRouter__factory>;
    getContractFactory(
      name: "IGmxV2IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IGmxV2IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "IGmxV2IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IGmxV2IsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2IsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "IGmxV2MarketTokenPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2MarketTokenPriceOracle__factory>;
    getContractFactory(
      name: "IGmxV2Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxV2Registry__factory>;
    getContractFactory(
      name: "IGmxVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxVault__factory>;
    getContractFactory(
      name: "IGmxVester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxVester__factory>;
    getContractFactory(
      name: "IGmxWithdrawalCallbackReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxWithdrawalCallbackReceiver__factory>;
    getContractFactory(
      name: "IGmxWithdrawalHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxWithdrawalHandler__factory>;
    getContractFactory(
      name: "ISGMX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISGMX__factory>;
    getContractFactory(
      name: "IAsyncIsolationModeTraderBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAsyncIsolationModeTraderBase__factory>;
    getContractFactory(
      name: "IAuthorizationBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizationBase__factory>;
    getContractFactory(
      name: "IBaseRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseRegistry__factory>;
    getContractFactory(
      name: "IBorrowPositionProxyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBorrowPositionProxyV1__factory>;
    getContractFactory(
      name: "IBorrowPositionProxyV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBorrowPositionProxyV2__factory>;
    getContractFactory(
      name: "IDefaultUpgradeableAsyncIsolationModeUnwrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDefaultUpgradeableAsyncIsolationModeUnwrapperTrader__factory>;
    getContractFactory(
      name: "IDefaultUpgradeableAsyncIsolationModeWrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDefaultUpgradeableAsyncIsolationModeWrapperTrader__factory>;
    getContractFactory(
      name: "IDepositWithdrawalProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDepositWithdrawalProxy__factory>;
    getContractFactory(
      name: "IDolomiteMarginUnwrapperTraderForLiquidatorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginUnwrapperTraderForLiquidatorV3__factory>;
    getContractFactory(
      name: "IDolomiteMarginWrapperTraderForLiquidatorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginWrapperTraderForLiquidatorV3__factory>;
    getContractFactory(
      name: "IDolomiteRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteRegistry__factory>;
    getContractFactory(
      name: "IERC20Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Mintable__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "IEventEmitterRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEventEmitterRegistry__factory>;
    getContractFactory(
      name: "IExpiry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExpiry__factory>;
    getContractFactory(
      name: "IFreezableIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFreezableIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IGenericTraderProxyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGenericTraderProxyV1__factory>;
    getContractFactory(
      name: "IHandlerRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHandlerRegistry__factory>;
    getContractFactory(
      name: "IIsolationModeFreezableLiquidatorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeFreezableLiquidatorProxy__factory>;
    getContractFactory(
      name: "IIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IIsolationModeTokenVaultV1WithFreezable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithFreezable__factory>;
    getContractFactory(
      name: "IIsolationModeTokenVaultV1WithFreezableAndPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithFreezableAndPausable__factory>;
    getContractFactory(
      name: "IIsolationModeTokenVaultV1WithPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithPausable__factory>;
    getContractFactory(
      name: "IIsolationModeUnwrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeUnwrapperTrader__factory>;
    getContractFactory(
      name: "IIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "IIsolationModeUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeUpgradeableProxy__factory>;
    getContractFactory(
      name: "IIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IIsolationModeVaultFactoryOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeVaultFactoryOld__factory>;
    getContractFactory(
      name: "IIsolationModeWrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeWrapperTrader__factory>;
    getContractFactory(
      name: "IIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "ILinearStepFunctionInterestSetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILinearStepFunctionInterestSetter__factory>;
    getContractFactory(
      name: "ILiquidatorAssetRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorAssetRegistry__factory>;
    getContractFactory(
      name: "ILiquidatorProxyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorProxyV1__factory>;
    getContractFactory(
      name: "ILiquidatorProxyV1WithAmm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorProxyV1WithAmm__factory>;
    getContractFactory(
      name: "ILiquidatorProxyV2WithExternalLiquidity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorProxyV2WithExternalLiquidity__factory>;
    getContractFactory(
      name: "ILiquidatorProxyV3WithLiquidityToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorProxyV3WithLiquidityToken__factory>;
    getContractFactory(
      name: "ILiquidatorProxyV4WithGenericTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidatorProxyV4WithGenericTrader__factory>;
    getContractFactory(
      name: "IOnlyDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOnlyDolomiteMargin__factory>;
    getContractFactory(
      name: "IPartiallyDelayedMultiSig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPartiallyDelayedMultiSig__factory>;
    getContractFactory(
      name: "ITWAPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWAPPriceOracle__factory>;
    getContractFactory(
      name: "IUpgradeableAsyncIsolationModeUnwrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUpgradeableAsyncIsolationModeUnwrapperTrader__factory>;
    getContractFactory(
      name: "IUpgradeableAsyncIsolationModeWrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUpgradeableAsyncIsolationModeWrapperTrader__factory>;
    getContractFactory(
      name: "IWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWhitelist__factory>;
    getContractFactory(
      name: "IJonesGLPAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesGLPAdapter__factory>;
    getContractFactory(
      name: "IJonesGLPVaultRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesGLPVaultRouter__factory>;
    getContractFactory(
      name: "IJonesUSDCFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesUSDCFarm__factory>;
    getContractFactory(
      name: "IJonesUSDCIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesUSDCIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IJonesUSDCIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesUSDCIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IJonesUSDCRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesUSDCRegistry__factory>;
    getContractFactory(
      name: "IJonesWhitelistController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJonesWhitelistController__factory>;
    getContractFactory(
      name: "IEmitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEmitter__factory>;
    getContractFactory(
      name: "IEmitterMultipleRewardTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEmitterMultipleRewardTokens__factory>;
    getContractFactory(
      name: "IOARB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOARB__factory>;
    getContractFactory(
      name: "IRewardsDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardsDistributor__factory>;
    getContractFactory(
      name: "IStorageVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStorageVault__factory>;
    getContractFactory(
      name: "IVesterExploder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesterExploder__factory>;
    getContractFactory(
      name: "IVesterV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesterV1__factory>;
    getContractFactory(
      name: "IVesterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesterV2__factory>;
    getContractFactory(
      name: "IPendleGLPRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleGLPRegistry__factory>;
    getContractFactory(
      name: "IPendlePtGLP2024IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtGLP2024IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IPendlePtGLP2024IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtGLP2024IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IPendlePtIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IPendlePtIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IPendlePtMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtMarket__factory>;
    getContractFactory(
      name: "IPendlePtOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtOracle__factory>;
    getContractFactory(
      name: "IPendlePtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendlePtToken__factory>;
    getContractFactory(
      name: "IPendleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleRegistry__factory>;
    getContractFactory(
      name: "IPendleRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleRouter__factory>;
    getContractFactory(
      name: "IPendleSyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleSyToken__factory>;
    getContractFactory(
      name: "IPendleYtGLP2024IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleYtGLP2024IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IPendleYtGLP2024IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleYtGLP2024IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IPendleYtToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPendleYtToken__factory>;
    getContractFactory(
      name: "IPlutusVaultGLP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultGLP__factory>;
    getContractFactory(
      name: "IPlutusVaultGLPFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultGLPFarm__factory>;
    getContractFactory(
      name: "IPlutusVaultGLPIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultGLPIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IPlutusVaultGLPIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultGLPIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IPlutusVaultGLPRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultGLPRouter__factory>;
    getContractFactory(
      name: "IPlutusVaultRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlutusVaultRegistry__factory>;
    getContractFactory(
      name: "IOdosRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOdosRouter__factory>;
    getContractFactory(
      name: "IParaswapAugustusRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParaswapAugustusRouter__factory>;
    getContractFactory(
      name: "IParaswapFeeClaimer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParaswapFeeClaimer__factory>;
    getContractFactory(
      name: "IUmamiAggregateVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAggregateVault__factory>;
    getContractFactory(
      name: "IUmamiAssetVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVault__factory>;
    getContractFactory(
      name: "IUmamiAssetVaultIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVaultIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IUmamiAssetVaultIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVaultIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IUmamiAssetVaultRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVaultRegistry__factory>;
    getContractFactory(
      name: "IUmamiAssetVaultStorageViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVaultStorageViewer__factory>;
    getContractFactory(
      name: "IUmamiAssetVaultWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUmamiAssetVaultWhitelist__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeTokenVaultV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeTokenVaultV2__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeUnwrapperTraderV2ForLiquidation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeUnwrapperTraderV2ForLiquidation__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "JonesUSDCIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "JonesUSDCPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCPriceOracle__factory>;
    getContractFactory(
      name: "JonesUSDCRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCRegistry__factory>;
    getContractFactory(
      name: "JonesUSDCWithChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JonesUSDCWithChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "IsolationModeFreezableLiquidatorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeFreezableLiquidatorProxy__factory>;
    getContractFactory(
      name: "Emitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Emitter__factory>;
    getContractFactory(
      name: "EmitterMultipleRewardTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmitterMultipleRewardTokens__factory>;
    getContractFactory(
      name: "OARB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OARB__factory>;
    getContractFactory(
      name: "OARBStorageVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OARBStorageVault__factory>;
    getContractFactory(
      name: "RewardsDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardsDistributor__factory>;
    getContractFactory(
      name: "VesterExploder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VesterExploder__factory>;
    getContractFactory(
      name: "VesterImplementationLibForV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VesterImplementationLibForV2__factory>;
    getContractFactory(
      name: "VesterImplementationV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VesterImplementationV1__factory>;
    getContractFactory(
      name: "VesterImplementationV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VesterImplementationV2__factory>;
    getContractFactory(
      name: "VesterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VesterProxy__factory>;
    getContractFactory(
      name: "ChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "ChainlinkPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkPriceOracle__factory>;
    getContractFactory(
      name: "TWAPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWAPPriceOracle__factory>;
    getContractFactory(
      name: "PendleGLPRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGLPRegistry__factory>;
    getContractFactory(
      name: "PendlePtGLP2024IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtGLP2024IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "PendlePtGLP2024IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtGLP2024IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "PendlePtGLP2024IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtGLP2024IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "PendlePtGLP2024IsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtGLP2024IsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "PendlePtGLPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtGLPPriceOracle__factory>;
    getContractFactory(
      name: "PendlePtIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "PendlePtIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "PendlePtIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "PendlePtIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "PendlePtPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePtPriceOracle__factory>;
    getContractFactory(
      name: "PendleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleRegistry__factory>;
    getContractFactory(
      name: "PendleYtGLP2024IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYtGLP2024IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "PendleYtGLP2024IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYtGLP2024IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "PendleYtGLP2024IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYtGLP2024IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "PendleYtGLP2024IsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYtGLP2024IsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "PendleYtGLPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYtGLPPriceOracle__factory>;
    getContractFactory(
      name: "DolomiteCompatibleWhitelistForPlutusDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DolomiteCompatibleWhitelistForPlutusDAO__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeUnwrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeUnwrapperTraderV1__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeWrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeWrapperTraderV1__factory>;
    getContractFactory(
      name: "PlutusVaultGLPIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "PlutusVaultGLPPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPPriceOracle__factory>;
    getContractFactory(
      name: "PlutusVaultGLPWithChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultGLPWithChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "PlutusVaultRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlutusVaultRegistry__factory>;
    getContractFactory(
      name: "AsyncIsolationModeTraderBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncIsolationModeTraderBase__factory>;
    getContractFactory(
      name: "FreezableIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreezableIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "AsyncIsolationModeUnwrapperTraderImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncIsolationModeUnwrapperTraderImpl__factory>;
    getContractFactory(
      name: "AsyncIsolationModeWrapperTraderImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncIsolationModeWrapperTraderImpl__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1ActionsImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1ActionsImpl__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1WithFreezable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1WithFreezable__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1WithFreezableAndPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1WithFreezableAndPausable__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1WithPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1WithPausable__factory>;
    getContractFactory(
      name: "IsolationModeTokenVaultV1WithPausableAndOnlyEoa",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory>;
    getContractFactory(
      name: "IsolationModeTraderBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTraderBaseV2__factory>;
    getContractFactory(
      name: "IsolationModeUnwrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeUnwrapperTraderV1__factory>;
    getContractFactory(
      name: "IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "IsolationModeWrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeWrapperTraderV1__factory>;
    getContractFactory(
      name: "IsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "UpgradeableAsyncIsolationModeUnwrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableAsyncIsolationModeUnwrapperTrader__factory>;
    getContractFactory(
      name: "UpgradeableAsyncIsolationModeWrapperTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableAsyncIsolationModeWrapperTrader__factory>;
    getContractFactory(
      name: "IsolationModeTraderProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeTraderProxy__factory>;
    getContractFactory(
      name: "IsolationModeUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsolationModeUpgradeableProxy__factory>;
    getContractFactory(
      name: "SimpleIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "SimpleIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "SimpleIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "SimpleIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "OdosAggregatorTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OdosAggregatorTrader__factory>;
    getContractFactory(
      name: "ParaswapAggregatorTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParaswapAggregatorTrader__factory>;
    getContractFactory(
      name: "ParaswapAggregatorTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParaswapAggregatorTraderV2__factory>;
    getContractFactory(
      name: "UmamiAssetVaultIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "UmamiAssetVaultIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "UmamiAssetVaultIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "UmamiAssetVaultIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "UmamiAssetVaultPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultPriceOracle__factory>;
    getContractFactory(
      name: "UmamiAssetVaultRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UmamiAssetVaultRegistry__factory>;
    getContractFactory(
      name: "IDolomiteAmmFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteAmmFactory__factory>;
    getContractFactory(
      name: "IDolomiteAmmPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteAmmPair__factory>;
    getContractFactory(
      name: "IDolomiteAmmRouterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteAmmRouterProxy__factory>;
    getContractFactory(
      name: "IDolomiteInterestSetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteInterestSetter__factory>;
    getContractFactory(
      name: "IDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMargin__factory>;
    getContractFactory(
      name: "IDolomiteMarginAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginAdmin__factory>;
    getContractFactory(
      name: "IDolomiteMarginCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginCallee__factory>;
    getContractFactory(
      name: "IDolomiteMarginExchangeWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginExchangeWrapper__factory>;
    getContractFactory(
      name: "IDolomiteMarginInternalTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginInternalTrader__factory>;
    getContractFactory(
      name: "IDolomiteMarginLiquidationCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomiteMarginLiquidationCallback__factory>;
    getContractFactory(
      name: "IDolomitePriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDolomitePriceOracle__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "CustomTestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomTestToken__factory>;
    getContractFactory(
      name: "CustomTestVaultToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomTestVaultToken__factory>;
    getContractFactory(
      name: "ICustomTestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICustomTestToken__factory>;
    getContractFactory(
      name: "ICustomTestVaultToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICustomTestVaultToken__factory>;
    getContractFactory(
      name: "TestAccountActionLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAccountActionLib__factory>;
    getContractFactory(
      name: "TestAdminPriceOracleV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAdminPriceOracleV1__factory>;
    getContractFactory(
      name: "TestAsyncIsolationModeTraderBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAsyncIsolationModeTraderBase__factory>;
    getContractFactory(
      name: "TestBaseLiquidatorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBaseLiquidatorProxy__factory>;
    getContractFactory(
      name: "TestBaseRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBaseRegistry__factory>;
    getContractFactory(
      name: "TestBitsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBitsLib__factory>;
    getContractFactory(
      name: "TestChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestChainlinkAggregator__factory>;
    getContractFactory(
      name: "TestChainlinkAutomationPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestChainlinkAutomationPriceOracle__factory>;
    getContractFactory(
      name: "TestChainlinkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestChainlinkRegistry__factory>;
    getContractFactory(
      name: "TestDecimalLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDecimalLib__factory>;
    getContractFactory(
      name: "TestDoAnything",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDoAnything__factory>;
    getContractFactory(
      name: "TestDolomiteMarginExchangeWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDolomiteMarginExchangeWrapper__factory>;
    getContractFactory(
      name: "TestDolomiteMarginInternalTrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDolomiteMarginInternalTrader__factory>;
    getContractFactory(
      name: "TestDolomiteMarginMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDolomiteMarginMath__factory>;
    getContractFactory(
      name: "TestERC20Lib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20Lib__factory>;
    getContractFactory(
      name: "TestFreezableIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFreezableIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "TestGLPIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGLPIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "TestGLPIsolationModeTokenVaultV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGLPIsolationModeTokenVaultV2__factory>;
    getContractFactory(
      name: "TestGLPManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGLPManager__factory>;
    getContractFactory(
      name: "TestGLPMathLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGLPMathLib__factory>;
    getContractFactory(
      name: "TestGmxDataStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGmxDataStore__factory>;
    getContractFactory(
      name: "TestGMXIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGMXIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "TestGmxReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGmxReader__factory>;
    getContractFactory(
      name: "TestGmxV2IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGmxV2IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "TestGmxV2IsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGmxV2IsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "TestGmxV2IsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGmxV2IsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "TestHandlerRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestHandlerRegistry__factory>;
    getContractFactory(
      name: "TestHasLiquidatorRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestHasLiquidatorRegistry__factory>;
    getContractFactory(
      name: "TestInterestIndexLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestInterestIndexLib__factory>;
    getContractFactory(
      name: "TestInterestSetter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestInterestSetter__factory>;
    getContractFactory(
      name: "TestIsolationModeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeFactory__factory>;
    getContractFactory(
      name: "TestIsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "TestIsolationModeTokenVaultV1WithFreezable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithFreezable__factory>;
    getContractFactory(
      name: "TestIsolationModeTokenVaultV1WithFreezableAndPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithFreezableAndPausable__factory>;
    getContractFactory(
      name: "TestIsolationModeTokenVaultV1WithPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithPausable__factory>;
    getContractFactory(
      name: "TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa__factory>;
    getContractFactory(
      name: "TestIsolationModeUnwrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeUnwrapperTraderV1__factory>;
    getContractFactory(
      name: "TestIsolationModeUnwrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeUnwrapperTraderV2__factory>;
    getContractFactory(
      name: "TestIsolationModeWrapperTraderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeWrapperTraderV1__factory>;
    getContractFactory(
      name: "TestIsolationModeWrapperTraderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestIsolationModeWrapperTraderV2__factory>;
    getContractFactory(
      name: "TestJonesUSDCFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestJonesUSDCFarm__factory>;
    getContractFactory(
      name: "TestPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPair__factory>;
    getContractFactory(
      name: "TestPendlePtOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPendlePtOracle__factory>;
    getContractFactory(
      name: "TestPendleYtGLP2024IsolationModeTokenVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPendleYtGLP2024IsolationModeTokenVaultV1__factory>;
    getContractFactory(
      name: "TestPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPriceOracle__factory>;
    getContractFactory(
      name: "TestRequire",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRequire__factory>;
    getContractFactory(
      name: "TestSimpleIsolationModeVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSimpleIsolationModeVaultFactory__factory>;
    getContractFactory(
      name: "TestTypes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTypes__factory>;
    getContractFactory(
      name: "TestVesterImplementationV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestVesterImplementationV1__factory>;
    getContractFactory(
      name: "TestVesterImplementationV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestVesterImplementationV2__factory>;
    getContractFactory(
      name: "IAlgebraPoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlgebraPoolErrors__factory>;
    getContractFactory(
      name: "SafeGettersForDolomiteMargin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeGettersForDolomiteMargin__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "MagicGLPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPPriceOracle>;
    getContractAt(
      name: "MagicGLPUnwrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPUnwrapperTraderV1>;
    getContractAt(
      name: "MagicGLPUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPUnwrapperTraderV2>;
    getContractAt(
      name: "MagicGLPWithChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPWithChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "MagicGLPWrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPWrapperTraderV1>;
    getContractAt(
      name: "MagicGLPWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MagicGLPWrapperTraderV2>;
    getContractAt(
      name: "ARBIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ARBIsolationModeTokenVaultV1>;
    getContractAt(
      name: "ARBIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ARBIsolationModeVaultFactory>;
    getContractAt(
      name: "ARBRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ARBRegistry>;
    getContractAt(
      name: "BaseLiquidatorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseLiquidatorProxy>;
    getContractAt(
      name: "BaseRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRegistry>;
    getContractAt(
      name: "DolomiteRegistryImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DolomiteRegistryImplementation>;
    getContractAt(
      name: "EventEmitterRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EventEmitterRegistry>;
    getContractAt(
      name: "HandlerRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HandlerRegistry>;
    getContractAt(
      name: "HasLiquidatorRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HasLiquidatorRegistry>;
    getContractAt(
      name: "MinimalERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinimalERC20>;
    getContractAt(
      name: "RegistryProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RegistryProxy>;
    getContractAt(
      name: "GLPIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeTokenVaultV1>;
    getContractAt(
      name: "GLPIsolationModeTokenVaultV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeTokenVaultV2>;
    getContractAt(
      name: "GLPIsolationModeUnwrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeUnwrapperTraderV1>;
    getContractAt(
      name: "GLPIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "GLPIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeVaultFactory>;
    getContractAt(
      name: "GLPIsolationModeWrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeWrapperTraderV1>;
    getContractAt(
      name: "GLPIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "GLPMathLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPMathLib>;
    getContractAt(
      name: "GLPPriceOracleV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GLPPriceOracleV1>;
    getContractAt(
      name: "GMXIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GMXIsolationModeTokenVaultV1>;
    getContractAt(
      name: "GMXIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GMXIsolationModeVaultFactory>;
    getContractAt(
      name: "GmxRegistryV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxRegistryV1>;
    getContractAt(
      name: "GmxV2IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2IsolationModeTokenVaultV1>;
    getContractAt(
      name: "GmxV2IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "GmxV2IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2IsolationModeVaultFactory>;
    getContractAt(
      name: "GmxV2IsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2IsolationModeWrapperTraderV2>;
    getContractAt(
      name: "GmxV2Library",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2Library>;
    getContractAt(
      name: "GmxV2MarketTokenPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2MarketTokenPriceOracle>;
    getContractAt(
      name: "GmxV2Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GmxV2Registry>;
    getContractAt(
      name: "OnlyDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyDolomiteMargin>;
    getContractAt(
      name: "OnlyDolomiteMarginForUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyDolomiteMarginForUpgradeable>;
    getContractAt(
      name: "LinearStepFunctionInterestSetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearStepFunctionInterestSetter>;
    getContractAt(
      name: "IARB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IARB>;
    getContractAt(
      name: "IARBIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IARBIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IARBIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IARBIsolationModeVaultFactory>;
    getContractAt(
      name: "IARBRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IARBRegistry>;
    getContractAt(
      name: "IAlgebraV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlgebraV3Pool>;
    getContractAt(
      name: "IChainlinkAccessControlAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAccessControlAggregator>;
    getContractAt(
      name: "IChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAggregator>;
    getContractAt(
      name: "IChainlinkAutomation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAutomation>;
    getContractAt(
      name: "IChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "IChainlinkPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkPriceOracle>;
    getContractAt(
      name: "IChainlinkPriceOracleOld",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkPriceOracleOld>;
    getContractAt(
      name: "IChainlinkRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkRegistry>;
    getContractAt(
      name: "IEsGmxDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEsGmxDistributor>;
    getContractAt(
      name: "IGLPIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IGLPIsolationModeTokenVaultV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPIsolationModeTokenVaultV2>;
    getContractAt(
      name: "IGLPIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPIsolationModeVaultFactory>;
    getContractAt(
      name: "IGLPIsolationModeVaultFactoryOld",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPIsolationModeVaultFactoryOld>;
    getContractAt(
      name: "IGLPManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPManager>;
    getContractAt(
      name: "IGLPRewardsRouterV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGLPRewardsRouterV2>;
    getContractAt(
      name: "IGmxDataStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxDataStore>;
    getContractAt(
      name: "IGmxDepositCallbackReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxDepositCallbackReceiver>;
    getContractAt(
      name: "IGmxDepositHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxDepositHandler>;
    getContractAt(
      name: "IGmxEventEmitter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxEventEmitter>;
    getContractAt(
      name: "IGmxExchangeRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxExchangeRouter>;
    getContractAt(
      name: "IGMXIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGMXIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IGMXIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGMXIsolationModeVaultFactory>;
    getContractAt(
      name: "IGmxMarketToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxMarketToken>;
    getContractAt(
      name: "IGmxOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxOracle>;
    getContractAt(
      name: "IGmxReader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxReader>;
    getContractAt(
      name: "IGmxRegistryV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRegistryV1>;
    getContractAt(
      name: "IGmxRewardRouterV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRewardRouterV2>;
    getContractAt(
      name: "IGmxRewardTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRewardTracker>;
    getContractAt(
      name: "IGmxRoleStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRoleStore>;
    getContractAt(
      name: "IGmxRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRouter>;
    getContractAt(
      name: "IGmxV2IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2IsolationModeTokenVaultV1>;
    getContractAt(
      name: "IGmxV2IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "IGmxV2IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2IsolationModeVaultFactory>;
    getContractAt(
      name: "IGmxV2IsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2IsolationModeWrapperTraderV2>;
    getContractAt(
      name: "IGmxV2MarketTokenPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2MarketTokenPriceOracle>;
    getContractAt(
      name: "IGmxV2Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxV2Registry>;
    getContractAt(
      name: "IGmxVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxVault>;
    getContractAt(
      name: "IGmxVester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxVester>;
    getContractAt(
      name: "IGmxWithdrawalCallbackReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxWithdrawalCallbackReceiver>;
    getContractAt(
      name: "IGmxWithdrawalHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxWithdrawalHandler>;
    getContractAt(
      name: "ISGMX",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISGMX>;
    getContractAt(
      name: "IAsyncIsolationModeTraderBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAsyncIsolationModeTraderBase>;
    getContractAt(
      name: "IAuthorizationBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizationBase>;
    getContractAt(
      name: "IBaseRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseRegistry>;
    getContractAt(
      name: "IBorrowPositionProxyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBorrowPositionProxyV1>;
    getContractAt(
      name: "IBorrowPositionProxyV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBorrowPositionProxyV2>;
    getContractAt(
      name: "IDefaultUpgradeableAsyncIsolationModeUnwrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDefaultUpgradeableAsyncIsolationModeUnwrapperTrader>;
    getContractAt(
      name: "IDefaultUpgradeableAsyncIsolationModeWrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDefaultUpgradeableAsyncIsolationModeWrapperTrader>;
    getContractAt(
      name: "IDepositWithdrawalProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDepositWithdrawalProxy>;
    getContractAt(
      name: "IDolomiteMarginUnwrapperTraderForLiquidatorV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginUnwrapperTraderForLiquidatorV3>;
    getContractAt(
      name: "IDolomiteMarginWrapperTraderForLiquidatorV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginWrapperTraderForLiquidatorV3>;
    getContractAt(
      name: "IDolomiteRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteRegistry>;
    getContractAt(
      name: "IERC20Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Mintable>;
    getContractAt(
      name: "IERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "IEventEmitterRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEventEmitterRegistry>;
    getContractAt(
      name: "IExpiry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExpiry>;
    getContractAt(
      name: "IFreezableIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFreezableIsolationModeVaultFactory>;
    getContractAt(
      name: "IGenericTraderProxyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGenericTraderProxyV1>;
    getContractAt(
      name: "IHandlerRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHandlerRegistry>;
    getContractAt(
      name: "IIsolationModeFreezableLiquidatorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeFreezableLiquidatorProxy>;
    getContractAt(
      name: "IIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IIsolationModeTokenVaultV1WithFreezable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithFreezable>;
    getContractAt(
      name: "IIsolationModeTokenVaultV1WithFreezableAndPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithFreezableAndPausable>;
    getContractAt(
      name: "IIsolationModeTokenVaultV1WithPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeTokenVaultV1WithPausable>;
    getContractAt(
      name: "IIsolationModeUnwrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeUnwrapperTrader>;
    getContractAt(
      name: "IIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "IIsolationModeUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeUpgradeableProxy>;
    getContractAt(
      name: "IIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeVaultFactory>;
    getContractAt(
      name: "IIsolationModeVaultFactoryOld",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeVaultFactoryOld>;
    getContractAt(
      name: "IIsolationModeWrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeWrapperTrader>;
    getContractAt(
      name: "IIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "ILinearStepFunctionInterestSetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILinearStepFunctionInterestSetter>;
    getContractAt(
      name: "ILiquidatorAssetRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorAssetRegistry>;
    getContractAt(
      name: "ILiquidatorProxyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorProxyV1>;
    getContractAt(
      name: "ILiquidatorProxyV1WithAmm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorProxyV1WithAmm>;
    getContractAt(
      name: "ILiquidatorProxyV2WithExternalLiquidity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorProxyV2WithExternalLiquidity>;
    getContractAt(
      name: "ILiquidatorProxyV3WithLiquidityToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorProxyV3WithLiquidityToken>;
    getContractAt(
      name: "ILiquidatorProxyV4WithGenericTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidatorProxyV4WithGenericTrader>;
    getContractAt(
      name: "IOnlyDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOnlyDolomiteMargin>;
    getContractAt(
      name: "IPartiallyDelayedMultiSig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPartiallyDelayedMultiSig>;
    getContractAt(
      name: "ITWAPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWAPPriceOracle>;
    getContractAt(
      name: "IUpgradeableAsyncIsolationModeUnwrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUpgradeableAsyncIsolationModeUnwrapperTrader>;
    getContractAt(
      name: "IUpgradeableAsyncIsolationModeWrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUpgradeableAsyncIsolationModeWrapperTrader>;
    getContractAt(
      name: "IWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWhitelist>;
    getContractAt(
      name: "IJonesGLPAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesGLPAdapter>;
    getContractAt(
      name: "IJonesGLPVaultRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesGLPVaultRouter>;
    getContractAt(
      name: "IJonesUSDCFarm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesUSDCFarm>;
    getContractAt(
      name: "IJonesUSDCIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesUSDCIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IJonesUSDCIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesUSDCIsolationModeVaultFactory>;
    getContractAt(
      name: "IJonesUSDCRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesUSDCRegistry>;
    getContractAt(
      name: "IJonesWhitelistController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJonesWhitelistController>;
    getContractAt(
      name: "IEmitter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEmitter>;
    getContractAt(
      name: "IEmitterMultipleRewardTokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEmitterMultipleRewardTokens>;
    getContractAt(
      name: "IOARB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOARB>;
    getContractAt(
      name: "IRewardsDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardsDistributor>;
    getContractAt(
      name: "IStorageVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStorageVault>;
    getContractAt(
      name: "IVesterExploder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesterExploder>;
    getContractAt(
      name: "IVesterV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesterV1>;
    getContractAt(
      name: "IVesterV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesterV2>;
    getContractAt(
      name: "IPendleGLPRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleGLPRegistry>;
    getContractAt(
      name: "IPendlePtGLP2024IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtGLP2024IsolationModeTokenVaultV1>;
    getContractAt(
      name: "IPendlePtGLP2024IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtGLP2024IsolationModeVaultFactory>;
    getContractAt(
      name: "IPendlePtIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IPendlePtIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtIsolationModeVaultFactory>;
    getContractAt(
      name: "IPendlePtMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtMarket>;
    getContractAt(
      name: "IPendlePtOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtOracle>;
    getContractAt(
      name: "IPendlePtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendlePtToken>;
    getContractAt(
      name: "IPendleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleRegistry>;
    getContractAt(
      name: "IPendleRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleRouter>;
    getContractAt(
      name: "IPendleSyToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleSyToken>;
    getContractAt(
      name: "IPendleYtGLP2024IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleYtGLP2024IsolationModeTokenVaultV1>;
    getContractAt(
      name: "IPendleYtGLP2024IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleYtGLP2024IsolationModeVaultFactory>;
    getContractAt(
      name: "IPendleYtToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPendleYtToken>;
    getContractAt(
      name: "IPlutusVaultGLP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultGLP>;
    getContractAt(
      name: "IPlutusVaultGLPFarm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultGLPFarm>;
    getContractAt(
      name: "IPlutusVaultGLPIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultGLPIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IPlutusVaultGLPIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultGLPIsolationModeVaultFactory>;
    getContractAt(
      name: "IPlutusVaultGLPRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultGLPRouter>;
    getContractAt(
      name: "IPlutusVaultRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlutusVaultRegistry>;
    getContractAt(
      name: "IOdosRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOdosRouter>;
    getContractAt(
      name: "IParaswapAugustusRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IParaswapAugustusRouter>;
    getContractAt(
      name: "IParaswapFeeClaimer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IParaswapFeeClaimer>;
    getContractAt(
      name: "IUmamiAggregateVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAggregateVault>;
    getContractAt(
      name: "IUmamiAssetVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVault>;
    getContractAt(
      name: "IUmamiAssetVaultIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVaultIsolationModeTokenVaultV1>;
    getContractAt(
      name: "IUmamiAssetVaultIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVaultIsolationModeVaultFactory>;
    getContractAt(
      name: "IUmamiAssetVaultRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVaultRegistry>;
    getContractAt(
      name: "IUmamiAssetVaultStorageViewer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVaultStorageViewer>;
    getContractAt(
      name: "IUmamiAssetVaultWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUmamiAssetVaultWhitelist>;
    getContractAt(
      name: "JonesUSDCIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeTokenVaultV1>;
    getContractAt(
      name: "JonesUSDCIsolationModeTokenVaultV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeTokenVaultV2>;
    getContractAt(
      name: "JonesUSDCIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "JonesUSDCIsolationModeUnwrapperTraderV2ForLiquidation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeUnwrapperTraderV2ForLiquidation>;
    getContractAt(
      name: "JonesUSDCIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeVaultFactory>;
    getContractAt(
      name: "JonesUSDCIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "JonesUSDCPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCPriceOracle>;
    getContractAt(
      name: "JonesUSDCRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCRegistry>;
    getContractAt(
      name: "JonesUSDCWithChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JonesUSDCWithChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "IsolationModeFreezableLiquidatorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeFreezableLiquidatorProxy>;
    getContractAt(
      name: "Emitter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Emitter>;
    getContractAt(
      name: "EmitterMultipleRewardTokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EmitterMultipleRewardTokens>;
    getContractAt(
      name: "OARB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OARB>;
    getContractAt(
      name: "OARBStorageVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OARBStorageVault>;
    getContractAt(
      name: "RewardsDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardsDistributor>;
    getContractAt(
      name: "VesterExploder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VesterExploder>;
    getContractAt(
      name: "VesterImplementationLibForV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VesterImplementationLibForV2>;
    getContractAt(
      name: "VesterImplementationV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VesterImplementationV1>;
    getContractAt(
      name: "VesterImplementationV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VesterImplementationV2>;
    getContractAt(
      name: "VesterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VesterProxy>;
    getContractAt(
      name: "ChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "ChainlinkPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkPriceOracle>;
    getContractAt(
      name: "TWAPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TWAPPriceOracle>;
    getContractAt(
      name: "PendleGLPRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGLPRegistry>;
    getContractAt(
      name: "PendlePtGLP2024IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtGLP2024IsolationModeTokenVaultV1>;
    getContractAt(
      name: "PendlePtGLP2024IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtGLP2024IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "PendlePtGLP2024IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtGLP2024IsolationModeVaultFactory>;
    getContractAt(
      name: "PendlePtGLP2024IsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtGLP2024IsolationModeWrapperTraderV2>;
    getContractAt(
      name: "PendlePtGLPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtGLPPriceOracle>;
    getContractAt(
      name: "PendlePtIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtIsolationModeTokenVaultV1>;
    getContractAt(
      name: "PendlePtIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "PendlePtIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtIsolationModeVaultFactory>;
    getContractAt(
      name: "PendlePtIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "PendlePtPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePtPriceOracle>;
    getContractAt(
      name: "PendleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleRegistry>;
    getContractAt(
      name: "PendleYtGLP2024IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYtGLP2024IsolationModeTokenVaultV1>;
    getContractAt(
      name: "PendleYtGLP2024IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYtGLP2024IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "PendleYtGLP2024IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYtGLP2024IsolationModeVaultFactory>;
    getContractAt(
      name: "PendleYtGLP2024IsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYtGLP2024IsolationModeWrapperTraderV2>;
    getContractAt(
      name: "PendleYtGLPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYtGLPPriceOracle>;
    getContractAt(
      name: "DolomiteCompatibleWhitelistForPlutusDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DolomiteCompatibleWhitelistForPlutusDAO>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeTokenVaultV1>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeUnwrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeUnwrapperTraderV1>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeVaultFactory>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeWrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeWrapperTraderV1>;
    getContractAt(
      name: "PlutusVaultGLPIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "PlutusVaultGLPPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPPriceOracle>;
    getContractAt(
      name: "PlutusVaultGLPWithChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultGLPWithChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "PlutusVaultRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlutusVaultRegistry>;
    getContractAt(
      name: "AsyncIsolationModeTraderBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncIsolationModeTraderBase>;
    getContractAt(
      name: "FreezableIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FreezableIsolationModeVaultFactory>;
    getContractAt(
      name: "AsyncIsolationModeUnwrapperTraderImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncIsolationModeUnwrapperTraderImpl>;
    getContractAt(
      name: "AsyncIsolationModeWrapperTraderImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncIsolationModeWrapperTraderImpl>;
    getContractAt(
      name: "IsolationModeTokenVaultV1ActionsImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1ActionsImpl>;
    getContractAt(
      name: "IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1>;
    getContractAt(
      name: "IsolationModeTokenVaultV1WithFreezable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1WithFreezable>;
    getContractAt(
      name: "IsolationModeTokenVaultV1WithFreezableAndPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1WithFreezableAndPausable>;
    getContractAt(
      name: "IsolationModeTokenVaultV1WithPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1WithPausable>;
    getContractAt(
      name: "IsolationModeTokenVaultV1WithPausableAndOnlyEoa",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTokenVaultV1WithPausableAndOnlyEoa>;
    getContractAt(
      name: "IsolationModeTraderBaseV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTraderBaseV2>;
    getContractAt(
      name: "IsolationModeUnwrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeUnwrapperTraderV1>;
    getContractAt(
      name: "IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeVaultFactory>;
    getContractAt(
      name: "IsolationModeWrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeWrapperTraderV1>;
    getContractAt(
      name: "IsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeWrapperTraderV2>;
    getContractAt(
      name: "UpgradeableAsyncIsolationModeUnwrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableAsyncIsolationModeUnwrapperTrader>;
    getContractAt(
      name: "UpgradeableAsyncIsolationModeWrapperTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableAsyncIsolationModeWrapperTrader>;
    getContractAt(
      name: "IsolationModeTraderProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeTraderProxy>;
    getContractAt(
      name: "IsolationModeUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsolationModeUpgradeableProxy>;
    getContractAt(
      name: "SimpleIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleIsolationModeTokenVaultV1>;
    getContractAt(
      name: "SimpleIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "SimpleIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleIsolationModeVaultFactory>;
    getContractAt(
      name: "SimpleIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "OdosAggregatorTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OdosAggregatorTrader>;
    getContractAt(
      name: "ParaswapAggregatorTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ParaswapAggregatorTrader>;
    getContractAt(
      name: "ParaswapAggregatorTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ParaswapAggregatorTraderV2>;
    getContractAt(
      name: "UmamiAssetVaultIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultIsolationModeTokenVaultV1>;
    getContractAt(
      name: "UmamiAssetVaultIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "UmamiAssetVaultIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultIsolationModeVaultFactory>;
    getContractAt(
      name: "UmamiAssetVaultIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "UmamiAssetVaultPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultPriceOracle>;
    getContractAt(
      name: "UmamiAssetVaultRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UmamiAssetVaultRegistry>;
    getContractAt(
      name: "IDolomiteAmmFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteAmmFactory>;
    getContractAt(
      name: "IDolomiteAmmPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteAmmPair>;
    getContractAt(
      name: "IDolomiteAmmRouterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteAmmRouterProxy>;
    getContractAt(
      name: "IDolomiteInterestSetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteInterestSetter>;
    getContractAt(
      name: "IDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMargin>;
    getContractAt(
      name: "IDolomiteMarginAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginAdmin>;
    getContractAt(
      name: "IDolomiteMarginCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginCallee>;
    getContractAt(
      name: "IDolomiteMarginExchangeWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginExchangeWrapper>;
    getContractAt(
      name: "IDolomiteMarginInternalTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginInternalTrader>;
    getContractAt(
      name: "IDolomiteMarginLiquidationCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomiteMarginLiquidationCallback>;
    getContractAt(
      name: "IDolomitePriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDolomitePriceOracle>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "CustomTestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CustomTestToken>;
    getContractAt(
      name: "CustomTestVaultToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CustomTestVaultToken>;
    getContractAt(
      name: "ICustomTestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICustomTestToken>;
    getContractAt(
      name: "ICustomTestVaultToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICustomTestVaultToken>;
    getContractAt(
      name: "TestAccountActionLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAccountActionLib>;
    getContractAt(
      name: "TestAdminPriceOracleV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAdminPriceOracleV1>;
    getContractAt(
      name: "TestAsyncIsolationModeTraderBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAsyncIsolationModeTraderBase>;
    getContractAt(
      name: "TestBaseLiquidatorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBaseLiquidatorProxy>;
    getContractAt(
      name: "TestBaseRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBaseRegistry>;
    getContractAt(
      name: "TestBitsLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBitsLib>;
    getContractAt(
      name: "TestChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestChainlinkAggregator>;
    getContractAt(
      name: "TestChainlinkAutomationPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestChainlinkAutomationPriceOracle>;
    getContractAt(
      name: "TestChainlinkRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestChainlinkRegistry>;
    getContractAt(
      name: "TestDecimalLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDecimalLib>;
    getContractAt(
      name: "TestDoAnything",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDoAnything>;
    getContractAt(
      name: "TestDolomiteMarginExchangeWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDolomiteMarginExchangeWrapper>;
    getContractAt(
      name: "TestDolomiteMarginInternalTrader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDolomiteMarginInternalTrader>;
    getContractAt(
      name: "TestDolomiteMarginMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDolomiteMarginMath>;
    getContractAt(
      name: "TestERC20Lib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20Lib>;
    getContractAt(
      name: "TestFreezableIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFreezableIsolationModeVaultFactory>;
    getContractAt(
      name: "TestGLPIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGLPIsolationModeTokenVaultV1>;
    getContractAt(
      name: "TestGLPIsolationModeTokenVaultV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGLPIsolationModeTokenVaultV2>;
    getContractAt(
      name: "TestGLPManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGLPManager>;
    getContractAt(
      name: "TestGLPMathLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGLPMathLib>;
    getContractAt(
      name: "TestGmxDataStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGmxDataStore>;
    getContractAt(
      name: "TestGMXIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGMXIsolationModeTokenVaultV1>;
    getContractAt(
      name: "TestGmxReader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGmxReader>;
    getContractAt(
      name: "TestGmxV2IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGmxV2IsolationModeTokenVaultV1>;
    getContractAt(
      name: "TestGmxV2IsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGmxV2IsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "TestGmxV2IsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGmxV2IsolationModeVaultFactory>;
    getContractAt(
      name: "TestHandlerRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestHandlerRegistry>;
    getContractAt(
      name: "TestHasLiquidatorRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestHasLiquidatorRegistry>;
    getContractAt(
      name: "TestInterestIndexLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestInterestIndexLib>;
    getContractAt(
      name: "TestInterestSetter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestInterestSetter>;
    getContractAt(
      name: "TestIsolationModeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeFactory>;
    getContractAt(
      name: "TestIsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeTokenVaultV1>;
    getContractAt(
      name: "TestIsolationModeTokenVaultV1WithFreezable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithFreezable>;
    getContractAt(
      name: "TestIsolationModeTokenVaultV1WithFreezableAndPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithFreezableAndPausable>;
    getContractAt(
      name: "TestIsolationModeTokenVaultV1WithPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithPausable>;
    getContractAt(
      name: "TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeTokenVaultV1WithPausableAndOnlyEoa>;
    getContractAt(
      name: "TestIsolationModeUnwrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeUnwrapperTraderV1>;
    getContractAt(
      name: "TestIsolationModeUnwrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeUnwrapperTraderV2>;
    getContractAt(
      name: "TestIsolationModeWrapperTraderV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeWrapperTraderV1>;
    getContractAt(
      name: "TestIsolationModeWrapperTraderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestIsolationModeWrapperTraderV2>;
    getContractAt(
      name: "TestJonesUSDCFarm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestJonesUSDCFarm>;
    getContractAt(
      name: "TestPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPair>;
    getContractAt(
      name: "TestPendlePtOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPendlePtOracle>;
    getContractAt(
      name: "TestPendleYtGLP2024IsolationModeTokenVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPendleYtGLP2024IsolationModeTokenVaultV1>;
    getContractAt(
      name: "TestPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPriceOracle>;
    getContractAt(
      name: "TestRequire",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRequire>;
    getContractAt(
      name: "TestSimpleIsolationModeVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSimpleIsolationModeVaultFactory>;
    getContractAt(
      name: "TestTypes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTypes>;
    getContractAt(
      name: "TestVesterImplementationV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestVesterImplementationV1>;
    getContractAt(
      name: "TestVesterImplementationV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestVesterImplementationV2>;
    getContractAt(
      name: "IAlgebraPoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlgebraPoolErrors>;
    getContractAt(
      name: "SafeGettersForDolomiteMargin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeGettersForDolomiteMargin>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
