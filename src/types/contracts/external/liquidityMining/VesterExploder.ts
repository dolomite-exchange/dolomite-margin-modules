/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export interface VesterExploderInterface extends utils.Interface {
  functions: {
    "DOLOMITE_MARGIN()": FunctionFragment;
    "VESTER()": FunctionFragment;
    "explodePosition(uint256)": FunctionFragment;
    "isHandler(address)": FunctionFragment;
    "ownerSetIsHandler(address,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DOLOMITE_MARGIN"
      | "VESTER"
      | "explodePosition"
      | "isHandler"
      | "ownerSetIsHandler"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DOLOMITE_MARGIN",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "VESTER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "explodePosition",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "isHandler", values: [string]): string;
  encodeFunctionData(
    functionFragment: "ownerSetIsHandler",
    values: [string, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "DOLOMITE_MARGIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "VESTER", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "explodePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isHandler", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetIsHandler",
    data: BytesLike
  ): Result;

  events: {
    "HandlerSet(address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "HandlerSet"): EventFragment;
}

export interface HandlerSetEventObject {
  _handler: string;
  _isHandler: boolean;
}
export type HandlerSetEvent = TypedEvent<
  [string, boolean],
  HandlerSetEventObject
>;

export type HandlerSetEventFilter = TypedEventFilter<HandlerSetEvent>;

export interface VesterExploder extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: VesterExploderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<[string]>;

    VESTER(overrides?: CallOverrides): Promise<[string]>;

    explodePosition(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    isHandler(_handler: string, overrides?: CallOverrides): Promise<[boolean]>;

    ownerSetIsHandler(
      _handler: string,
      _isHandler: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

  VESTER(overrides?: CallOverrides): Promise<string>;

  explodePosition(
    _id: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  isHandler(_handler: string, overrides?: CallOverrides): Promise<boolean>;

  ownerSetIsHandler(
    _handler: string,
    _isHandler: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

    VESTER(overrides?: CallOverrides): Promise<string>;

    explodePosition(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isHandler(_handler: string, overrides?: CallOverrides): Promise<boolean>;

    ownerSetIsHandler(
      _handler: string,
      _isHandler: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "HandlerSet(address,bool)"(
      _handler?: null,
      _isHandler?: null
    ): HandlerSetEventFilter;
    HandlerSet(_handler?: null, _isHandler?: null): HandlerSetEventFilter;
  };

  estimateGas: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<BigNumber>;

    VESTER(overrides?: CallOverrides): Promise<BigNumber>;

    explodePosition(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    isHandler(_handler: string, overrides?: CallOverrides): Promise<BigNumber>;

    ownerSetIsHandler(
      _handler: string,
      _isHandler: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    VESTER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    explodePosition(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    isHandler(
      _handler: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerSetIsHandler(
      _handler: string,
      _isHandler: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
