/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export interface IDepositWithdrawalProxyInterface extends utils.Interface {
  functions: {
    "depositETH(uint256)": FunctionFragment;
    "depositETHIntoDefaultAccount()": FunctionFragment;
    "depositPar(uint256,uint256,uint256)": FunctionFragment;
    "depositParIntoDefaultAccount(uint256,uint256)": FunctionFragment;
    "depositWei(uint256,uint256,uint256)": FunctionFragment;
    "depositWeiIntoDefaultAccount(uint256,uint256)": FunctionFragment;
    "withdrawETH(uint256,uint256,uint8)": FunctionFragment;
    "withdrawETHFromDefaultAccount(uint256,uint8)": FunctionFragment;
    "withdrawPar(uint256,uint256,uint256,uint8)": FunctionFragment;
    "withdrawParFromDefaultAccount(uint256,uint256,uint8)": FunctionFragment;
    "withdrawWei(uint256,uint256,uint256,uint8)": FunctionFragment;
    "withdrawWeiFromDefaultAccount(uint256,uint256,uint8)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "depositETH"
      | "depositETHIntoDefaultAccount"
      | "depositPar"
      | "depositParIntoDefaultAccount"
      | "depositWei"
      | "depositWeiIntoDefaultAccount"
      | "withdrawETH"
      | "withdrawETHFromDefaultAccount"
      | "withdrawPar"
      | "withdrawParFromDefaultAccount"
      | "withdrawWei"
      | "withdrawWeiFromDefaultAccount"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "depositETH",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositETHIntoDefaultAccount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositPar",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositParIntoDefaultAccount",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositWei",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositWeiIntoDefaultAccount",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawETH",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawETHFromDefaultAccount",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawPar",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawParFromDefaultAccount",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawWei",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawWeiFromDefaultAccount",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "depositETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositETHIntoDefaultAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "depositPar", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositParIntoDefaultAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "depositWei", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositWeiIntoDefaultAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawETHFromDefaultAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawPar",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawParFromDefaultAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawWei",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawWeiFromDefaultAccount",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IDepositWithdrawalProxy extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IDepositWithdrawalProxyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    depositETH(
      _toAccountIndex: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<ContractTransaction>;

    depositETHIntoDefaultAccount(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<ContractTransaction>;

    depositPar(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    depositParIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    depositWei(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    depositWeiIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawETH(
      _fromAccountIndex: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawETHFromDefaultAccount(
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawPar(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawParFromDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawWei(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    withdrawWeiFromDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  depositETH(
    _toAccountIndex: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractTransaction>;

  depositETHIntoDefaultAccount(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractTransaction>;

  depositPar(
    _toAccountIndex: BigNumberish,
    _marketId: BigNumberish,
    _amountPar: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  depositParIntoDefaultAccount(
    _marketId: BigNumberish,
    _amountPar: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  depositWei(
    _toAccountIndex: BigNumberish,
    _marketId: BigNumberish,
    _amountWei: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  depositWeiIntoDefaultAccount(
    _marketId: BigNumberish,
    _amountWei: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawETH(
    _fromAccountIndex: BigNumberish,
    _amountWei: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawETHFromDefaultAccount(
    _amountWei: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawPar(
    _fromAccountIndex: BigNumberish,
    _marketId: BigNumberish,
    _amountPar: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawParFromDefaultAccount(
    _marketId: BigNumberish,
    _amountPar: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawWei(
    _fromAccountIndex: BigNumberish,
    _marketId: BigNumberish,
    _amountWei: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  withdrawWeiFromDefaultAccount(
    _marketId: BigNumberish,
    _amountWei: BigNumberish,
    _balanceCheckFlag: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    depositETH(
      _toAccountIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositETHIntoDefaultAccount(overrides?: CallOverrides): Promise<void>;

    depositPar(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositParIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositWei(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositWeiIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawETH(
      _fromAccountIndex: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawETHFromDefaultAccount(
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawPar(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawParFromDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawWei(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawWeiFromDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    depositETH(
      _toAccountIndex: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<BigNumber>;

    depositETHIntoDefaultAccount(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<BigNumber>;

    depositPar(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    depositParIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    depositWei(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    depositWeiIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawETH(
      _fromAccountIndex: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawETHFromDefaultAccount(
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawPar(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawParFromDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawWei(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    withdrawWeiFromDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    depositETH(
      _toAccountIndex: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    depositETHIntoDefaultAccount(
      overrides?: PayableOverrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    depositPar(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    depositParIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    depositWei(
      _toAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    depositWeiIntoDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawETH(
      _fromAccountIndex: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawETHFromDefaultAccount(
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawPar(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawParFromDefaultAccount(
      _marketId: BigNumberish,
      _amountPar: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawWei(
      _fromAccountIndex: BigNumberish,
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    withdrawWeiFromDefaultAccount(
      _marketId: BigNumberish,
      _amountWei: BigNumberish,
      _balanceCheckFlag: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
