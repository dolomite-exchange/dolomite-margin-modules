/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export interface IPlutusVaultRegistryInterface extends utils.Interface {
  functions: {
    "dolomiteRegistry()": FunctionFragment;
    "ownerSetDolomiteRegistry(address)": FunctionFragment;
    "ownerSetPlutusToken(address)": FunctionFragment;
    "ownerSetPlvGlpFarm(address)": FunctionFragment;
    "ownerSetPlvGlpRouter(address)": FunctionFragment;
    "ownerSetPlvGlpToken(address)": FunctionFragment;
    "plutusToken()": FunctionFragment;
    "plvGlpFarm()": FunctionFragment;
    "plvGlpRouter()": FunctionFragment;
    "plvGlpToken()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "dolomiteRegistry"
      | "ownerSetDolomiteRegistry"
      | "ownerSetPlutusToken"
      | "ownerSetPlvGlpFarm"
      | "ownerSetPlvGlpRouter"
      | "ownerSetPlvGlpToken"
      | "plutusToken"
      | "plvGlpFarm"
      | "plvGlpRouter"
      | "plvGlpToken"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "dolomiteRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetDolomiteRegistry",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPlutusToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPlvGlpFarm",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPlvGlpRouter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerSetPlvGlpToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "plutusToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "plvGlpFarm",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "plvGlpRouter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "plvGlpToken",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "dolomiteRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetDolomiteRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPlutusToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPlvGlpFarm",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPlvGlpRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownerSetPlvGlpToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "plutusToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "plvGlpFarm", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "plvGlpRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "plvGlpToken",
    data: BytesLike
  ): Result;

  events: {
    "DolomiteRegistrySet(address)": EventFragment;
    "PlutusTokenSet(address)": EventFragment;
    "PlvGlpFarmSet(address)": EventFragment;
    "PlvGlpRouterSet(address)": EventFragment;
    "PlvGlpTokenSet(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DolomiteRegistrySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlutusTokenSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlvGlpFarmSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlvGlpRouterSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlvGlpTokenSet"): EventFragment;
}

export interface DolomiteRegistrySetEventObject {
  _dolomiteRegistry: string;
}
export type DolomiteRegistrySetEvent = TypedEvent<
  [string],
  DolomiteRegistrySetEventObject
>;

export type DolomiteRegistrySetEventFilter =
  TypedEventFilter<DolomiteRegistrySetEvent>;

export interface PlutusTokenSetEventObject {
  _plutusToken: string;
}
export type PlutusTokenSetEvent = TypedEvent<
  [string],
  PlutusTokenSetEventObject
>;

export type PlutusTokenSetEventFilter = TypedEventFilter<PlutusTokenSetEvent>;

export interface PlvGlpFarmSetEventObject {
  _plvGlpFarm: string;
}
export type PlvGlpFarmSetEvent = TypedEvent<[string], PlvGlpFarmSetEventObject>;

export type PlvGlpFarmSetEventFilter = TypedEventFilter<PlvGlpFarmSetEvent>;

export interface PlvGlpRouterSetEventObject {
  _plvGlpRouter: string;
}
export type PlvGlpRouterSetEvent = TypedEvent<
  [string],
  PlvGlpRouterSetEventObject
>;

export type PlvGlpRouterSetEventFilter = TypedEventFilter<PlvGlpRouterSetEvent>;

export interface PlvGlpTokenSetEventObject {
  _plvGlpToken: string;
}
export type PlvGlpTokenSetEvent = TypedEvent<
  [string],
  PlvGlpTokenSetEventObject
>;

export type PlvGlpTokenSetEventFilter = TypedEventFilter<PlvGlpTokenSetEvent>;

export interface IPlutusVaultRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPlutusVaultRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<[string]>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPlutusToken(
      _plutusToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPlvGlpFarm(
      _plvGlpFarm: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPlvGlpRouter(
      _plvGlpRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    ownerSetPlvGlpToken(
      _plvGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    plutusToken(overrides?: CallOverrides): Promise<[string]>;

    plvGlpFarm(overrides?: CallOverrides): Promise<[string]>;

    plvGlpRouter(overrides?: CallOverrides): Promise<[string]>;

    plvGlpToken(overrides?: CallOverrides): Promise<[string]>;
  };

  dolomiteRegistry(overrides?: CallOverrides): Promise<string>;

  ownerSetDolomiteRegistry(
    _dolomiteRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPlutusToken(
    _plutusToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPlvGlpFarm(
    _plvGlpFarm: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPlvGlpRouter(
    _plvGlpRouter: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  ownerSetPlvGlpToken(
    _plvGlpToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  plutusToken(overrides?: CallOverrides): Promise<string>;

  plvGlpFarm(overrides?: CallOverrides): Promise<string>;

  plvGlpRouter(overrides?: CallOverrides): Promise<string>;

  plvGlpToken(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<string>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPlutusToken(
      _plutusToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPlvGlpFarm(
      _plvGlpFarm: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPlvGlpRouter(
      _plvGlpRouter: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownerSetPlvGlpToken(
      _plvGlpToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    plutusToken(overrides?: CallOverrides): Promise<string>;

    plvGlpFarm(overrides?: CallOverrides): Promise<string>;

    plvGlpRouter(overrides?: CallOverrides): Promise<string>;

    plvGlpToken(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "DolomiteRegistrySet(address)"(
      _dolomiteRegistry?: string | null
    ): DolomiteRegistrySetEventFilter;
    DolomiteRegistrySet(
      _dolomiteRegistry?: string | null
    ): DolomiteRegistrySetEventFilter;

    "PlutusTokenSet(address)"(
      _plutusToken?: string | null
    ): PlutusTokenSetEventFilter;
    PlutusTokenSet(_plutusToken?: string | null): PlutusTokenSetEventFilter;

    "PlvGlpFarmSet(address)"(
      _plvGlpFarm?: string | null
    ): PlvGlpFarmSetEventFilter;
    PlvGlpFarmSet(_plvGlpFarm?: string | null): PlvGlpFarmSetEventFilter;

    "PlvGlpRouterSet(address)"(
      _plvGlpRouter?: string | null
    ): PlvGlpRouterSetEventFilter;
    PlvGlpRouterSet(_plvGlpRouter?: string | null): PlvGlpRouterSetEventFilter;

    "PlvGlpTokenSet(address)"(
      _plvGlpToken?: string | null
    ): PlvGlpTokenSetEventFilter;
    PlvGlpTokenSet(_plvGlpToken?: string | null): PlvGlpTokenSetEventFilter;
  };

  estimateGas: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPlutusToken(
      _plutusToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPlvGlpFarm(
      _plvGlpFarm: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPlvGlpRouter(
      _plvGlpRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    ownerSetPlvGlpToken(
      _plvGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    plutusToken(overrides?: CallOverrides): Promise<BigNumber>;

    plvGlpFarm(overrides?: CallOverrides): Promise<BigNumber>;

    plvGlpRouter(overrides?: CallOverrides): Promise<BigNumber>;

    plvGlpToken(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    dolomiteRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerSetDolomiteRegistry(
      _dolomiteRegistry: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPlutusToken(
      _plutusToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPlvGlpFarm(
      _plvGlpFarm: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPlvGlpRouter(
      _plvGlpRouter: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    ownerSetPlvGlpToken(
      _plvGlpToken: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    plutusToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    plvGlpFarm(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    plvGlpRouter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    plvGlpToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
