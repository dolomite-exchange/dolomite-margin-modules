/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export declare namespace GmxDeposit {
  export type AddressesStruct = {
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    market: string;
    initialLongToken: string;
    initialShortToken: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type AddressesStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string[],
    string[]
  ] & {
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    market: string;
    initialLongToken: string;
    initialShortToken: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type NumbersStruct = {
    initialLongTokenAmount: BigNumberish;
    initialShortTokenAmount: BigNumberish;
    minMarketTokens: BigNumberish;
    updatedAtBlock: BigNumberish;
    executionFee: BigNumberish;
    callbackGasLimit: BigNumberish;
  };

  export type NumbersStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    initialLongTokenAmount: BigNumber;
    initialShortTokenAmount: BigNumber;
    minMarketTokens: BigNumber;
    updatedAtBlock: BigNumber;
    executionFee: BigNumber;
    callbackGasLimit: BigNumber;
  };

  export type FlagsStruct = { shouldUnwrapNativeToken: boolean };

  export type FlagsStructOutput = [boolean] & {
    shouldUnwrapNativeToken: boolean;
  };

  export type DepositPropsStruct = {
    addresses: GmxDeposit.AddressesStruct;
    numbers: GmxDeposit.NumbersStruct;
    flags: GmxDeposit.FlagsStruct;
  };

  export type DepositPropsStructOutput = [
    GmxDeposit.AddressesStructOutput,
    GmxDeposit.NumbersStructOutput,
    GmxDeposit.FlagsStructOutput
  ] & {
    addresses: GmxDeposit.AddressesStructOutput;
    numbers: GmxDeposit.NumbersStructOutput;
    flags: GmxDeposit.FlagsStructOutput;
  };
}

export declare namespace GmxEventUtils {
  export type AddressKeyValueStruct = { key: string; value: string };

  export type AddressKeyValueStructOutput = [string, string] & {
    key: string;
    value: string;
  };

  export type AddressArrayKeyValueStruct = { key: string; value: string[] };

  export type AddressArrayKeyValueStructOutput = [string, string[]] & {
    key: string;
    value: string[];
  };

  export type AddressItemsStruct = {
    items: GmxEventUtils.AddressKeyValueStruct[];
    arrayItems: GmxEventUtils.AddressArrayKeyValueStruct[];
  };

  export type AddressItemsStructOutput = [
    GmxEventUtils.AddressKeyValueStructOutput[],
    GmxEventUtils.AddressArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.AddressKeyValueStructOutput[];
    arrayItems: GmxEventUtils.AddressArrayKeyValueStructOutput[];
  };

  export type UintKeyValueStruct = { key: string; value: BigNumberish };

  export type UintKeyValueStructOutput = [string, BigNumber] & {
    key: string;
    value: BigNumber;
  };

  export type UintArrayKeyValueStruct = { key: string; value: BigNumberish[] };

  export type UintArrayKeyValueStructOutput = [string, BigNumber[]] & {
    key: string;
    value: BigNumber[];
  };

  export type UintItemsStruct = {
    items: GmxEventUtils.UintKeyValueStruct[];
    arrayItems: GmxEventUtils.UintArrayKeyValueStruct[];
  };

  export type UintItemsStructOutput = [
    GmxEventUtils.UintKeyValueStructOutput[],
    GmxEventUtils.UintArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.UintKeyValueStructOutput[];
    arrayItems: GmxEventUtils.UintArrayKeyValueStructOutput[];
  };

  export type IntKeyValueStruct = { key: string; value: BigNumberish };

  export type IntKeyValueStructOutput = [string, BigNumber] & {
    key: string;
    value: BigNumber;
  };

  export type IntArrayKeyValueStruct = { key: string; value: BigNumberish[] };

  export type IntArrayKeyValueStructOutput = [string, BigNumber[]] & {
    key: string;
    value: BigNumber[];
  };

  export type IntItemsStruct = {
    items: GmxEventUtils.IntKeyValueStruct[];
    arrayItems: GmxEventUtils.IntArrayKeyValueStruct[];
  };

  export type IntItemsStructOutput = [
    GmxEventUtils.IntKeyValueStructOutput[],
    GmxEventUtils.IntArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.IntKeyValueStructOutput[];
    arrayItems: GmxEventUtils.IntArrayKeyValueStructOutput[];
  };

  export type BoolKeyValueStruct = { key: string; value: boolean };

  export type BoolKeyValueStructOutput = [string, boolean] & {
    key: string;
    value: boolean;
  };

  export type BoolArrayKeyValueStruct = { key: string; value: boolean[] };

  export type BoolArrayKeyValueStructOutput = [string, boolean[]] & {
    key: string;
    value: boolean[];
  };

  export type BoolItemsStruct = {
    items: GmxEventUtils.BoolKeyValueStruct[];
    arrayItems: GmxEventUtils.BoolArrayKeyValueStruct[];
  };

  export type BoolItemsStructOutput = [
    GmxEventUtils.BoolKeyValueStructOutput[],
    GmxEventUtils.BoolArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.BoolKeyValueStructOutput[];
    arrayItems: GmxEventUtils.BoolArrayKeyValueStructOutput[];
  };

  export type Bytes32KeyValueStruct = { key: string; value: BytesLike };

  export type Bytes32KeyValueStructOutput = [string, string] & {
    key: string;
    value: string;
  };

  export type Bytes32ArrayKeyValueStruct = { key: string; value: BytesLike[] };

  export type Bytes32ArrayKeyValueStructOutput = [string, string[]] & {
    key: string;
    value: string[];
  };

  export type Bytes32ItemsStruct = {
    items: GmxEventUtils.Bytes32KeyValueStruct[];
    arrayItems: GmxEventUtils.Bytes32ArrayKeyValueStruct[];
  };

  export type Bytes32ItemsStructOutput = [
    GmxEventUtils.Bytes32KeyValueStructOutput[],
    GmxEventUtils.Bytes32ArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.Bytes32KeyValueStructOutput[];
    arrayItems: GmxEventUtils.Bytes32ArrayKeyValueStructOutput[];
  };

  export type BytesKeyValueStruct = { key: string; value: BytesLike };

  export type BytesKeyValueStructOutput = [string, string] & {
    key: string;
    value: string;
  };

  export type BytesArrayKeyValueStruct = { key: string; value: BytesLike[] };

  export type BytesArrayKeyValueStructOutput = [string, string[]] & {
    key: string;
    value: string[];
  };

  export type BytesItemsStruct = {
    items: GmxEventUtils.BytesKeyValueStruct[];
    arrayItems: GmxEventUtils.BytesArrayKeyValueStruct[];
  };

  export type BytesItemsStructOutput = [
    GmxEventUtils.BytesKeyValueStructOutput[],
    GmxEventUtils.BytesArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.BytesKeyValueStructOutput[];
    arrayItems: GmxEventUtils.BytesArrayKeyValueStructOutput[];
  };

  export type StringKeyValueStruct = { key: string; value: string };

  export type StringKeyValueStructOutput = [string, string] & {
    key: string;
    value: string;
  };

  export type StringArrayKeyValueStruct = { key: string; value: string[] };

  export type StringArrayKeyValueStructOutput = [string, string[]] & {
    key: string;
    value: string[];
  };

  export type StringItemsStruct = {
    items: GmxEventUtils.StringKeyValueStruct[];
    arrayItems: GmxEventUtils.StringArrayKeyValueStruct[];
  };

  export type StringItemsStructOutput = [
    GmxEventUtils.StringKeyValueStructOutput[],
    GmxEventUtils.StringArrayKeyValueStructOutput[]
  ] & {
    items: GmxEventUtils.StringKeyValueStructOutput[];
    arrayItems: GmxEventUtils.StringArrayKeyValueStructOutput[];
  };

  export type EventLogDataStruct = {
    addressItems: GmxEventUtils.AddressItemsStruct;
    uintItems: GmxEventUtils.UintItemsStruct;
    intItems: GmxEventUtils.IntItemsStruct;
    boolItems: GmxEventUtils.BoolItemsStruct;
    bytes32Items: GmxEventUtils.Bytes32ItemsStruct;
    bytesItems: GmxEventUtils.BytesItemsStruct;
    stringItems: GmxEventUtils.StringItemsStruct;
  };

  export type EventLogDataStructOutput = [
    GmxEventUtils.AddressItemsStructOutput,
    GmxEventUtils.UintItemsStructOutput,
    GmxEventUtils.IntItemsStructOutput,
    GmxEventUtils.BoolItemsStructOutput,
    GmxEventUtils.Bytes32ItemsStructOutput,
    GmxEventUtils.BytesItemsStructOutput,
    GmxEventUtils.StringItemsStructOutput
  ] & {
    addressItems: GmxEventUtils.AddressItemsStructOutput;
    uintItems: GmxEventUtils.UintItemsStructOutput;
    intItems: GmxEventUtils.IntItemsStructOutput;
    boolItems: GmxEventUtils.BoolItemsStructOutput;
    bytes32Items: GmxEventUtils.Bytes32ItemsStructOutput;
    bytesItems: GmxEventUtils.BytesItemsStructOutput;
    stringItems: GmxEventUtils.StringItemsStructOutput;
  };
}

export interface IGmxDepositCallbackReceiverInterface extends utils.Interface {
  functions: {
    "afterDepositCancellation(bytes32,((address,address,address,address,address,address,address,address[],address[]),(uint256,uint256,uint256,uint256,uint256,uint256),(bool)),(((string,address)[],(string,address[])[]),((string,uint256)[],(string,uint256[])[]),((string,int256)[],(string,int256[])[]),((string,bool)[],(string,bool[])[]),((string,bytes32)[],(string,bytes32[])[]),((string,bytes)[],(string,bytes[])[]),((string,string)[],(string,string[])[])))": FunctionFragment;
    "afterDepositExecution(bytes32,((address,address,address,address,address,address,address,address[],address[]),(uint256,uint256,uint256,uint256,uint256,uint256),(bool)),(((string,address)[],(string,address[])[]),((string,uint256)[],(string,uint256[])[]),((string,int256)[],(string,int256[])[]),((string,bool)[],(string,bool[])[]),((string,bytes32)[],(string,bytes32[])[]),((string,bytes)[],(string,bytes[])[]),((string,string)[],(string,string[])[])))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "afterDepositCancellation" | "afterDepositExecution"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "afterDepositCancellation",
    values: [
      BytesLike,
      GmxDeposit.DepositPropsStruct,
      GmxEventUtils.EventLogDataStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "afterDepositExecution",
    values: [
      BytesLike,
      GmxDeposit.DepositPropsStruct,
      GmxEventUtils.EventLogDataStruct
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "afterDepositCancellation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "afterDepositExecution",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IGmxDepositCallbackReceiver extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGmxDepositCallbackReceiverInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    afterDepositCancellation(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    afterDepositExecution(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  afterDepositCancellation(
    _key: BytesLike,
    _deposit: GmxDeposit.DepositPropsStruct,
    _eventData: GmxEventUtils.EventLogDataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  afterDepositExecution(
    _key: BytesLike,
    _deposit: GmxDeposit.DepositPropsStruct,
    _eventData: GmxEventUtils.EventLogDataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    afterDepositCancellation(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    afterDepositExecution(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    afterDepositCancellation(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    afterDepositExecution(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    afterDepositCancellation(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    afterDepositExecution(
      _key: BytesLike,
      _deposit: GmxDeposit.DepositPropsStruct,
      _eventData: GmxEventUtils.EventLogDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
